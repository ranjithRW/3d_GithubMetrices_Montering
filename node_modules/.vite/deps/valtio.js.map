{
  "version": 3,
  "sources": ["../../use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../use-sync-external-store/shim/index.js", "../../valtio/esm/index.js", "../../proxy-compare/src/index.ts", "../../valtio/esm/vanilla.js"],
  "sourcesContent": ["/**\r\n * @license React\r\n * use-sync-external-store-shim.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  (function() {\r\n\r\n          'use strict';\r\n\r\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\nif (\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\r\n    'function'\r\n) {\r\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\r\n}\r\n          var React = require('react');\r\n\r\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nfunction error(format) {\r\n  {\r\n    {\r\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n        args[_key2 - 1] = arguments[_key2];\r\n      }\r\n\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  {\r\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n\r\n    var argsWithFormat = args.map(function (item) {\r\n      return String(item);\r\n    }); // Careful: RN currently depends on this prefix\r\n\r\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n\r\n/**\r\n * inlined Object.is polyfill to avoid requiring consumers ship their own\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n */\r\nfunction is(x, y) {\r\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\r\n  ;\r\n}\r\n\r\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\r\n\r\n// dispatch for CommonJS interop named imports.\r\n\r\nvar useState = React.useState,\r\n    useEffect = React.useEffect,\r\n    useLayoutEffect = React.useLayoutEffect,\r\n    useDebugValue = React.useDebugValue;\r\nvar didWarnOld18Alpha = false;\r\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\r\n// because of a very particular set of implementation details and assumptions\r\n// -- change any one of them and it will break. The most important assumption\r\n// is that updates are always synchronous, because concurrent rendering is\r\n// only available in versions of React that also have a built-in\r\n// useSyncExternalStore API. And we only use this shim when the built-in API\r\n// does not exist.\r\n//\r\n// Do not assume that the clever hacks used by this hook also work in general.\r\n// The point of this shim is to replace the need for hacks by other libraries.\r\n\r\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\r\n// React do not expose a way to check if we're hydrating. So users of the shim\r\n// will need to track that themselves and return the correct value\r\n// from `getSnapshot`.\r\ngetServerSnapshot) {\r\n  {\r\n    if (!didWarnOld18Alpha) {\r\n      if (React.startTransition !== undefined) {\r\n        didWarnOld18Alpha = true;\r\n\r\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\r\n      }\r\n    }\r\n  } // Read the current snapshot from the store on every render. Again, this\r\n  // breaks the rules of React, and only works here because of specific\r\n  // implementation details, most importantly that updates are\r\n  // always synchronous.\r\n\r\n\r\n  var value = getSnapshot();\r\n\r\n  {\r\n    if (!didWarnUncachedGetSnapshot) {\r\n      var cachedValue = getSnapshot();\r\n\r\n      if (!objectIs(value, cachedValue)) {\r\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\r\n\r\n        didWarnUncachedGetSnapshot = true;\r\n      }\r\n    }\r\n  } // Because updates are synchronous, we don't queue them. Instead we force a\r\n  // re-render whenever the subscribed state changes by updating an some\r\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\r\n  // the current value.\r\n  //\r\n  // Because we don't actually use the state returned by the useState hook, we\r\n  // can save a bit of memory by storing other stuff in that slot.\r\n  //\r\n  // To implement the early bailout, we need to track some things on a mutable\r\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\r\n  // our useState hook instead.\r\n  //\r\n  // To force a re-render, we call forceUpdate({inst}). That works because the\r\n  // new object always fails an equality check.\r\n\r\n\r\n  var _useState = useState({\r\n    inst: {\r\n      value: value,\r\n      getSnapshot: getSnapshot\r\n    }\r\n  }),\r\n      inst = _useState[0].inst,\r\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\r\n  // in the layout phase so we can access it during the tearing check that\r\n  // happens on subscribe.\r\n\r\n\r\n  useLayoutEffect(function () {\r\n    inst.value = value;\r\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\r\n    // commit phase if there was an interleaved mutation. In concurrent mode\r\n    // this can happen all the time, but even in synchronous mode, an earlier\r\n    // effect may have mutated the store.\r\n\r\n    if (checkIfSnapshotChanged(inst)) {\r\n      // Force a re-render.\r\n      forceUpdate({\r\n        inst: inst\r\n      });\r\n    }\r\n  }, [subscribe, value, getSnapshot]);\r\n  useEffect(function () {\r\n    // Check for changes right before subscribing. Subsequent changes will be\r\n    // detected in the subscription handler.\r\n    if (checkIfSnapshotChanged(inst)) {\r\n      // Force a re-render.\r\n      forceUpdate({\r\n        inst: inst\r\n      });\r\n    }\r\n\r\n    var handleStoreChange = function () {\r\n      // TODO: Because there is no cross-renderer API for batching updates, it's\r\n      // up to the consumer of this library to wrap their subscription event\r\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\r\n      // the case and print a warning in development?\r\n      // The store changed. Check if the snapshot changed since the last time we\r\n      // read from the store.\r\n      if (checkIfSnapshotChanged(inst)) {\r\n        // Force a re-render.\r\n        forceUpdate({\r\n          inst: inst\r\n        });\r\n      }\r\n    }; // Subscribe to the store and return a clean-up function.\r\n\r\n\r\n    return subscribe(handleStoreChange);\r\n  }, [subscribe]);\r\n  useDebugValue(value);\r\n  return value;\r\n}\r\n\r\nfunction checkIfSnapshotChanged(inst) {\r\n  var latestGetSnapshot = inst.getSnapshot;\r\n  var prevValue = inst.value;\r\n\r\n  try {\r\n    var nextValue = latestGetSnapshot();\r\n    return !objectIs(prevValue, nextValue);\r\n  } catch (error) {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\r\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\r\n  // React do not expose a way to check if we're hydrating. So users of the shim\r\n  // will need to track that themselves and return the correct value\r\n  // from `getSnapshot`.\r\n  return getSnapshot();\r\n}\r\n\r\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\r\n\r\nvar isServerEnvironment = !canUseDOM;\r\n\r\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\r\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\r\n\r\nexports.useSyncExternalStore = useSyncExternalStore$2;\r\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\nif (\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\r\n    'function'\r\n) {\r\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\r\n}\r\n        \r\n  })();\r\n}\r\n", "'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\r\n} else {\r\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\r\n}\r\n", "import { useRef, useCallback, useEffect, useMemo, useDebugValue } from 'react';\r\nimport { isChanged, createProxy, affectedToPathList } from 'proxy-compare';\r\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/index.js';\r\nimport { subscribe, snapshot } from 'valtio/vanilla';\r\nexport { getVersion, proxy, ref, snapshot, subscribe, getHandler as unstable_getHandler } from 'valtio/vanilla';\r\n\r\nconst { useSyncExternalStore } = useSyncExternalStoreExports;\r\nconst useAffectedDebugValue = (state, affected) => {\r\n  const pathList = useRef();\r\n  useEffect(() => {\r\n    pathList.current = affectedToPathList(state, affected);\r\n  });\r\n  useDebugValue(pathList.current);\r\n};\r\nfunction useSnapshot(proxyObject, options) {\r\n  const notifyInSync = options == null ? void 0 : options.sync;\r\n  const lastSnapshot = useRef();\r\n  const lastAffected = useRef();\r\n  let inRender = true;\r\n  const currSnapshot = useSyncExternalStore(useCallback((callback) => {\r\n    const unsub = subscribe(proxyObject, callback, notifyInSync);\r\n    callback();\r\n    return unsub;\r\n  }, [proxyObject, notifyInSync]), () => {\r\n    const nextSnapshot = snapshot(proxyObject);\r\n    try {\r\n      if (!inRender && lastSnapshot.current && lastAffected.current && !isChanged(lastSnapshot.current, nextSnapshot, lastAffected.current, /* @__PURE__ */ new WeakMap())) {\r\n        return lastSnapshot.current;\r\n      }\r\n    } catch (e) {\r\n    }\r\n    return nextSnapshot;\r\n  }, () => snapshot(proxyObject));\r\n  inRender = false;\r\n  const currAffected = /* @__PURE__ */ new WeakMap();\r\n  useEffect(() => {\r\n    lastSnapshot.current = currSnapshot;\r\n    lastAffected.current = currAffected;\r\n  });\r\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\r\n    useAffectedDebugValue(currSnapshot, currAffected);\r\n  }\r\n  const proxyCache = useMemo(() => /* @__PURE__ */ new WeakMap(), []);\r\n  return createProxy(currSnapshot, currAffected, proxyCache);\r\n}\r\n\r\nexport { useSnapshot };\r\n", "// symbols\nconst OWN_KEYS_SYMBOL = Symbol();\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfreeze = (obj: object) => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj);\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype Affected = WeakMap<object, Set<string | symbol>>;\ntype ProxyCache<T extends object> = WeakMap<object, ProxyHandler<T>>;\ntype ProxyHandler<T extends object> = {\n  [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object>;\n  [AFFECTED_PROPERTY]?: Affected;\n  get(target: T, key: string | symbol): unknown;\n  has(target: T, key: string | symbol): boolean;\n  getOwnPropertyDescriptor(target: T, key: string | symbol): PropertyDescriptor | undefined;\n  ownKeys(target: T): (string | symbol)[];\n  set?(target: T, key: string | symbol, value: unknown): boolean;\n  deleteProperty?(target: T, key: string | symbol): boolean;\n};\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  let trackObject = false; // for trackMemo\n  const recordUsage = (h: ProxyHandler<T>, key: string | symbol, skipWithOwnKeys?: boolean) => {\n    if (!trackObject) {\n      let used = (h[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = new Set();\n        (h[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (!skipWithOwnKeys || !used.has(OWN_KEYS_SYMBOL)) {\n        used.add(key);\n      }\n    }\n  };\n  const recordObjectAsUsed = (h: ProxyHandler<T>) => {\n    trackObject = true;\n    (h[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    [FROZEN_PROPERTY]: frozen,\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(this, key);\n      return createProxy(\n        (target as any)[key],\n        (this[AFFECTED_PROPERTY] as Affected),\n        this[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed(this);\n        return true;\n      }\n      // LIMITATION: We simply record the same as `get`.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if `'a' in obj` is handled.\n      recordUsage(this, key);\n      return key in target;\n    },\n    getOwnPropertyDescriptor(target, key) {\n      // LIMITATION: We simply record the same as `get`.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if `obj.getOwnPropertyDescriptor('a'))` is handled.\n      recordUsage(this, key, true);\n      return Object.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(this, OWN_KEYS_SYMBOL);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return handler;\n};\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const origObj = (\n    obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj }\n  )[GET_ORIGINAL_SYMBOL]; // unwrap proxy\n  const target = origObj || obj;\n  const frozen = isFrozen(target);\n  let proxyHandler: ProxyHandler<typeof target> | undefined = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!proxyHandler || proxyHandler[FROZEN_PROPERTY] !== frozen) {\n    proxyHandler = createProxyHandler<T extends object ? T : never>(target, frozen);\n    proxyHandler[PROXY_PROPERTY] = new Proxy(\n      frozen ? unfreeze(target) : target,\n      proxyHandler,\n    ) as typeof target;\n    if (proxyCache) {\n      proxyCache.set(target, proxyHandler);\n    }\n  }\n  proxyHandler[AFFECTED_PROPERTY] = affected as Affected;\n  proxyHandler[PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return proxyHandler[PROXY_PROPERTY] as typeof target;\n};\n\nconst isOwnKeysChanged = (origObj: object, nextObj: object) => {\n  const origKeys = Reflect.ownKeys(origObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return origKeys.length !== nextKeys.length\n    || origKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} origObj - The original object to compare.\n * @param {object} nextObj - Object to compare with the original one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.a\n *\n * isChanged(original, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(original, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  origObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(origObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(origObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(origObj);\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(origObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of used) {\n    const c = key === OWN_KEYS_SYMBOL ? isOwnKeysChanged(origObj, nextObj)\n      : isChanged(\n        (origObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n    if (c === true || c === false) changed = c;\n    if (changed) break;\n  }\n  if (changed === null) changed = true;\n  if (cache) {\n    cache.set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: changed,\n    });\n  }\n  return changed;\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Obejct.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param {object} obj - Object to mark as tracked or not.\n * @param {mark} boolean - Boolean indicating whether you want to track this object or not.\n * @returns {undefined} - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n// convert affected to path list\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = (affected as Affected).get(x as object);\n    if (used) {\n      used.forEach((key) => {\n        walk((x as any)[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n", "import { getUntracked, markToTrack } from 'proxy-compare';\r\n\r\nconst VERSION = (import.meta.env && import.meta.env.MODE) !== \"production\" ? Symbol(\"VERSION\") : Symbol();\r\nconst LISTENERS = (import.meta.env && import.meta.env.MODE) !== \"production\" ? Symbol(\"LISTENERS\") : Symbol();\r\nconst SNAPSHOT = (import.meta.env && import.meta.env.MODE) !== \"production\" ? Symbol(\"SNAPSHOT\") : Symbol();\r\nconst HANDLER = (import.meta.env && import.meta.env.MODE) !== \"production\" ? Symbol(\"HANDLER\") : Symbol();\r\nconst PROMISE_RESULT = (import.meta.env && import.meta.env.MODE) !== \"production\" ? Symbol(\"PROMISE_RESULT\") : Symbol();\r\nconst PROMISE_ERROR = (import.meta.env && import.meta.env.MODE) !== \"production\" ? Symbol(\"PROMISE_ERROR\") : Symbol();\r\nconst refSet = /* @__PURE__ */ new WeakSet();\r\nfunction ref(o) {\r\n  refSet.add(o);\r\n  return o;\r\n}\r\nconst isObject = (x) => typeof x === \"object\" && x !== null;\r\nconst canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer);\r\nconst proxyCache = /* @__PURE__ */ new WeakMap();\r\nlet globalVersion = 1;\r\nconst snapshotCache = /* @__PURE__ */ new WeakMap();\r\nfunction proxy(initialObject = {}) {\r\n  if (!isObject(initialObject)) {\r\n    throw new Error(\"object required\");\r\n  }\r\n  const found = proxyCache.get(initialObject);\r\n  if (found) {\r\n    return found;\r\n  }\r\n  let version = globalVersion;\r\n  const listeners = /* @__PURE__ */ new Set();\r\n  const notifyUpdate = (op, nextVersion = ++globalVersion) => {\r\n    if (version !== nextVersion) {\r\n      version = nextVersion;\r\n      listeners.forEach((listener) => listener(op, nextVersion));\r\n    }\r\n  };\r\n  const propListeners = /* @__PURE__ */ new Map();\r\n  const getPropListener = (prop) => {\r\n    let propListener = propListeners.get(prop);\r\n    if (!propListener) {\r\n      propListener = (op, nextVersion) => {\r\n        const newOp = [...op];\r\n        newOp[1] = [prop, ...newOp[1]];\r\n        notifyUpdate(newOp, nextVersion);\r\n      };\r\n      propListeners.set(prop, propListener);\r\n    }\r\n    return propListener;\r\n  };\r\n  const popPropListener = (prop) => {\r\n    const propListener = propListeners.get(prop);\r\n    propListeners.delete(prop);\r\n    return propListener;\r\n  };\r\n  const createSnapshot = (target, receiver) => {\r\n    const cache = snapshotCache.get(receiver);\r\n    if ((cache == null ? void 0 : cache[0]) === version) {\r\n      return cache[1];\r\n    }\r\n    const snapshot2 = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\r\n    markToTrack(snapshot2, true);\r\n    snapshotCache.set(receiver, [version, snapshot2]);\r\n    Reflect.ownKeys(target).forEach((key) => {\r\n      const value = Reflect.get(target, key, receiver);\r\n      if (refSet.has(value)) {\r\n        markToTrack(value, false);\r\n        snapshot2[key] = value;\r\n      } else if (value instanceof Promise) {\r\n        if (PROMISE_RESULT in value) {\r\n          snapshot2[key] = value[PROMISE_RESULT];\r\n        } else {\r\n          const errorOrPromise = value[PROMISE_ERROR] || value;\r\n          Object.defineProperty(snapshot2, key, {\r\n            get() {\r\n              if (PROMISE_RESULT in value) {\r\n                return value[PROMISE_RESULT];\r\n              }\r\n              throw errorOrPromise;\r\n            }\r\n          });\r\n        }\r\n      } else if (value == null ? void 0 : value[LISTENERS]) {\r\n        snapshot2[key] = value[SNAPSHOT];\r\n      } else {\r\n        snapshot2[key] = value;\r\n      }\r\n    });\r\n    Object.freeze(snapshot2);\r\n    return snapshot2;\r\n  };\r\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\r\n  const handler = {\r\n    get(target, prop, receiver) {\r\n      if (prop === VERSION) {\r\n        return version;\r\n      }\r\n      if (prop === LISTENERS) {\r\n        return listeners;\r\n      }\r\n      if (prop === SNAPSHOT) {\r\n        return createSnapshot(target, receiver);\r\n      }\r\n      if (prop === HANDLER) {\r\n        return handler;\r\n      }\r\n      return Reflect.get(target, prop, receiver);\r\n    },\r\n    deleteProperty(target, prop) {\r\n      const prevValue = Reflect.get(target, prop);\r\n      const childListeners = prevValue == null ? void 0 : prevValue[LISTENERS];\r\n      if (childListeners) {\r\n        childListeners.delete(popPropListener(prop));\r\n      }\r\n      const deleted = Reflect.deleteProperty(target, prop);\r\n      if (deleted) {\r\n        notifyUpdate([\"delete\", [prop], prevValue]);\r\n      }\r\n      return deleted;\r\n    },\r\n    is: Object.is,\r\n    canProxy,\r\n    set(target, prop, value, receiver) {\r\n      var _a;\r\n      const hasPrevValue = Reflect.has(target, prop);\r\n      const prevValue = Reflect.get(target, prop, receiver);\r\n      if (hasPrevValue && this.is(prevValue, value)) {\r\n        return true;\r\n      }\r\n      const childListeners = prevValue == null ? void 0 : prevValue[LISTENERS];\r\n      if (childListeners) {\r\n        childListeners.delete(popPropListener(prop));\r\n      }\r\n      if (isObject(value)) {\r\n        value = getUntracked(value) || value;\r\n      }\r\n      let nextValue;\r\n      if ((_a = Object.getOwnPropertyDescriptor(target, prop)) == null ? void 0 : _a.set) {\r\n        nextValue = value;\r\n      } else if (value instanceof Promise) {\r\n        nextValue = value.then((v) => {\r\n          nextValue[PROMISE_RESULT] = v;\r\n          notifyUpdate([\"resolve\", [prop], v]);\r\n          return v;\r\n        }).catch((e) => {\r\n          nextValue[PROMISE_ERROR] = e;\r\n          notifyUpdate([\"reject\", [prop], e]);\r\n        });\r\n      } else if (value == null ? void 0 : value[LISTENERS]) {\r\n        nextValue = value;\r\n        nextValue[LISTENERS].add(getPropListener(prop));\r\n      } else if (this.canProxy(value)) {\r\n        nextValue = proxy(value);\r\n        nextValue[LISTENERS].add(getPropListener(prop));\r\n      } else {\r\n        nextValue = value;\r\n      }\r\n      Reflect.set(target, prop, nextValue, receiver);\r\n      notifyUpdate([\"set\", [prop], value, prevValue]);\r\n      return true;\r\n    }\r\n  };\r\n  const proxyObject = new Proxy(baseObject, handler);\r\n  proxyCache.set(initialObject, proxyObject);\r\n  Reflect.ownKeys(initialObject).forEach((key) => {\r\n    const desc = Object.getOwnPropertyDescriptor(initialObject, key);\r\n    if (desc.get || desc.set) {\r\n      Object.defineProperty(baseObject, key, desc);\r\n    } else {\r\n      proxyObject[key] = initialObject[key];\r\n    }\r\n  });\r\n  return proxyObject;\r\n}\r\nfunction getVersion(proxyObject) {\r\n  return isObject(proxyObject) ? proxyObject[VERSION] : void 0;\r\n}\r\nfunction subscribe(proxyObject, callback, notifyInSync) {\r\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[LISTENERS])) {\r\n    console.warn(\"Please use proxy object\");\r\n  }\r\n  let promise;\r\n  const ops = [];\r\n  const listener = (op) => {\r\n    ops.push(op);\r\n    if (notifyInSync) {\r\n      callback(ops.splice(0));\r\n      return;\r\n    }\r\n    if (!promise) {\r\n      promise = Promise.resolve().then(() => {\r\n        promise = void 0;\r\n        callback(ops.splice(0));\r\n      });\r\n    }\r\n  };\r\n  proxyObject[LISTENERS].add(listener);\r\n  return () => {\r\n    proxyObject[LISTENERS].delete(listener);\r\n  };\r\n}\r\nfunction snapshot(proxyObject) {\r\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[SNAPSHOT])) {\r\n    console.warn(\"Please use proxy object\");\r\n  }\r\n  return proxyObject[SNAPSHOT];\r\n}\r\nfunction getHandler(proxyObject) {\r\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[HANDLER])) {\r\n    console.warn(\"Please use proxy object\");\r\n  }\r\n  return proxyObject[HANDLER];\r\n}\r\n\r\nexport { getHandler, getVersion, proxy, ref, snapshot, subscribe };\r\n"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AAAA;AAYA,QAAI,MAAuC;AACzC,MAAC,YAAW;AAEJ;AAGV,YACE,OAAO,mCAAmC,eAC1C,OAAO,+BAA+B,gCACpC,YACF;AACA,yCAA+B,4BAA4B,IAAI,MAAM,CAAC;AAAA,QACxE;AACU,YAAI,QAAQ;AAEtB,YAAI,uBAAuB,MAAM;AAEjC,uBAAe,QAAQ;AACrB;AACE;AACE,uBAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,CAAC,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AACjH,qBAAK,QAAQ,KAAK,UAAU;AAAA,cAC9B;AAEA,2BAAa,SAAS,QAAQ,IAAI;AAAA,YACpC;AAAA,UACF;AAAA,QACF;AAEA,8BAAsB,OAAO,QAAQ,MAAM;AAGzC;AACE,gBAAI,yBAAyB,qBAAqB;AAClD,gBAAI,QAAQ,uBAAuB,iBAAiB;AAEpD,gBAAI,UAAU,IAAI;AAChB,wBAAU;AACV,qBAAO,KAAK,OAAO,CAAC,KAAK,CAAC;AAAA,YAC5B;AAGA,gBAAI,iBAAiB,KAAK,IAAI,SAAU,MAAM;AAC5C,qBAAO,OAAO,IAAI;AAAA,YACpB,CAAC;AAED,2BAAe,QAAQ,cAAc,MAAM;AAI3C,qBAAS,UAAU,MAAM,KAAK,QAAQ,QAAQ,SAAS,cAAc;AAAA,UACvE;AAAA,QACF;AAMA,oBAAY,GAAG,IAAG;AAChB,iBAAO,MAAM,MAAM,OAAM,KAAK,IAAI,MAAM,IAAI,OAAM,MAAM,KAAK,OAAM;AAAA,QAErE;AAEA,YAAI,WAAW,OAAO,OAAO,OAAO,aAAa,OAAO,KAAK;AAI7D,YAAI,WAAW,MAAM,UACjB,aAAY,MAAM,WAClB,kBAAkB,MAAM,iBACxB,iBAAgB,MAAM;AAC1B,YAAI,oBAAoB;AACxB,YAAI,6BAA6B;AAWjC,uCAA8B,YAAW,aAIzC,mBAAmB;AACjB;AACE,gBAAI,CAAC,mBAAmB;AACtB,kBAAI,MAAM,oBAAoB,QAAW;AACvC,oCAAoB;AAEpB,sBAAM,gMAA+M;AAAA,cACvN;AAAA,YACF;AAAA,UACF;AAMA,cAAI,QAAQ,YAAY;AAExB;AACE,gBAAI,CAAC,4BAA4B;AAC/B,kBAAI,cAAc,YAAY;AAE9B,kBAAI,CAAC,SAAS,OAAO,WAAW,GAAG;AACjC,sBAAM,sEAAsE;AAE5E,6CAA6B;AAAA,cAC/B;AAAA,YACF;AAAA,UACF;AAgBA,cAAI,YAAY,SAAS;AAAA,YACvB,MAAM;AAAA,cACJ;AAAA,cACA;AAAA,YACF;AAAA,UACF,CAAC,GACG,OAAO,UAAU,GAAG,MACpB,cAAc,UAAU;AAK5B,0BAAgB,WAAY;AAC1B,iBAAK,QAAQ;AACb,iBAAK,cAAc;AAKnB,gBAAI,uBAAuB,IAAI,GAAG;AAEhC,0BAAY;AAAA,gBACV;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF,GAAG,CAAC,YAAW,OAAO,WAAW,CAAC;AAClC,qBAAU,WAAY;AAGpB,gBAAI,uBAAuB,IAAI,GAAG;AAEhC,0BAAY;AAAA,gBACV;AAAA,cACF,CAAC;AAAA,YACH;AAEA,gBAAI,oBAAoB,WAAY;AAOlC,kBAAI,uBAAuB,IAAI,GAAG;AAEhC,4BAAY;AAAA,kBACV;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAGA,mBAAO,WAAU,iBAAiB;AAAA,UACpC,GAAG,CAAC,UAAS,CAAC;AACd,yBAAc,KAAK;AACnB,iBAAO;AAAA,QACT;AAEA,wCAAgC,MAAM;AACpC,cAAI,oBAAoB,KAAK;AAC7B,cAAI,YAAY,KAAK;AAErB,cAAI;AACF,gBAAI,YAAY,kBAAkB;AAClC,mBAAO,CAAC,SAAS,WAAW,SAAS;AAAA,UACvC,SAAS,QAAP;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,wCAAgC,YAAW,aAAa,mBAAmB;AAKzE,iBAAO,YAAY;AAAA,QACrB;AAEA,YAAI,YAAY,CAAC,CAAE,QAAO,WAAW,eAAe,OAAO,OAAO,aAAa,eAAe,OAAO,OAAO,SAAS,kBAAkB;AAEvI,YAAI,sBAAsB,CAAC;AAE3B,YAAI,OAAO,sBAAsB,yBAAyB;AAC1D,YAAI,yBAAyB,MAAM,yBAAyB,SAAY,MAAM,uBAAuB;AAErG,gBAAQ,uBAAuB;AAE/B,YACE,OAAO,mCAAmC,eAC1C,OAAO,+BAA+B,+BACpC,YACF;AACA,yCAA+B,2BAA2B,IAAI,MAAM,CAAC;AAAA,QACvE;AAAA,MAEE,GAAG;AAAA,IACL;AAAA;AAAA;;;AC9OA;AAAA;AAAA;AAEA,QAAI,OAAuC;AACzC,aAAO,UAAU;AAAA,IACnB,OAAO;AACL,aAAO,UAAU;AAAA,IACnB;AAAA;AAAA;;;ACNA,mBAAuE;;;ACCvE,IAAM,IAAkB,OAAA;AAAxB,IACM,IAAoB,OAAA;AAD1B,IAEM,IAAsB,OAAA;AAF5B,IAaM,IAAW,OAAO;AAbxB,IAeM,IAAiB,oBAAI;AAf3B,IAkBM,IAAsB,QAC1B,MAAQ,GAAe,IAAI,EAAA,IACvB,EAAe,IAAI,EAAA,IAClB,EAAS,EAAA,MAAS,OAAO,aAAa,EAAS,EAAA,MAAS,MAAM;AArBrE,IA0BM,IAAY,QACH,AAAA,OAAN,MAAM,YAAkB,AAAN,OAAM;AA3BjC,IAqEM,IAAqB,CAAmB,IAAY,OAAA;AACxD,MAAI,KAAA;AACJ,QAAM,KAAc,CAAC,IAAoB,IAAsB,OAAA;AAC7D,QAAA,CAAK,IAAa;AAChB,UAAI,KAAQ,GAAC,EAAiC,IAAI,EAAA;AAC7C,YACH,MAAO,oBAAI,OACV,GAAC,EAAiC,IAAI,IAAS,EAAA,IAE7C,MAAoB,GAAK,IAAI,CAAA,KAChC,GAAK,IAAI,EAAA;IAAA;EAAA,GAQT,KAA2B,EAC/B,GAAmB,IACnB,IAAI,IAAQ,IAAA;AACV,WAAI,OAAQ,IACH,KAET,IAAY,MAAM,EAAA,GACX,EACJ,GAAe,KACf,KAAA,GACD,KAAA,CAAA;EAAA,GAGJ,IAAI,IAAQ,IAAA;AACV,WAAI,OAAQ,IAjBd,MAAA,MAkBuB,KAjBrB,EAAiC,OAAO,EAAA,GAAA,QAuBxC,IAAY,MAAM,EAAA,GACX,MAAO;EAAA,GAEhB,yBAAyB,IAAQ,IAAA;AAK/B,WADA,GAAY,MAAM,IAAA,IAAK,GAChB,OAAO,yBAAyB,IAAQ,EAAA;EAAA,GAEjD,QAAQ,IAAA;AAEN,WADA,GAAY,MAAM,CAAA,GACX,QAAQ,QAAQ,EAAA;EAAA,EAAA;AAM3B,SAHI,MACF,IAAQ,MAAM,GAAQ,iBAAiB,MAAA,QAElC;AAAA;AA9HT,IAgKa,IAAc,CACzB,IACA,IACA,OAAA;AAEA,MAAA,CAAK,EAAgB,EAAA;AAAM,WAAO;AAClC,QAGM,KAFJ,GACA,MACwB,IACpB,KA3IU,SAChB,OAAO,SAAS,EAAA,KAGd,OAAO,OAAO,OAAO,0BAA0B,EAAA,CAAA,EAAM,KAClD,QAAA,CAAgB,GAAW,QAAA,GAsIR,EAAA;AACxB,MAAI,KACF,MAAe,GAAyC,IAAI,EAAA;AAc9D,SAZK,MAAgB,GAAY,MAAsB,MACrD,MAAe,EAAiD,IAAQ,EAAA,GACxE,GAAY,IAAmB,IAAI,MACjC,KAvIY,SAAA;AAChB,QAAI,MAAM,QAAQ,EAAA;AAEhB,aAAO,MAAM,KAAK,EAAA;AAIpB,UAAM,KAAc,OAAO,0BAA0B,EAAA;AAErD,WADA,OAAO,OAAO,EAAA,EAAa,QAAS,QAAA;AAAW,SAAK,eAAA;IAAe,CAAA,GAC5D,OAAO,OAAO,EAAS,EAAA,GAAM,EAAA;EAAA,GA8Hd,EAAA,IAAU,IAC5B,EAAA,GAEE,MACF,GAAW,IAAI,IAAQ,EAAA,IAG3B,GAAY,IAAsB,IAClC,GAAY,IAAyB,IAC9B,GAAY;AAAA;AA1LrB,IA6LM,IAAmB,CAAC,IAAiB,OAAA;AACzC,QAAM,KAAW,QAAQ,QAAQ,EAAA,GAC3B,KAAW,QAAQ,QAAQ,EAAA;AACjC,SAAO,GAAS,WAAW,GAAS,UAC/B,GAAS,KAAK,CAAC,IAAG,OAAM,OAAM,GAAS,GAAA;AAAA;AAjM9C,IA4Oa,IAAY,CACvB,IACA,IACA,IACA,OAAA;AAEA,MAAI,OAAO,GAAG,IAAS,EAAA;AACrB,WAAA;AAEF,MAAA,CAAK,EAAS,EAAA,KAAA,CAAa,EAAS,EAAA;AAAU,WAAA;AAC9C,QAAM,KAAQ,GAAsB,IAAI,EAAA;AACxC,MAAA,CAAK;AAAM,WAAA;AACX,MAAI,IAAO;AACT,UAAM,KAAO,GAAuB,IAAI,EAAA;AACxC,QAAI,MAAO,GAAG,MAA2B;AACvC,aAAO,GAAG;AAGX,OAAuB,IAAI,IAAS,EACnC,GAAwB,IACxB,GAAA,MAAoB,CAAA;EAAA;AAGxB,MAAI,KAA0B;AAE9B,aAAW,MAAO,IAAM;AACtB,UAAM,KAAI,OAAQ,IAAkB,EAAiB,IAAS,EAAA,IAC1D,EACC,GAAgB,KAChB,GAAgB,KACjB,IACA,EAAA;AAGJ,QAAA,AADI,OACJ,QADI,AAAc,OAAd,SAA2B,MAAU,KACrC;AAAS;EAAA;AASf,SAPgB,AAAZ,OAAY,QAAM,MAAA,OAClB,MACF,GAAM,IAAI,IAAS,EACjB,GAAwB,IACxB,GAAoB,GAAA,CAAA,GAGjB;AAAA;AAvRT,IAsTa,IAAmB,QAC1B,EAAgB,EAAA,KACV,GAAsC,MAEzC;AA1TT,IAyVa,IAAc,CAAC,IAAa,KAAA,SAAO;AAC9C,IAAe,IAAI,IAAK,EAAA;AAAA;AA1V1B,IA8Va,IAAqB,CAChC,IACA,OAAA;AAEA,QAAM,KAA8B,CAAA,GAC9B,KAAO,oBAAI,WACX,KAAO,CAAC,IAAY,OAAA;AACxB,QAAI,GAAK,IAAI,EAAA;AAEX;AAEE,MAAS,EAAA,KACX,GAAK,IAAI,EAAA;AAEX,UAAM,KAAQ,GAAsB,IAAI,EAAA;AACpC,SACF,GAAK,QAAS,QAAA;AACZ,SAAM,GAAU,KAAM,KAAO,CAAA,GAAI,IAAM,EAAA,IAAO,CAAC,EAAA,CAAA;IAAA,CAAA,IAExC,MACT,GAAK,KAAK,EAAA;EAAA;AAId,SADA,GAAK,EAAA,GACE;AAAA;;;ADrXT,kBAAwC;;;AEFxC;AAEA,IAAM,UAAW,aAAY,OAAO,YAAY,IAAI,UAAU,eAAe,OAAO,SAAS,IAAI,OAAO;AACxG,IAAM,YAAa,aAAY,OAAO,YAAY,IAAI,UAAU,eAAe,OAAO,WAAW,IAAI,OAAO;AAC5G,IAAM,WAAY,aAAY,OAAO,YAAY,IAAI,UAAU,eAAe,OAAO,UAAU,IAAI,OAAO;AAC1G,IAAM,UAAW,aAAY,OAAO,YAAY,IAAI,UAAU,eAAe,OAAO,SAAS,IAAI,OAAO;AACxG,IAAM,iBAAkB,aAAY,OAAO,YAAY,IAAI,UAAU,eAAe,OAAO,gBAAgB,IAAI,OAAO;AACtH,IAAM,gBAAiB,aAAY,OAAO,YAAY,IAAI,UAAU,eAAe,OAAO,eAAe,IAAI,OAAO;AACpH,IAAM,SAAyB,oBAAI,QAAQ;AAC3C,aAAa,IAAG;AACd,SAAO,IAAI,EAAC;AACZ,SAAO;AACT;AACA,IAAM,WAAW,CAAC,MAAM,OAAO,MAAM,YAAY,MAAM;AACvD,IAAM,WAAW,CAAC,MAAM,SAAS,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAM,OAAM,QAAQ,CAAC,KAAK,CAAE,QAAO,YAAY,OAAO,CAAE,cAAa,YAAY,CAAE,cAAa,YAAY,CAAE,cAAa,UAAU,CAAE,cAAa,WAAW,CAAE,cAAa,SAAS,CAAE,cAAa,WAAW,CAAE,cAAa,WAAW,CAAE,cAAa;AAC9S,IAAM,aAA6B,oBAAI,QAAQ;AAC/C,IAAI,gBAAgB;AACpB,IAAM,gBAAgC,oBAAI,QAAQ;AAClD,eAAe,gBAAgB,CAAC,GAAG;AACjC,MAAI,CAAC,SAAS,aAAa,GAAG;AAC5B,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACnC;AACA,QAAM,QAAQ,WAAW,IAAI,aAAa;AAC1C,MAAI,OAAO;AACT,WAAO;AAAA,EACT;AACA,MAAI,UAAU;AACd,QAAM,YAA4B,oBAAI,IAAI;AAC1C,QAAM,eAAe,CAAC,IAAI,cAAc,EAAE,kBAAkB;AAC1D,QAAI,YAAY,aAAa;AAC3B,gBAAU;AACV,gBAAU,QAAQ,CAAC,aAAa,SAAS,IAAI,WAAW,CAAC;AAAA,IAC3D;AAAA,EACF;AACA,QAAM,gBAAgC,oBAAI,IAAI;AAC9C,QAAM,kBAAkB,CAAC,SAAS;AAChC,QAAI,eAAe,cAAc,IAAI,IAAI;AACzC,QAAI,CAAC,cAAc;AACjB,qBAAe,CAAC,IAAI,gBAAgB;AAClC,cAAM,QAAQ,CAAC,GAAG,EAAE;AACpB,cAAM,KAAK,CAAC,MAAM,GAAG,MAAM,EAAE;AAC7B,qBAAa,OAAO,WAAW;AAAA,MACjC;AACA,oBAAc,IAAI,MAAM,YAAY;AAAA,IACtC;AACA,WAAO;AAAA,EACT;AACA,QAAM,kBAAkB,CAAC,SAAS;AAChC,UAAM,eAAe,cAAc,IAAI,IAAI;AAC3C,kBAAc,OAAO,IAAI;AACzB,WAAO;AAAA,EACT;AACA,QAAM,iBAAiB,CAAC,QAAQ,aAAa;AAC3C,UAAM,QAAQ,cAAc,IAAI,QAAQ;AACxC,QAAK,UAAS,OAAO,SAAS,MAAM,QAAQ,SAAS;AACnD,aAAO,MAAM;AAAA,IACf;AACA,UAAM,YAAY,MAAM,QAAQ,MAAM,IAAI,CAAC,IAAI,OAAO,OAAO,OAAO,eAAe,MAAM,CAAC;AAC1F,MAAY,WAAW,IAAI;AAC3B,kBAAc,IAAI,UAAU,CAAC,SAAS,SAAS,CAAC;AAChD,YAAQ,QAAQ,MAAM,EAAE,QAAQ,CAAC,QAAQ;AACvC,YAAM,QAAQ,QAAQ,IAAI,QAAQ,KAAK,QAAQ;AAC/C,UAAI,OAAO,IAAI,KAAK,GAAG;AACrB,UAAY,OAAO,KAAK;AACxB,kBAAU,OAAO;AAAA,MACnB,WAAW,iBAAiB,SAAS;AACnC,YAAI,kBAAkB,OAAO;AAC3B,oBAAU,OAAO,MAAM;AAAA,QACzB,OAAO;AACL,gBAAM,iBAAiB,MAAM,kBAAkB;AAC/C,iBAAO,eAAe,WAAW,KAAK;AAAA,YACpC,MAAM;AACJ,kBAAI,kBAAkB,OAAO;AAC3B,uBAAO,MAAM;AAAA,cACf;AACA,oBAAM;AAAA,YACR;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,WAAW,SAAS,OAAO,SAAS,MAAM,YAAY;AACpD,kBAAU,OAAO,MAAM;AAAA,MACzB,OAAO;AACL,kBAAU,OAAO;AAAA,MACnB;AAAA,IACF,CAAC;AACD,WAAO,OAAO,SAAS;AACvB,WAAO;AAAA,EACT;AACA,QAAM,aAAa,MAAM,QAAQ,aAAa,IAAI,CAAC,IAAI,OAAO,OAAO,OAAO,eAAe,aAAa,CAAC;AACzG,QAAM,UAAU;AAAA,IACd,IAAI,QAAQ,MAAM,UAAU;AAC1B,UAAI,SAAS,SAAS;AACpB,eAAO;AAAA,MACT;AACA,UAAI,SAAS,WAAW;AACtB,eAAO;AAAA,MACT;AACA,UAAI,SAAS,UAAU;AACrB,eAAO,eAAe,QAAQ,QAAQ;AAAA,MACxC;AACA,UAAI,SAAS,SAAS;AACpB,eAAO;AAAA,MACT;AACA,aAAO,QAAQ,IAAI,QAAQ,MAAM,QAAQ;AAAA,IAC3C;AAAA,IACA,eAAe,QAAQ,MAAM;AAC3B,YAAM,YAAY,QAAQ,IAAI,QAAQ,IAAI;AAC1C,YAAM,iBAAiB,aAAa,OAAO,SAAS,UAAU;AAC9D,UAAI,gBAAgB;AAClB,uBAAe,OAAO,gBAAgB,IAAI,CAAC;AAAA,MAC7C;AACA,YAAM,UAAU,QAAQ,eAAe,QAAQ,IAAI;AACnD,UAAI,SAAS;AACX,qBAAa,CAAC,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;AAAA,MAC5C;AACA,aAAO;AAAA,IACT;AAAA,IACA,IAAI,OAAO;AAAA,IACX;AAAA,IACA,IAAI,QAAQ,MAAM,OAAO,UAAU;AACjC,UAAI;AACJ,YAAM,eAAe,QAAQ,IAAI,QAAQ,IAAI;AAC7C,YAAM,YAAY,QAAQ,IAAI,QAAQ,MAAM,QAAQ;AACpD,UAAI,gBAAgB,KAAK,GAAG,WAAW,KAAK,GAAG;AAC7C,eAAO;AAAA,MACT;AACA,YAAM,iBAAiB,aAAa,OAAO,SAAS,UAAU;AAC9D,UAAI,gBAAgB;AAClB,uBAAe,OAAO,gBAAgB,IAAI,CAAC;AAAA,MAC7C;AACA,UAAI,SAAS,KAAK,GAAG;AACnB,gBAAQ,EAAa,KAAK,KAAK;AAAA,MACjC;AACA,UAAI;AACJ,UAAK,MAAK,OAAO,yBAAyB,QAAQ,IAAI,MAAM,OAAO,SAAS,GAAG,KAAK;AAClF,oBAAY;AAAA,MACd,WAAW,iBAAiB,SAAS;AACnC,oBAAY,MAAM,KAAK,CAAC,MAAM;AAC5B,oBAAU,kBAAkB;AAC5B,uBAAa,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;AACnC,iBAAO;AAAA,QACT,CAAC,EAAE,MAAM,CAAC,OAAM;AACd,oBAAU,iBAAiB;AAC3B,uBAAa,CAAC,UAAU,CAAC,IAAI,GAAG,EAAC,CAAC;AAAA,QACpC,CAAC;AAAA,MACH,WAAW,SAAS,OAAO,SAAS,MAAM,YAAY;AACpD,oBAAY;AACZ,kBAAU,WAAW,IAAI,gBAAgB,IAAI,CAAC;AAAA,MAChD,WAAW,KAAK,SAAS,KAAK,GAAG;AAC/B,oBAAY,MAAM,KAAK;AACvB,kBAAU,WAAW,IAAI,gBAAgB,IAAI,CAAC;AAAA,MAChD,OAAO;AACL,oBAAY;AAAA,MACd;AACA,cAAQ,IAAI,QAAQ,MAAM,WAAW,QAAQ;AAC7C,mBAAa,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,SAAS,CAAC;AAC9C,aAAO;AAAA,IACT;AAAA,EACF;AACA,QAAM,cAAc,IAAI,MAAM,YAAY,OAAO;AACjD,aAAW,IAAI,eAAe,WAAW;AACzC,UAAQ,QAAQ,aAAa,EAAE,QAAQ,CAAC,QAAQ;AAC9C,UAAM,OAAO,OAAO,yBAAyB,eAAe,GAAG;AAC/D,QAAI,KAAK,OAAO,KAAK,KAAK;AACxB,aAAO,eAAe,YAAY,KAAK,IAAI;AAAA,IAC7C,OAAO;AACL,kBAAY,OAAO,cAAc;AAAA,IACnC;AAAA,EACF,CAAC;AACD,SAAO;AACT;AACA,oBAAoB,aAAa;AAC/B,SAAO,SAAS,WAAW,IAAI,YAAY,WAAW;AACxD;AACA,mBAAmB,aAAa,UAAU,cAAc;AACtD,MAAK,aAAY,OAAO,YAAY,IAAI,UAAU,gBAAgB,CAAE,gBAAe,OAAO,SAAS,YAAY,aAAa;AAC1H,YAAQ,KAAK,yBAAyB;AAAA,EACxC;AACA,MAAI;AACJ,QAAM,MAAM,CAAC;AACb,QAAM,WAAW,CAAC,OAAO;AACvB,QAAI,KAAK,EAAE;AACX,QAAI,cAAc;AAChB,eAAS,IAAI,OAAO,CAAC,CAAC;AACtB;AAAA,IACF;AACA,QAAI,CAAC,SAAS;AACZ,gBAAU,QAAQ,QAAQ,EAAE,KAAK,MAAM;AACrC,kBAAU;AACV,iBAAS,IAAI,OAAO,CAAC,CAAC;AAAA,MACxB,CAAC;AAAA,IACH;AAAA,EACF;AACA,cAAY,WAAW,IAAI,QAAQ;AACnC,SAAO,MAAM;AACX,gBAAY,WAAW,OAAO,QAAQ;AAAA,EACxC;AACF;AACA,kBAAkB,aAAa;AAC7B,MAAK,aAAY,OAAO,YAAY,IAAI,UAAU,gBAAgB,CAAE,gBAAe,OAAO,SAAS,YAAY,YAAY;AACzH,YAAQ,KAAK,yBAAyB;AAAA,EACxC;AACA,SAAO,YAAY;AACrB;AACA,oBAAoB,aAAa;AAC/B,MAAK,aAAY,OAAO,YAAY,IAAI,UAAU,gBAAgB,CAAE,gBAAe,OAAO,SAAS,YAAY,WAAW;AACxH,YAAQ,KAAK,yBAAyB;AAAA,EACxC;AACA,SAAO,YAAY;AACrB;;;AFjNA;AAMA,IAAM,EAAE,yBAAyB;AACjC,IAAM,wBAAwB,CAAC,OAAO,aAAa;AACjD,QAAM,WAAW,yBAAO;AACxB,8BAAU,MAAM;AACd,aAAS,UAAU,EAAmB,OAAO,QAAQ;AAAA,EACvD,CAAC;AACD,kCAAc,SAAS,OAAO;AAChC;AACA,qBAAqB,aAAa,SAAS;AACzC,QAAM,eAAe,WAAW,OAAO,SAAS,QAAQ;AACxD,QAAM,eAAe,yBAAO;AAC5B,QAAM,eAAe,yBAAO;AAC5B,MAAI,WAAW;AACf,QAAM,eAAe,qBAAqB,8BAAY,CAAC,aAAa;AAClE,UAAM,QAAQ,UAAU,aAAa,UAAU,YAAY;AAC3D,aAAS;AACT,WAAO;AAAA,EACT,GAAG,CAAC,aAAa,YAAY,CAAC,GAAG,MAAM;AACrC,UAAM,eAAe,SAAS,WAAW;AACzC,QAAI;AACF,UAAI,CAAC,YAAY,aAAa,WAAW,aAAa,WAAW,CAAC,EAAU,aAAa,SAAS,cAAc,aAAa,SAAyB,oBAAI,QAAQ,CAAC,GAAG;AACpK,eAAO,aAAa;AAAA,MACtB;AAAA,IACF,SAAS,IAAP;AAAA,IACF;AACA,WAAO;AAAA,EACT,GAAG,MAAM,SAAS,WAAW,CAAC;AAC9B,aAAW;AACX,QAAM,eAA+B,oBAAI,QAAQ;AACjD,8BAAU,MAAM;AACd,iBAAa,UAAU;AACvB,iBAAa,UAAU;AAAA,EACzB,CAAC;AACD,MAAK,cAAY,OAAO,aAAY,IAAI,UAAU,cAAc;AAC9D,0BAAsB,cAAc,YAAY;AAAA,EAClD;AACA,QAAM,cAAa,0BAAQ,MAAsB,oBAAI,QAAQ,GAAG,CAAC,CAAC;AAClE,SAAO,EAAY,cAAc,cAAc,WAAU;AAC3D;",
  "names": []
}
