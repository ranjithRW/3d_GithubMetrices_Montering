{
  "version": 3,
  "sources": ["../../lodash.pick/index.js", "../../lodash.omit/index.js", "../../stats.js/build/stats.min.js", "../../react-is/cjs/react-is.development.js", "../../react-is/index.js", "../../object-assign/index.js", "../../prop-types/lib/ReactPropTypesSecret.js", "../../prop-types/lib/has.js", "../../prop-types/checkPropTypes.js", "../../prop-types/factoryWithTypeCheckers.js", "../../prop-types/index.js", "../../@react-three/drei/web/Html.js", "../../@react-three/drei/web/CycleRaycast.js", "../../@react-three/drei/web/useCursor.js", "../../@react-three/drei/web/Loader.js", "../../@react-three/drei/core/useProgress.js", "../../@react-three/drei/web/ScrollControls.js", "../../@react-three/drei/web/PresentationControls.js", "../../@use-gesture/core/dist/maths-b2a210f4.esm.js", "../../@use-gesture/core/dist/actions-1416bf77.esm.js", "../../@use-gesture/react/dist/use-gesture-react.esm.js", "../../@use-gesture/core/dist/use-gesture-core.esm.js", "../../@react-three/drei/web/Select.js", "../../zustand/esm/shallow.js", "../../@react-three/drei/core/Billboard.js", "../../@react-three/drei/core/QuadraticBezierLine.js", "../../@react-three/drei/core/Line.js", "../../@react-three/drei/core/CubicBezierLine.js", "../../@react-three/drei/core/PositionalAudio.js", "../../@react-three/drei/core/Text.js", "../../troika-three-text/dist/troika-three-text.esm.js", "../../troika-worker-utils/dist/troika-worker-utils.esm.js", "../../webgl-sdf-generator/dist/webgl-sdf-generator.mjs", "../../bidi-js/dist/bidi.mjs", "../../troika-three-utils/dist/troika-three-utils.esm.js", "../../@react-three/drei/core/Text3D.js", "../../@react-three/drei/core/Effects.js", "../../@react-three/drei/core/GradientTexture.js", "../../@react-three/drei/core/Image.js", "../../@react-three/drei/core/shaderMaterial.js", "../../@react-three/drei/core/useTexture.js", "../../@react-three/drei/core/Edges.js", "../../@react-three/drei/core/Trail.js", "../../meshline/dist/meshline.es.js", "../../@react-three/drei/core/Sampler.js", "../../@react-three/drei/core/ComputedAttribute.js", "../../@react-three/drei/core/Clone.js", "../../@react-three/drei/core/OrthographicCamera.js", "../../@react-three/drei/core/PerspectiveCamera.js", "../../@react-three/drei/core/CubeCamera.js", "../../@react-three/drei/core/DeviceOrientationControls.js", "../../@react-three/drei/core/FlyControls.js", "../../@react-three/drei/core/MapControls.js", "../../@react-three/drei/core/OrbitControls.js", "../../@react-three/drei/core/TrackballControls.js", "../../@react-three/drei/core/ArcballControls.js", "../../@react-three/drei/core/TransformControls.js", "../../@react-three/drei/core/PointerLockControls.js", "../../@react-three/drei/core/FirstPersonControls.js", "../../@react-three/drei/core/GizmoHelper.js", "../../@react-three/drei/core/useCamera.js", "../../@react-three/drei/core/GizmoViewcube.js", "../../@react-three/drei/core/GizmoViewport.js", "../../@react-three/drei/core/useCubeTexture.js", "../../@react-three/drei/core/useFBX.js", "../../@react-three/drei/core/useGLTF.js", "../../@react-three/drei/core/useKTX2.js", "../../@react-three/drei/core/Stats.js", "../../@react-three/drei/helpers/useEffectfulState.js", "../../@react-three/drei/core/useDepthBuffer.js", "../../@react-three/drei/core/useFBO.js", "../../@react-three/drei/core/useAspect.js", "../../detect-gpu/src/internal/blocklistedGPUS.ts", "../../detect-gpu/src/internal/cleanRenderer.ts", "../../detect-gpu/node_modules/webgl-constants/dist/webgl-constants.esm.js", "../../detect-gpu/src/internal/ssr.ts", "../../detect-gpu/src/internal/deviceInfo.ts", "../../detect-gpu/src/internal/deobfuscateAppleGPU.ts", "../../detect-gpu/src/internal/getLevenshteinDistance.ts", "../../detect-gpu/src/internal/util.ts", "../../detect-gpu/src/internal/error.ts", "../../detect-gpu/src/index.ts", "../../detect-gpu/src/internal/getWebGLContext.ts", "../../detect-gpu/src/internal/deobfuscateRenderer.ts", "../../detect-gpu/src/internal/getGPUVersion.ts", "../../@react-three/drei/core/useDetectGPU.js", "../../@react-three/drei/core/useHelper.js", "../../@react-three/drei/core/useBVH.js", "../../three-mesh-bvh/src/core/MeshBVH.js", "../../three-mesh-bvh/src/core/Constants.js", "../../three-mesh-bvh/src/core/buildFunctions.js", "../../three-mesh-bvh/src/core/MeshBVHNode.js", "../../three-mesh-bvh/src/utils/ArrayBoxUtilities.js", "../../three-mesh-bvh/src/core/castFunctions.js", "../../three-mesh-bvh/src/math/OrientedBox.js", "../../three-mesh-bvh/src/math/SeparatingAxisBounds.js", "../../three-mesh-bvh/src/math/ExtendedTriangle.js", "../../three-mesh-bvh/src/math/MathUtilities.js", "../../three-mesh-bvh/src/utils/ThreeRayIntersectUtilities.js", "../../three-mesh-bvh/src/utils/GeometryRayIntersectUtilities.js", "../../three-mesh-bvh/src/utils/TriangleUtilities.js", "../../three-mesh-bvh/src/utils/PrimitivePool.js", "../../three-mesh-bvh/src/core/nodeBufferFunctions.js", "../../three-mesh-bvh/src/objects/MeshBVHVisualizer.js", "../../three-mesh-bvh/src/debug/Debug.js", "../../three-mesh-bvh/src/utils/ExtensionUtilities.js", "../../three-mesh-bvh/src/gpu/MeshBVHUniformStruct.js", "../../three-mesh-bvh/src/gpu/VertexAttributeTexture.js", "../../three-mesh-bvh/src/utils/StaticGeometryGenerator.js", "../../@react-three/drei/core/useContextBridge.js", "../../@react-three/drei/core/useAnimations.js", "../../@react-three/drei/core/useIntersect.js", "../../@react-three/drei/core/useBoxProjectedEnv.js", "../../@react-three/drei/core/BBAnchor.js", "../../@react-three/drei/core/CurveModifier.js", "../../@react-three/drei/core/MeshDistortMaterial.js", "../../@react-three/drei/helpers/glsl/distort.vert.glsl.js", "../../@react-three/drei/core/MeshWobbleMaterial.js", "../../@react-three/drei/core/MeshReflectorMaterial.js", "../../@react-three/drei/materials/BlurPass.js", "../../@react-three/drei/materials/ConvolutionMaterial.js", "../../@react-three/drei/materials/MeshReflectorMaterial.js", "../../@react-three/drei/core/PointMaterial.js", "../../@react-three/drei/core/softShadows.js", "../../@react-three/drei/core/shapes.js", "../../@react-three/drei/core/RoundedBox.js", "../../@react-three/drei/core/ScreenQuad.js", "../../@react-three/drei/core/Center.js", "../../@react-three/drei/core/Bounds.js", "../../@react-three/drei/core/CameraShake.js", "../../@react-three/drei/core/Float.js", "../../@react-three/drei/core/Stage.js", "../../@react-three/drei/core/Environment.js", "../../@react-three/drei/helpers/environment-assets.js", "../../@react-three/drei/helpers/glsl/GroundProjection.vert.glsl.js", "../../@react-three/drei/helpers/glsl/GroundProjection.frag.glsl.js", "../../@react-three/drei/core/ContactShadows.js", "../../@react-three/drei/core/Backdrop.js", "../../@react-three/drei/core/Shadow.js", "../../@react-three/drei/core/Reflector.js", "../../@react-three/drei/core/SpotLight.js", "../../@react-three/drei/materials/SpotLightMaterial.js", "../../@react-three/drei/core/Lightformer.js", "../../@react-three/drei/core/Sky.js", "../../@react-three/drei/core/Stars.js", "../../@react-three/drei/core/Cloud.js", "../../@react-three/drei/core/Sparkles.js", "../../@react-three/drei/helpers/glsl/Sparkles.frag.glsl.js", "../../@react-three/drei/helpers/glsl/Sparkles.vert.glsl.js", "../../@react-three/drei/core/useMatcapTexture.js", "../../@react-three/drei/core/useNormalTexture.js", "../../@react-three/drei/core/Points.js", "../../@react-three/drei/helpers/Position.js", "../../@react-three/drei/core/Instances.js", "../../react-composer/es/index.js", "../../@react-three/drei/core/Segments.js", "../../@react-three/drei/core/Detailed.js", "../../@react-three/drei/core/Preload.js", "../../@react-three/drei/core/BakeShadows.js", "../../@react-three/drei/core/meshBounds.js", "../../@react-three/drei/core/AdaptiveDpr.js", "../../@react-three/drei/core/AdaptiveEvents.js", "../../@react-three/drei/core/RenderTexture.js", "../../@react-three/drei/core/Mask.js", "../../@react-three/drei/web/View.js"],
  "sourcesContent": ["/**\r\n * lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0,\r\n    MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    symbolTag = '[object Symbol]';\r\n\r\n/** Detect free variable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n\r\n/** Detect free variable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n\r\n/**\r\n * A faster alternative to `Function#apply`, this function invokes `func`\r\n * with the `this` binding of `thisArg` and the arguments of `args`.\r\n *\r\n * @private\r\n * @param {Function} func The function to invoke.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} args The arguments to invoke `func` with.\r\n * @returns {*} Returns the result of `func`.\r\n */\r\nfunction apply(func, thisArg, args) {\r\n  switch (args.length) {\r\n    case 0: return func.call(thisArg);\r\n    case 1: return func.call(thisArg, args[0]);\r\n    case 2: return func.call(thisArg, args[0], args[1]);\r\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\r\n  }\r\n  return func.apply(thisArg, args);\r\n}\r\n\r\n/**\r\n * A specialized version of `_.map` for arrays without support for iteratee\r\n * shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new mapped array.\r\n */\r\nfunction arrayMap(array, iteratee) {\r\n  var index = -1,\r\n      length = array ? array.length : 0,\r\n      result = Array(length);\r\n\r\n  while (++index < length) {\r\n    result[index] = iteratee(array[index], index, array);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Appends the elements of `values` to `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to append.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayPush(array, values) {\r\n  var index = -1,\r\n      length = values.length,\r\n      offset = array.length;\r\n\r\n  while (++index < length) {\r\n    array[offset + index] = values[index];\r\n  }\r\n  return array;\r\n}\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = objectProto.toString;\r\n\r\n/** Built-in value references. */\r\nvar Symbol = root.Symbol,\r\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\r\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * The base implementation of `_.flatten` with support for restricting flattening.\r\n *\r\n * @private\r\n * @param {Array} array The array to flatten.\r\n * @param {number} depth The maximum recursion depth.\r\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n * @param {Array} [result=[]] The initial result value.\r\n * @returns {Array} Returns the new flattened array.\r\n */\r\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  predicate || (predicate = isFlattenable);\r\n  result || (result = []);\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (depth > 0 && predicate(value)) {\r\n      if (depth > 1) {\r\n        // Recursively flatten arrays (susceptible to call stack limits).\r\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n      } else {\r\n        arrayPush(result, value);\r\n      }\r\n    } else if (!isStrict) {\r\n      result[result.length] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.pick` without support for individual\r\n * property identifiers.\r\n *\r\n * @private\r\n * @param {Object} object The source object.\r\n * @param {string[]} props The property identifiers to pick.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction basePick(object, props) {\r\n  object = Object(object);\r\n  return basePickBy(object, props, function(value, key) {\r\n    return key in object;\r\n  });\r\n}\r\n\r\n/**\r\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The source object.\r\n * @param {string[]} props The property identifiers to pick from.\r\n * @param {Function} predicate The function invoked per property.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction basePickBy(object, props, predicate) {\r\n  var index = -1,\r\n      length = props.length,\r\n      result = {};\r\n\r\n  while (++index < length) {\r\n    var key = props[index],\r\n        value = object[key];\r\n\r\n    if (predicate(value, key)) {\r\n      result[key] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction baseRest(func, start) {\r\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\r\n  return function() {\r\n    var args = arguments,\r\n        index = -1,\r\n        length = nativeMax(args.length - start, 0),\r\n        array = Array(length);\r\n\r\n    while (++index < length) {\r\n      array[index] = args[start + index];\r\n    }\r\n    index = -1;\r\n    var otherArgs = Array(start + 1);\r\n    while (++index < start) {\r\n      otherArgs[index] = args[index];\r\n    }\r\n    otherArgs[start] = array;\r\n    return apply(func, this, otherArgs);\r\n  };\r\n}\r\n\r\n/**\r\n * Checks if `value` is a flattenable `arguments` object or array.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n */\r\nfunction isFlattenable(value) {\r\n  return isArray(value) || isArguments(value) ||\r\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\r\n}\r\n\r\n/**\r\n * Converts `value` to a string key if it's not a string or symbol.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {string|symbol} Returns the key.\r\n */\r\nfunction toKey(value) {\r\n  if (typeof value == 'string' || isSymbol(value)) {\r\n    return value;\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArguments(function() { return arguments; }());\r\n * // => true\r\n *\r\n * _.isArguments([1, 2, 3]);\r\n * // => false\r\n */\r\nfunction isArguments(value) {\r\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\r\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * _.isArrayLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLike(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLike('abc');\r\n * // => true\r\n *\r\n * _.isArrayLike(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLike(value) {\r\n  return value != null && isLength(value.length) && !isFunction(value);\r\n}\r\n\r\n/**\r\n * This method is like `_.isArrayLike` except that it also checks if `value`\r\n * is an object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array-like object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArrayLikeObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject('abc');\r\n * // => false\r\n *\r\n * _.isArrayLikeObject(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLikeObject(value) {\r\n  return isObjectLike(value) && isArrayLike(value);\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n  // The use of `Object#toString` avoids issues with the `typeof` operator\r\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\r\n  var tag = isObject(value) ? objectToString.call(value) : '';\r\n  return tag == funcTag || tag == genTag;\r\n}\r\n\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * _.isLength(3);\r\n * // => true\r\n *\r\n * _.isLength(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isLength(Infinity);\r\n * // => false\r\n *\r\n * _.isLength('3');\r\n * // => false\r\n */\r\nfunction isLength(value) {\r\n  return typeof value == 'number' &&\r\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n}\r\n\r\n/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n  var type = typeof value;\r\n  return !!value && (type == 'object' || type == 'function');\r\n}\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n  return !!value && typeof value == 'object';\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Symbol` primitive or object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n * @example\r\n *\r\n * _.isSymbol(Symbol.iterator);\r\n * // => true\r\n *\r\n * _.isSymbol('abc');\r\n * // => false\r\n */\r\nfunction isSymbol(value) {\r\n  return typeof value == 'symbol' ||\r\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n}\r\n\r\n/**\r\n * Creates an object composed of the picked `object` properties.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {...(string|string[])} [props] The property identifiers to pick.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.pick(object, ['a', 'c']);\r\n * // => { 'a': 1, 'c': 3 }\r\n */\r\nvar pick = baseRest(function(object, props) {\r\n  return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\r\n});\r\n\r\nmodule.exports = pick;\r\n", "/**\r\n * lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n\r\n/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0,\r\n    MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    symbolTag = '[object Symbol]';\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n\r\n/** Used to detect host constructors (Safari). */\r\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\r\n\r\n/** Used to detect unsigned integer values. */\r\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n/** Detect free variable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n\r\n/** Detect free variable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n\r\n/**\r\n * A faster alternative to `Function#apply`, this function invokes `func`\r\n * with the `this` binding of `thisArg` and the arguments of `args`.\r\n *\r\n * @private\r\n * @param {Function} func The function to invoke.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} args The arguments to invoke `func` with.\r\n * @returns {*} Returns the result of `func`.\r\n */\r\nfunction apply(func, thisArg, args) {\r\n  switch (args.length) {\r\n    case 0: return func.call(thisArg);\r\n    case 1: return func.call(thisArg, args[0]);\r\n    case 2: return func.call(thisArg, args[0], args[1]);\r\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\r\n  }\r\n  return func.apply(thisArg, args);\r\n}\r\n\r\n/**\r\n * A specialized version of `_.includes` for arrays without support for\r\n * specifying an index to search from.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to inspect.\r\n * @param {*} target The value to search for.\r\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\r\n */\r\nfunction arrayIncludes(array, value) {\r\n  var length = array ? array.length : 0;\r\n  return !!length && baseIndexOf(array, value, 0) > -1;\r\n}\r\n\r\n/**\r\n * This function is like `arrayIncludes` except that it accepts a comparator.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to inspect.\r\n * @param {*} target The value to search for.\r\n * @param {Function} comparator The comparator invoked per element.\r\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\r\n */\r\nfunction arrayIncludesWith(array, value, comparator) {\r\n  var index = -1,\r\n      length = array ? array.length : 0;\r\n\r\n  while (++index < length) {\r\n    if (comparator(value, array[index])) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * A specialized version of `_.map` for arrays without support for iteratee\r\n * shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new mapped array.\r\n */\r\nfunction arrayMap(array, iteratee) {\r\n  var index = -1,\r\n      length = array ? array.length : 0,\r\n      result = Array(length);\r\n\r\n  while (++index < length) {\r\n    result[index] = iteratee(array[index], index, array);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Appends the elements of `values` to `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to append.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayPush(array, values) {\r\n  var index = -1,\r\n      length = values.length,\r\n      offset = array.length;\r\n\r\n  while (++index < length) {\r\n    array[offset + index] = values[index];\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n * support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @param {number} fromIndex The index to search from.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n  var length = array.length,\r\n      index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n  while ((fromRight ? index-- : ++index < length)) {\r\n    if (predicate(array[index], index, array)) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseIndexOf(array, value, fromIndex) {\r\n  if (value !== value) {\r\n    return baseFindIndex(array, baseIsNaN, fromIndex);\r\n  }\r\n  var index = fromIndex - 1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    if (array[index] === value) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isNaN` without support for number objects.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n */\r\nfunction baseIsNaN(value) {\r\n  return value !== value;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\r\nfunction baseTimes(n, iteratee) {\r\n  var index = -1,\r\n      result = Array(n);\r\n\r\n  while (++index < n) {\r\n    result[index] = iteratee(index);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.unary` without support for storing metadata.\r\n *\r\n * @private\r\n * @param {Function} func The function to cap arguments for.\r\n * @returns {Function} Returns the new capped function.\r\n */\r\nfunction baseUnary(func) {\r\n  return function(value) {\r\n    return func(value);\r\n  };\r\n}\r\n\r\n/**\r\n * Checks if a cache value for `key` exists.\r\n *\r\n * @private\r\n * @param {Object} cache The cache to query.\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction cacheHas(cache, key) {\r\n  return cache.has(key);\r\n}\r\n\r\n/**\r\n * Gets the value at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction getValue(object, key) {\r\n  return object == null ? undefined : object[key];\r\n}\r\n\r\n/**\r\n * Checks if `value` is a host object in IE < 9.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\r\n */\r\nfunction isHostObject(value) {\r\n  // Many host objects are `Object` objects that can coerce to strings\r\n  // despite having improperly defined `toString` methods.\r\n  var result = false;\r\n  if (value != null && typeof value.toString != 'function') {\r\n    try {\r\n      result = !!(value + '');\r\n    } catch (e) {}\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Creates a unary function that invokes `func` with its argument transformed.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {Function} transform The argument transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overArg(func, transform) {\r\n  return function(arg) {\r\n    return func(transform(arg));\r\n  };\r\n}\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype,\r\n    funcProto = Function.prototype,\r\n    objectProto = Object.prototype;\r\n\r\n/** Used to detect overreaching core-js shims. */\r\nvar coreJsData = root['__core-js_shared__'];\r\n\r\n/** Used to detect methods masquerading as native. */\r\nvar maskSrcKey = (function() {\r\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\r\n  return uid ? ('Symbol(src)_1.' + uid) : '';\r\n}());\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = objectProto.toString;\r\n\r\n/** Used to detect if a method is native. */\r\nvar reIsNative = RegExp('^' +\r\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\r\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\r\n);\r\n\r\n/** Built-in value references. */\r\nvar Symbol = root.Symbol,\r\n    getPrototype = overArg(Object.getPrototypeOf, Object),\r\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\r\n    splice = arrayProto.splice,\r\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\r\n    nativeMax = Math.max;\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar Map = getNative(root, 'Map'),\r\n    nativeCreate = getNative(Object, 'create');\r\n\r\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Hash(entries) {\r\n  var index = -1,\r\n      length = entries ? entries.length : 0;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the hash.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Hash\r\n */\r\nfunction hashClear() {\r\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the hash.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Hash\r\n * @param {Object} hash The hash to modify.\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction hashDelete(key) {\r\n  return this.has(key) && delete this.__data__[key];\r\n}\r\n\r\n/**\r\n * Gets the hash value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction hashGet(key) {\r\n  var data = this.__data__;\r\n  if (nativeCreate) {\r\n    var result = data[key];\r\n    return result === HASH_UNDEFINED ? undefined : result;\r\n  }\r\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\r\n}\r\n\r\n/**\r\n * Checks if a hash value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Hash\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction hashHas(key) {\r\n  var data = this.__data__;\r\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\r\n}\r\n\r\n/**\r\n * Sets the hash `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the hash instance.\r\n */\r\nfunction hashSet(key, value) {\r\n  var data = this.__data__;\r\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\r\n  return this;\r\n}\r\n\r\n// Add methods to `Hash`.\r\nHash.prototype.clear = hashClear;\r\nHash.prototype['delete'] = hashDelete;\r\nHash.prototype.get = hashGet;\r\nHash.prototype.has = hashHas;\r\nHash.prototype.set = hashSet;\r\n\r\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction ListCache(entries) {\r\n  var index = -1,\r\n      length = entries ? entries.length : 0;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the list cache.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf ListCache\r\n */\r\nfunction listCacheClear() {\r\n  this.__data__ = [];\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the list cache.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction listCacheDelete(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    return false;\r\n  }\r\n  var lastIndex = data.length - 1;\r\n  if (index == lastIndex) {\r\n    data.pop();\r\n  } else {\r\n    splice.call(data, index, 1);\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Gets the list cache value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction listCacheGet(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  return index < 0 ? undefined : data[index][1];\r\n}\r\n\r\n/**\r\n * Checks if a list cache value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf ListCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction listCacheHas(key) {\r\n  return assocIndexOf(this.__data__, key) > -1;\r\n}\r\n\r\n/**\r\n * Sets the list cache `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the list cache instance.\r\n */\r\nfunction listCacheSet(key, value) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    data.push([key, value]);\r\n  } else {\r\n    data[index][1] = value;\r\n  }\r\n  return this;\r\n}\r\n\r\n// Add methods to `ListCache`.\r\nListCache.prototype.clear = listCacheClear;\r\nListCache.prototype['delete'] = listCacheDelete;\r\nListCache.prototype.get = listCacheGet;\r\nListCache.prototype.has = listCacheHas;\r\nListCache.prototype.set = listCacheSet;\r\n\r\n/**\r\n * Creates a map cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction MapCache(entries) {\r\n  var index = -1,\r\n      length = entries ? entries.length : 0;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the map.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf MapCache\r\n */\r\nfunction mapCacheClear() {\r\n  this.__data__ = {\r\n    'hash': new Hash,\r\n    'map': new (Map || ListCache),\r\n    'string': new Hash\r\n  };\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the map.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction mapCacheDelete(key) {\r\n  return getMapData(this, key)['delete'](key);\r\n}\r\n\r\n/**\r\n * Gets the map value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction mapCacheGet(key) {\r\n  return getMapData(this, key).get(key);\r\n}\r\n\r\n/**\r\n * Checks if a map value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf MapCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction mapCacheHas(key) {\r\n  return getMapData(this, key).has(key);\r\n}\r\n\r\n/**\r\n * Sets the map `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the map cache instance.\r\n */\r\nfunction mapCacheSet(key, value) {\r\n  getMapData(this, key).set(key, value);\r\n  return this;\r\n}\r\n\r\n// Add methods to `MapCache`.\r\nMapCache.prototype.clear = mapCacheClear;\r\nMapCache.prototype['delete'] = mapCacheDelete;\r\nMapCache.prototype.get = mapCacheGet;\r\nMapCache.prototype.has = mapCacheHas;\r\nMapCache.prototype.set = mapCacheSet;\r\n\r\n/**\r\n *\r\n * Creates an array cache object to store unique values.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [values] The values to cache.\r\n */\r\nfunction SetCache(values) {\r\n  var index = -1,\r\n      length = values ? values.length : 0;\r\n\r\n  this.__data__ = new MapCache;\r\n  while (++index < length) {\r\n    this.add(values[index]);\r\n  }\r\n}\r\n\r\n/**\r\n * Adds `value` to the array cache.\r\n *\r\n * @private\r\n * @name add\r\n * @memberOf SetCache\r\n * @alias push\r\n * @param {*} value The value to cache.\r\n * @returns {Object} Returns the cache instance.\r\n */\r\nfunction setCacheAdd(value) {\r\n  this.__data__.set(value, HASH_UNDEFINED);\r\n  return this;\r\n}\r\n\r\n/**\r\n * Checks if `value` is in the array cache.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf SetCache\r\n * @param {*} value The value to search for.\r\n * @returns {number} Returns `true` if `value` is found, else `false`.\r\n */\r\nfunction setCacheHas(value) {\r\n  return this.__data__.has(value);\r\n}\r\n\r\n// Add methods to `SetCache`.\r\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\r\nSetCache.prototype.has = setCacheHas;\r\n\r\n/**\r\n * Creates an array of the enumerable property names of the array-like `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @param {boolean} inherited Specify returning inherited property names.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction arrayLikeKeys(value, inherited) {\r\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\r\n  var result = (isArray(value) || isArguments(value))\r\n    ? baseTimes(value.length, String)\r\n    : [];\r\n\r\n  var length = result.length,\r\n      skipIndexes = !!length;\r\n\r\n  for (var key in value) {\r\n    if ((inherited || hasOwnProperty.call(value, key)) &&\r\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Gets the index at which the `key` is found in `array` of key-value pairs.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} key The key to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction assocIndexOf(array, key) {\r\n  var length = array.length;\r\n  while (length--) {\r\n    if (eq(array[length][0], key)) {\r\n      return length;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * The base implementation of methods like `_.difference` without support\r\n * for excluding multiple arrays or iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Array} values The values to exclude.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n */\r\nfunction baseDifference(array, values, iteratee, comparator) {\r\n  var index = -1,\r\n      includes = arrayIncludes,\r\n      isCommon = true,\r\n      length = array.length,\r\n      result = [],\r\n      valuesLength = values.length;\r\n\r\n  if (!length) {\r\n    return result;\r\n  }\r\n  if (iteratee) {\r\n    values = arrayMap(values, baseUnary(iteratee));\r\n  }\r\n  if (comparator) {\r\n    includes = arrayIncludesWith;\r\n    isCommon = false;\r\n  }\r\n  else if (values.length >= LARGE_ARRAY_SIZE) {\r\n    includes = cacheHas;\r\n    isCommon = false;\r\n    values = new SetCache(values);\r\n  }\r\n  outer:\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (isCommon && computed === computed) {\r\n      var valuesIndex = valuesLength;\r\n      while (valuesIndex--) {\r\n        if (values[valuesIndex] === computed) {\r\n          continue outer;\r\n        }\r\n      }\r\n      result.push(value);\r\n    }\r\n    else if (!includes(values, computed, comparator)) {\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.flatten` with support for restricting flattening.\r\n *\r\n * @private\r\n * @param {Array} array The array to flatten.\r\n * @param {number} depth The maximum recursion depth.\r\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n * @param {Array} [result=[]] The initial result value.\r\n * @returns {Array} Returns the new flattened array.\r\n */\r\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  predicate || (predicate = isFlattenable);\r\n  result || (result = []);\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (depth > 0 && predicate(value)) {\r\n      if (depth > 1) {\r\n        // Recursively flatten arrays (susceptible to call stack limits).\r\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n      } else {\r\n        arrayPush(result, value);\r\n      }\r\n    } else if (!isStrict) {\r\n      result[result.length] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\r\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\r\n  var result = keysFunc(object);\r\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isNative` without bad shim checks.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n */\r\nfunction baseIsNative(value) {\r\n  if (!isObject(value) || isMasked(value)) {\r\n    return false;\r\n  }\r\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\r\n  return pattern.test(toSource(value));\r\n}\r\n\r\n/**\r\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction baseKeysIn(object) {\r\n  if (!isObject(object)) {\r\n    return nativeKeysIn(object);\r\n  }\r\n  var isProto = isPrototype(object),\r\n      result = [];\r\n\r\n  for (var key in object) {\r\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.pick` without support for individual\r\n * property identifiers.\r\n *\r\n * @private\r\n * @param {Object} object The source object.\r\n * @param {string[]} props The property identifiers to pick.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction basePick(object, props) {\r\n  object = Object(object);\r\n  return basePickBy(object, props, function(value, key) {\r\n    return key in object;\r\n  });\r\n}\r\n\r\n/**\r\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The source object.\r\n * @param {string[]} props The property identifiers to pick from.\r\n * @param {Function} predicate The function invoked per property.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction basePickBy(object, props, predicate) {\r\n  var index = -1,\r\n      length = props.length,\r\n      result = {};\r\n\r\n  while (++index < length) {\r\n    var key = props[index],\r\n        value = object[key];\r\n\r\n    if (predicate(value, key)) {\r\n      result[key] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction baseRest(func, start) {\r\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\r\n  return function() {\r\n    var args = arguments,\r\n        index = -1,\r\n        length = nativeMax(args.length - start, 0),\r\n        array = Array(length);\r\n\r\n    while (++index < length) {\r\n      array[index] = args[start + index];\r\n    }\r\n    index = -1;\r\n    var otherArgs = Array(start + 1);\r\n    while (++index < start) {\r\n      otherArgs[index] = args[index];\r\n    }\r\n    otherArgs[start] = array;\r\n    return apply(func, this, otherArgs);\r\n  };\r\n}\r\n\r\n/**\r\n * Creates an array of own and inherited enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction getAllKeysIn(object) {\r\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\r\n}\r\n\r\n/**\r\n * Gets the data for `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to query.\r\n * @param {string} key The reference key.\r\n * @returns {*} Returns the map data.\r\n */\r\nfunction getMapData(map, key) {\r\n  var data = map.__data__;\r\n  return isKeyable(key)\r\n    ? data[typeof key == 'string' ? 'string' : 'hash']\r\n    : data.map;\r\n}\r\n\r\n/**\r\n * Gets the native function at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the method to get.\r\n * @returns {*} Returns the function if it's native, else `undefined`.\r\n */\r\nfunction getNative(object, key) {\r\n  var value = getValue(object, key);\r\n  return baseIsNative(value) ? value : undefined;\r\n}\r\n\r\n/**\r\n * Creates an array of the own enumerable symbol properties of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\r\n\r\n/**\r\n * Creates an array of the own and inherited enumerable symbol properties\r\n * of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\r\n  var result = [];\r\n  while (object) {\r\n    arrayPush(result, getSymbols(object));\r\n    object = getPrototype(object);\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Checks if `value` is a flattenable `arguments` object or array.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n */\r\nfunction isFlattenable(value) {\r\n  return isArray(value) || isArguments(value) ||\r\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\r\n}\r\n\r\n/**\r\n * Checks if `value` is a valid array-like index.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n */\r\nfunction isIndex(value, length) {\r\n  length = length == null ? MAX_SAFE_INTEGER : length;\r\n  return !!length &&\r\n    (typeof value == 'number' || reIsUint.test(value)) &&\r\n    (value > -1 && value % 1 == 0 && value < length);\r\n}\r\n\r\n/**\r\n * Checks if `value` is suitable for use as unique object key.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\r\n */\r\nfunction isKeyable(value) {\r\n  var type = typeof value;\r\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\r\n    ? (value !== '__proto__')\r\n    : (value === null);\r\n}\r\n\r\n/**\r\n * Checks if `func` has its source masked.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\r\n */\r\nfunction isMasked(func) {\r\n  return !!maskSrcKey && (maskSrcKey in func);\r\n}\r\n\r\n/**\r\n * Checks if `value` is likely a prototype object.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\r\n */\r\nfunction isPrototype(value) {\r\n  var Ctor = value && value.constructor,\r\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\r\n\r\n  return value === proto;\r\n}\r\n\r\n/**\r\n * This function is like\r\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * except that it includes inherited enumerable properties.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction nativeKeysIn(object) {\r\n  var result = [];\r\n  if (object != null) {\r\n    for (var key in Object(object)) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts `value` to a string key if it's not a string or symbol.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {string|symbol} Returns the key.\r\n */\r\nfunction toKey(value) {\r\n  if (typeof value == 'string' || isSymbol(value)) {\r\n    return value;\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\n/**\r\n * Converts `func` to its source code.\r\n *\r\n * @private\r\n * @param {Function} func The function to process.\r\n * @returns {string} Returns the source code.\r\n */\r\nfunction toSource(func) {\r\n  if (func != null) {\r\n    try {\r\n      return funcToString.call(func);\r\n    } catch (e) {}\r\n    try {\r\n      return (func + '');\r\n    } catch (e) {}\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Performs a\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * comparison between two values to determine if they are equivalent.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.eq(object, object);\r\n * // => true\r\n *\r\n * _.eq(object, other);\r\n * // => false\r\n *\r\n * _.eq('a', 'a');\r\n * // => true\r\n *\r\n * _.eq('a', Object('a'));\r\n * // => false\r\n *\r\n * _.eq(NaN, NaN);\r\n * // => true\r\n */\r\nfunction eq(value, other) {\r\n  return value === other || (value !== value && other !== other);\r\n}\r\n\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArguments(function() { return arguments; }());\r\n * // => true\r\n *\r\n * _.isArguments([1, 2, 3]);\r\n * // => false\r\n */\r\nfunction isArguments(value) {\r\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\r\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * _.isArrayLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLike(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLike('abc');\r\n * // => true\r\n *\r\n * _.isArrayLike(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLike(value) {\r\n  return value != null && isLength(value.length) && !isFunction(value);\r\n}\r\n\r\n/**\r\n * This method is like `_.isArrayLike` except that it also checks if `value`\r\n * is an object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array-like object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArrayLikeObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject('abc');\r\n * // => false\r\n *\r\n * _.isArrayLikeObject(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLikeObject(value) {\r\n  return isObjectLike(value) && isArrayLike(value);\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n  // The use of `Object#toString` avoids issues with the `typeof` operator\r\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\r\n  var tag = isObject(value) ? objectToString.call(value) : '';\r\n  return tag == funcTag || tag == genTag;\r\n}\r\n\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * _.isLength(3);\r\n * // => true\r\n *\r\n * _.isLength(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isLength(Infinity);\r\n * // => false\r\n *\r\n * _.isLength('3');\r\n * // => false\r\n */\r\nfunction isLength(value) {\r\n  return typeof value == 'number' &&\r\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n}\r\n\r\n/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n  var type = typeof value;\r\n  return !!value && (type == 'object' || type == 'function');\r\n}\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n  return !!value && typeof value == 'object';\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Symbol` primitive or object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n * @example\r\n *\r\n * _.isSymbol(Symbol.iterator);\r\n * // => true\r\n *\r\n * _.isSymbol('abc');\r\n * // => false\r\n */\r\nfunction isSymbol(value) {\r\n  return typeof value == 'symbol' ||\r\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n}\r\n\r\n/**\r\n * Creates an array of the own and inherited enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.keysIn(new Foo);\r\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\r\n */\r\nfunction keysIn(object) {\r\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\r\n}\r\n\r\n/**\r\n * The opposite of `_.pick`; this method creates an object composed of the\r\n * own and inherited enumerable string keyed properties of `object` that are\r\n * not omitted.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {...(string|string[])} [props] The property identifiers to omit.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.omit(object, ['a', 'c']);\r\n * // => { 'b': '2' }\r\n */\r\nvar omit = baseRest(function(object, props) {\r\n  if (object == null) {\r\n    return {};\r\n  }\r\n  props = arrayMap(baseFlatten(props, 1), toKey);\r\n  return basePick(object, baseDifference(getAllKeysIn(object), props));\r\n});\r\n\r\n/**\r\n * This method returns a new empty array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {Array} Returns the new empty array.\r\n * @example\r\n *\r\n * var arrays = _.times(2, _.stubArray);\r\n *\r\n * console.log(arrays);\r\n * // => [[], []]\r\n *\r\n * console.log(arrays[0] === arrays[1]);\r\n * // => false\r\n */\r\nfunction stubArray() {\r\n  return [];\r\n}\r\n\r\nmodule.exports = omit;\r\n", "// stats.js - http://github.com/mrdoob/stats.js\r\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\r\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\r\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\r\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\r\n", "/** @license React v16.13.1\r\n * react-is.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  (function() {\r\n'use strict';\r\n\r\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\r\n// nor polyfill, then a plain number is used for performance.\r\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\r\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\r\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\r\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\r\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\r\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\r\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\r\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\r\n// (unstable) APIs that have been removed. Can we remove the symbols?\r\n\r\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\r\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\r\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\r\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\r\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\r\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\r\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\r\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\r\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\r\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\r\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\r\n\r\nfunction isValidElementType(type) {\r\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\r\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\r\n}\r\n\r\nfunction typeOf(object) {\r\n  if (typeof object === 'object' && object !== null) {\r\n    var $$typeof = object.$$typeof;\r\n\r\n    switch ($$typeof) {\r\n      case REACT_ELEMENT_TYPE:\r\n        var type = object.type;\r\n\r\n        switch (type) {\r\n          case REACT_ASYNC_MODE_TYPE:\r\n          case REACT_CONCURRENT_MODE_TYPE:\r\n          case REACT_FRAGMENT_TYPE:\r\n          case REACT_PROFILER_TYPE:\r\n          case REACT_STRICT_MODE_TYPE:\r\n          case REACT_SUSPENSE_TYPE:\r\n            return type;\r\n\r\n          default:\r\n            var $$typeofType = type && type.$$typeof;\r\n\r\n            switch ($$typeofType) {\r\n              case REACT_CONTEXT_TYPE:\r\n              case REACT_FORWARD_REF_TYPE:\r\n              case REACT_LAZY_TYPE:\r\n              case REACT_MEMO_TYPE:\r\n              case REACT_PROVIDER_TYPE:\r\n                return $$typeofType;\r\n\r\n              default:\r\n                return $$typeof;\r\n            }\r\n\r\n        }\r\n\r\n      case REACT_PORTAL_TYPE:\r\n        return $$typeof;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n} // AsyncMode is deprecated along with isAsyncMode\r\n\r\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\r\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\r\nvar ContextConsumer = REACT_CONTEXT_TYPE;\r\nvar ContextProvider = REACT_PROVIDER_TYPE;\r\nvar Element = REACT_ELEMENT_TYPE;\r\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\r\nvar Fragment = REACT_FRAGMENT_TYPE;\r\nvar Lazy = REACT_LAZY_TYPE;\r\nvar Memo = REACT_MEMO_TYPE;\r\nvar Portal = REACT_PORTAL_TYPE;\r\nvar Profiler = REACT_PROFILER_TYPE;\r\nvar StrictMode = REACT_STRICT_MODE_TYPE;\r\nvar Suspense = REACT_SUSPENSE_TYPE;\r\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\r\n\r\nfunction isAsyncMode(object) {\r\n  {\r\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\r\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\r\n\r\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\r\n    }\r\n  }\r\n\r\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\r\n}\r\nfunction isConcurrentMode(object) {\r\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\r\n}\r\nfunction isContextConsumer(object) {\r\n  return typeOf(object) === REACT_CONTEXT_TYPE;\r\n}\r\nfunction isContextProvider(object) {\r\n  return typeOf(object) === REACT_PROVIDER_TYPE;\r\n}\r\nfunction isElement(object) {\r\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n}\r\nfunction isForwardRef(object) {\r\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\r\n}\r\nfunction isFragment(object) {\r\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\r\n}\r\nfunction isLazy(object) {\r\n  return typeOf(object) === REACT_LAZY_TYPE;\r\n}\r\nfunction isMemo(object) {\r\n  return typeOf(object) === REACT_MEMO_TYPE;\r\n}\r\nfunction isPortal(object) {\r\n  return typeOf(object) === REACT_PORTAL_TYPE;\r\n}\r\nfunction isProfiler(object) {\r\n  return typeOf(object) === REACT_PROFILER_TYPE;\r\n}\r\nfunction isStrictMode(object) {\r\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\r\n}\r\nfunction isSuspense(object) {\r\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\r\n}\r\n\r\nexports.AsyncMode = AsyncMode;\r\nexports.ConcurrentMode = ConcurrentMode;\r\nexports.ContextConsumer = ContextConsumer;\r\nexports.ContextProvider = ContextProvider;\r\nexports.Element = Element;\r\nexports.ForwardRef = ForwardRef;\r\nexports.Fragment = Fragment;\r\nexports.Lazy = Lazy;\r\nexports.Memo = Memo;\r\nexports.Portal = Portal;\r\nexports.Profiler = Profiler;\r\nexports.StrictMode = StrictMode;\r\nexports.Suspense = Suspense;\r\nexports.isAsyncMode = isAsyncMode;\r\nexports.isConcurrentMode = isConcurrentMode;\r\nexports.isContextConsumer = isContextConsumer;\r\nexports.isContextProvider = isContextProvider;\r\nexports.isElement = isElement;\r\nexports.isForwardRef = isForwardRef;\r\nexports.isFragment = isFragment;\r\nexports.isLazy = isLazy;\r\nexports.isMemo = isMemo;\r\nexports.isPortal = isPortal;\r\nexports.isProfiler = isProfiler;\r\nexports.isStrictMode = isStrictMode;\r\nexports.isSuspense = isSuspense;\r\nexports.isValidElementType = isValidElementType;\r\nexports.typeOf = typeOf;\r\n  })();\r\n}\r\n", "'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-is.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-is.development.js');\r\n}\r\n", "/*\r\nobject-assign\r\n(c) Sindre Sorhus\r\n@license MIT\r\n*/\r\n\r\n'use strict';\r\n/* eslint-disable no-unused-vars */\r\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\r\n\r\nfunction toObject(val) {\r\n\tif (val === null || val === undefined) {\r\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\r\n\t}\r\n\r\n\treturn Object(val);\r\n}\r\n\r\nfunction shouldUseNative() {\r\n\ttry {\r\n\t\tif (!Object.assign) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Detect buggy property enumeration order in older V8 versions.\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\r\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\r\n\t\ttest1[5] = 'de';\r\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\r\n\t\tvar test2 = {};\r\n\t\tfor (var i = 0; i < 10; i++) {\r\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\r\n\t\t}\r\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\r\n\t\t\treturn test2[n];\r\n\t\t});\r\n\t\tif (order2.join('') !== '0123456789') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\r\n\t\tvar test3 = {};\r\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\r\n\t\t\ttest3[letter] = letter;\r\n\t\t});\r\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\r\n\t\t\t\t'abcdefghijklmnopqrst') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t} catch (err) {\r\n\t\t// We don't expect any of the above to throw, but better to be safe.\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\r\n\tvar from;\r\n\tvar to = toObject(target);\r\n\tvar symbols;\r\n\r\n\tfor (var s = 1; s < arguments.length; s++) {\r\n\t\tfrom = Object(arguments[s]);\r\n\r\n\t\tfor (var key in from) {\r\n\t\t\tif (hasOwnProperty.call(from, key)) {\r\n\t\t\t\tto[key] = from[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (getOwnPropertySymbols) {\r\n\t\t\tsymbols = getOwnPropertySymbols(from);\r\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\r\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\r\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn to;\r\n};\r\n", "/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\r\n\r\nmodule.exports = ReactPropTypesSecret;\r\n", "module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\r\n", "/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nvar printWarning = function() {};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\r\n  var loggedTypeFailures = {};\r\n  var has = require('./lib/has');\r\n\r\n  printWarning = function(text) {\r\n    var message = 'Warning: ' + text;\r\n    if (typeof console !== 'undefined') {\r\n      console.error(message);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      throw new Error(message);\r\n    } catch (x) { /**/ }\r\n  };\r\n}\r\n\r\n/**\r\n * Assert that the values match with the type specs.\r\n * Error messages are memorized and will only be shown once.\r\n *\r\n * @param {object} typeSpecs Map of name to a ReactPropType\r\n * @param {object} values Runtime values that need to be type-checked\r\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\r\n * @param {string} componentName Name of the component for error messages.\r\n * @param {?Function} getStack Returns the component stack.\r\n * @private\r\n */\r\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    for (var typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        var error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            var err = Error(\r\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\r\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\r\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          printWarning(\r\n            (componentName || 'React class') + ': type specification of ' +\r\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\r\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\r\n            'You may have forgotten to pass an argument to the type checker ' +\r\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n            'shape all require an argument).'\r\n          );\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n\r\n          var stack = getStack ? getStack() : '';\r\n\r\n          printWarning(\r\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Resets warning cache when testing.\r\n *\r\n * @private\r\n */\r\ncheckPropTypes.resetWarningCache = function() {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    loggedTypeFailures = {};\r\n  }\r\n}\r\n\r\nmodule.exports = checkPropTypes;\r\n", "/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nvar ReactIs = require('react-is');\r\nvar assign = require('object-assign');\r\n\r\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\r\nvar has = require('./lib/has');\r\nvar checkPropTypes = require('./checkPropTypes');\r\n\r\nvar printWarning = function() {};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  printWarning = function(text) {\r\n    var message = 'Warning: ' + text;\r\n    if (typeof console !== 'undefined') {\r\n      console.error(message);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      throw new Error(message);\r\n    } catch (x) {}\r\n  };\r\n}\r\n\r\nfunction emptyFunctionThatReturnsNull() {\r\n  return null;\r\n}\r\n\r\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\r\n  /* global Symbol */\r\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\r\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\r\n\r\n  /**\r\n   * Returns the iterator method function contained on the iterable object.\r\n   *\r\n   * Be sure to invoke the function with the iterable as context:\r\n   *\r\n   *     var iteratorFn = getIteratorFn(myIterable);\r\n   *     if (iteratorFn) {\r\n   *       var iterator = iteratorFn.call(myIterable);\r\n   *       ...\r\n   *     }\r\n   *\r\n   * @param {?object} maybeIterable\r\n   * @return {?function}\r\n   */\r\n  function getIteratorFn(maybeIterable) {\r\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\r\n    if (typeof iteratorFn === 'function') {\r\n      return iteratorFn;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collection of methods that allow declaration and validation of props that are\r\n   * supplied to React components. Example usage:\r\n   *\r\n   *   var Props = require('ReactPropTypes');\r\n   *   var MyArticle = React.createClass({\r\n   *     propTypes: {\r\n   *       // An optional string prop named \"description\".\r\n   *       description: Props.string,\r\n   *\r\n   *       // A required enum prop named \"category\".\r\n   *       category: Props.oneOf(['News','Photos']).isRequired,\r\n   *\r\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\r\n   *       dialog: Props.instanceOf(Dialog).isRequired\r\n   *     },\r\n   *     render: function() { ... }\r\n   *   });\r\n   *\r\n   * A more formal specification of how these methods are used:\r\n   *\r\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\r\n   *   decl := ReactPropTypes.{type}(.isRequired)?\r\n   *\r\n   * Each and every declaration produces a function with the same signature. This\r\n   * allows the creation of custom validation functions. For example:\r\n   *\r\n   *  var MyLink = React.createClass({\r\n   *    propTypes: {\r\n   *      // An optional string or URI prop named \"href\".\r\n   *      href: function(props, propName, componentName) {\r\n   *        var propValue = props[propName];\r\n   *        if (propValue != null && typeof propValue !== 'string' &&\r\n   *            !(propValue instanceof URI)) {\r\n   *          return new Error(\r\n   *            'Expected a string or an URI for ' + propName + ' in ' +\r\n   *            componentName\r\n   *          );\r\n   *        }\r\n   *      }\r\n   *    },\r\n   *    render: function() {...}\r\n   *  });\r\n   *\r\n   * @internal\r\n   */\r\n\r\n  var ANONYMOUS = '<<anonymous>>';\r\n\r\n  // Important!\r\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\r\n  var ReactPropTypes = {\r\n    array: createPrimitiveTypeChecker('array'),\r\n    bigint: createPrimitiveTypeChecker('bigint'),\r\n    bool: createPrimitiveTypeChecker('boolean'),\r\n    func: createPrimitiveTypeChecker('function'),\r\n    number: createPrimitiveTypeChecker('number'),\r\n    object: createPrimitiveTypeChecker('object'),\r\n    string: createPrimitiveTypeChecker('string'),\r\n    symbol: createPrimitiveTypeChecker('symbol'),\r\n\r\n    any: createAnyTypeChecker(),\r\n    arrayOf: createArrayOfTypeChecker,\r\n    element: createElementTypeChecker(),\r\n    elementType: createElementTypeTypeChecker(),\r\n    instanceOf: createInstanceTypeChecker,\r\n    node: createNodeChecker(),\r\n    objectOf: createObjectOfTypeChecker,\r\n    oneOf: createEnumTypeChecker,\r\n    oneOfType: createUnionTypeChecker,\r\n    shape: createShapeTypeChecker,\r\n    exact: createStrictShapeTypeChecker,\r\n  };\r\n\r\n  /**\r\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n   */\r\n  /*eslint-disable no-self-compare*/\r\n  function is(x, y) {\r\n    // SameValue algorithm\r\n    if (x === y) {\r\n      // Steps 1-5, 7-10\r\n      // Steps 6.b-6.e: +0 != -0\r\n      return x !== 0 || 1 / x === 1 / y;\r\n    } else {\r\n      // Step 6.a: NaN == NaN\r\n      return x !== x && y !== y;\r\n    }\r\n  }\r\n  /*eslint-enable no-self-compare*/\r\n\r\n  /**\r\n   * We use an Error-like object for backward compatibility as people may call\r\n   * PropTypes directly and inspect their output. However, we don't use real\r\n   * Errors anymore. We don't inspect their stack anyway, and creating them\r\n   * is prohibitively expensive if they are created too often, such as what\r\n   * happens in oneOfType() for any type before the one that matched.\r\n   */\r\n  function PropTypeError(message, data) {\r\n    this.message = message;\r\n    this.data = data && typeof data === 'object' ? data: {};\r\n    this.stack = '';\r\n  }\r\n  // Make `instanceof Error` still work for returned errors.\r\n  PropTypeError.prototype = Error.prototype;\r\n\r\n  function createChainableTypeChecker(validate) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      var manualPropTypeCallCache = {};\r\n      var manualPropTypeWarningCount = 0;\r\n    }\r\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\r\n      componentName = componentName || ANONYMOUS;\r\n      propFullName = propFullName || propName;\r\n\r\n      if (secret !== ReactPropTypesSecret) {\r\n        if (throwOnDirectAccess) {\r\n          // New behavior only for users of `prop-types` package\r\n          var err = new Error(\r\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\r\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\r\n            'Read more at http://fb.me/use-check-prop-types'\r\n          );\r\n          err.name = 'Invariant Violation';\r\n          throw err;\r\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\r\n          // Old behavior for people using React.PropTypes\r\n          var cacheKey = componentName + ':' + propName;\r\n          if (\r\n            !manualPropTypeCallCache[cacheKey] &&\r\n            // Avoid spamming the console because they are often not actionable except for lib authors\r\n            manualPropTypeWarningCount < 3\r\n          ) {\r\n            printWarning(\r\n              'You are manually calling a React.PropTypes validation ' +\r\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\r\n              'and will throw in the standalone `prop-types` package. ' +\r\n              'You may be seeing this warning due to a third-party PropTypes ' +\r\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\r\n            );\r\n            manualPropTypeCallCache[cacheKey] = true;\r\n            manualPropTypeWarningCount++;\r\n          }\r\n        }\r\n      }\r\n      if (props[propName] == null) {\r\n        if (isRequired) {\r\n          if (props[propName] === null) {\r\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\r\n          }\r\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\r\n        }\r\n        return null;\r\n      } else {\r\n        return validate(props, propName, componentName, location, propFullName);\r\n      }\r\n    }\r\n\r\n    var chainedCheckType = checkType.bind(null, false);\r\n    chainedCheckType.isRequired = checkType.bind(null, true);\r\n\r\n    return chainedCheckType;\r\n  }\r\n\r\n  function createPrimitiveTypeChecker(expectedType) {\r\n    function validate(props, propName, componentName, location, propFullName, secret) {\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== expectedType) {\r\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\r\n        // check, but we can offer a more precise error message here rather than\r\n        // 'of type `object`'.\r\n        var preciseType = getPreciseType(propValue);\r\n\r\n        return new PropTypeError(\r\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\r\n          {expectedType: expectedType}\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createAnyTypeChecker() {\r\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\r\n  }\r\n\r\n  function createArrayOfTypeChecker(typeChecker) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (typeof typeChecker !== 'function') {\r\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\r\n      }\r\n      var propValue = props[propName];\r\n      if (!Array.isArray(propValue)) {\r\n        var propType = getPropType(propValue);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\r\n      }\r\n      for (var i = 0; i < propValue.length; i++) {\r\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\r\n        if (error instanceof Error) {\r\n          return error;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createElementTypeChecker() {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      if (!isValidElement(propValue)) {\r\n        var propType = getPropType(propValue);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createElementTypeTypeChecker() {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      if (!ReactIs.isValidElementType(propValue)) {\r\n        var propType = getPropType(propValue);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createInstanceTypeChecker(expectedClass) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (!(props[propName] instanceof expectedClass)) {\r\n        var expectedClassName = expectedClass.name || ANONYMOUS;\r\n        var actualClassName = getClassName(props[propName]);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createEnumTypeChecker(expectedValues) {\r\n    if (!Array.isArray(expectedValues)) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (arguments.length > 1) {\r\n          printWarning(\r\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\r\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\r\n          );\r\n        } else {\r\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\r\n        }\r\n      }\r\n      return emptyFunctionThatReturnsNull;\r\n    }\r\n\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      for (var i = 0; i < expectedValues.length; i++) {\r\n        if (is(propValue, expectedValues[i])) {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\r\n        var type = getPreciseType(value);\r\n        if (type === 'symbol') {\r\n          return String(value);\r\n        }\r\n        return value;\r\n      });\r\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createObjectOfTypeChecker(typeChecker) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (typeof typeChecker !== 'function') {\r\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\r\n      }\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== 'object') {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\r\n      }\r\n      for (var key in propValue) {\r\n        if (has(propValue, key)) {\r\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\r\n          if (error instanceof Error) {\r\n            return error;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\r\n    if (!Array.isArray(arrayOfTypeCheckers)) {\r\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\r\n      return emptyFunctionThatReturnsNull;\r\n    }\r\n\r\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\r\n      var checker = arrayOfTypeCheckers[i];\r\n      if (typeof checker !== 'function') {\r\n        printWarning(\r\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\r\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\r\n        );\r\n        return emptyFunctionThatReturnsNull;\r\n      }\r\n    }\r\n\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var expectedTypes = [];\r\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\r\n        var checker = arrayOfTypeCheckers[i];\r\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\r\n        if (checkerResult == null) {\r\n          return null;\r\n        }\r\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\r\n          expectedTypes.push(checkerResult.data.expectedType);\r\n        }\r\n      }\r\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\r\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createNodeChecker() {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (!isNode(props[propName])) {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\r\n    return new PropTypeError(\r\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\r\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\r\n    );\r\n  }\r\n\r\n  function createShapeTypeChecker(shapeTypes) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== 'object') {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\r\n      }\r\n      for (var key in shapeTypes) {\r\n        var checker = shapeTypes[key];\r\n        if (typeof checker !== 'function') {\r\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\r\n        }\r\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\r\n        if (error) {\r\n          return error;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createStrictShapeTypeChecker(shapeTypes) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== 'object') {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\r\n      }\r\n      // We need to check all keys in case some are required but missing from props.\r\n      var allKeys = assign({}, props[propName], shapeTypes);\r\n      for (var key in allKeys) {\r\n        var checker = shapeTypes[key];\r\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\r\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\r\n        }\r\n        if (!checker) {\r\n          return new PropTypeError(\r\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\r\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\r\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\r\n          );\r\n        }\r\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\r\n        if (error) {\r\n          return error;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function isNode(propValue) {\r\n    switch (typeof propValue) {\r\n      case 'number':\r\n      case 'string':\r\n      case 'undefined':\r\n        return true;\r\n      case 'boolean':\r\n        return !propValue;\r\n      case 'object':\r\n        if (Array.isArray(propValue)) {\r\n          return propValue.every(isNode);\r\n        }\r\n        if (propValue === null || isValidElement(propValue)) {\r\n          return true;\r\n        }\r\n\r\n        var iteratorFn = getIteratorFn(propValue);\r\n        if (iteratorFn) {\r\n          var iterator = iteratorFn.call(propValue);\r\n          var step;\r\n          if (iteratorFn !== propValue.entries) {\r\n            while (!(step = iterator.next()).done) {\r\n              if (!isNode(step.value)) {\r\n                return false;\r\n              }\r\n            }\r\n          } else {\r\n            // Iterator will provide entry [k,v] tuples rather than values.\r\n            while (!(step = iterator.next()).done) {\r\n              var entry = step.value;\r\n              if (entry) {\r\n                if (!isNode(entry[1])) {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function isSymbol(propType, propValue) {\r\n    // Native Symbol.\r\n    if (propType === 'symbol') {\r\n      return true;\r\n    }\r\n\r\n    // falsy value can't be a Symbol\r\n    if (!propValue) {\r\n      return false;\r\n    }\r\n\r\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\r\n    if (propValue['@@toStringTag'] === 'Symbol') {\r\n      return true;\r\n    }\r\n\r\n    // Fallback for non-spec compliant Symbols which are polyfilled.\r\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // Equivalent of `typeof` but with special handling for array and regexp.\r\n  function getPropType(propValue) {\r\n    var propType = typeof propValue;\r\n    if (Array.isArray(propValue)) {\r\n      return 'array';\r\n    }\r\n    if (propValue instanceof RegExp) {\r\n      // Old webkits (at least until Android 4.0) return 'function' rather than\r\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\r\n      // passes PropTypes.object.\r\n      return 'object';\r\n    }\r\n    if (isSymbol(propType, propValue)) {\r\n      return 'symbol';\r\n    }\r\n    return propType;\r\n  }\r\n\r\n  // This handles more types than `getPropType`. Only used for error messages.\r\n  // See `createPrimitiveTypeChecker`.\r\n  function getPreciseType(propValue) {\r\n    if (typeof propValue === 'undefined' || propValue === null) {\r\n      return '' + propValue;\r\n    }\r\n    var propType = getPropType(propValue);\r\n    if (propType === 'object') {\r\n      if (propValue instanceof Date) {\r\n        return 'date';\r\n      } else if (propValue instanceof RegExp) {\r\n        return 'regexp';\r\n      }\r\n    }\r\n    return propType;\r\n  }\r\n\r\n  // Returns a string that is postfixed to a warning about an invalid type.\r\n  // For example, \"undefined\" or \"of type array\"\r\n  function getPostfixForTypeWarning(value) {\r\n    var type = getPreciseType(value);\r\n    switch (type) {\r\n      case 'array':\r\n      case 'object':\r\n        return 'an ' + type;\r\n      case 'boolean':\r\n      case 'date':\r\n      case 'regexp':\r\n        return 'a ' + type;\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n\r\n  // Returns class name of the object, if any.\r\n  function getClassName(propValue) {\r\n    if (!propValue.constructor || !propValue.constructor.name) {\r\n      return ANONYMOUS;\r\n    }\r\n    return propValue.constructor.name;\r\n  }\r\n\r\n  ReactPropTypes.checkPropTypes = checkPropTypes;\r\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\r\n  ReactPropTypes.PropTypes = ReactPropTypes;\r\n\r\n  return ReactPropTypes;\r\n};\r\n", "/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  var ReactIs = require('react-is');\r\n\r\n  // By explicitly using `prop-types` you are opting into new development behavior.\r\n  // http://fb.me/prop-types-in-prod\r\n  var throwOnDirectAccess = true;\r\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\r\n} else {\r\n  // By explicitly using `prop-types` you are opting into new production behavior.\r\n  // http://fb.me/prop-types-in-prod\r\n  module.exports = require('./factoryWithThrowingShims')();\r\n}\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom/client';\r\nimport { Vector3, OrthographicCamera, PerspectiveCamera } from 'three';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\n\r\nconst v1 = new Vector3();\r\nconst v2 = new Vector3();\r\nconst v3 = new Vector3();\r\n\r\nfunction defaultCalculatePosition(el, camera, size) {\r\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\r\n  objectPos.project(camera);\r\n  const widthHalf = size.width / 2;\r\n  const heightHalf = size.height / 2;\r\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\r\n}\r\n\r\nfunction isObjectBehindCamera(el, camera) {\r\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\r\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\r\n  const deltaCamObj = objectPos.sub(cameraPos);\r\n  const camDir = camera.getWorldDirection(v3);\r\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\r\n}\r\n\r\nfunction isObjectVisible(el, camera, raycaster, occlude) {\r\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\r\n  const screenPos = elPos.clone();\r\n  screenPos.project(camera);\r\n  raycaster.setFromCamera(screenPos, camera);\r\n  const intersects = raycaster.intersectObjects(occlude, true);\r\n\r\n  if (intersects.length) {\r\n    const intersectionDistance = intersects[0].distance;\r\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\r\n    return pointDistance < intersectionDistance;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction objectScale(el, camera) {\r\n  if (camera instanceof OrthographicCamera) {\r\n    return camera.zoom;\r\n  } else if (camera instanceof PerspectiveCamera) {\r\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\r\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\r\n    const vFOV = camera.fov * Math.PI / 180;\r\n    const dist = objectPos.distanceTo(cameraPos);\r\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\r\n    return 1 / scaleFOV;\r\n  } else {\r\n    return 1;\r\n  }\r\n}\r\n\r\nfunction objectZIndex(el, camera, zIndexRange) {\r\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\r\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\r\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\r\n    const dist = objectPos.distanceTo(cameraPos);\r\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\r\n    const B = zIndexRange[1] - A * camera.far;\r\n    return Math.round(A * dist + B);\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\r\n\r\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\r\n  let matrix3d = 'matrix3d(';\r\n\r\n  for (let i = 0; i !== 16; i++) {\r\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\r\n  }\r\n\r\n  return prepend + matrix3d;\r\n}\r\n\r\nconst getCameraCSSMatrix = (multipliers => {\r\n  return matrix => getCSSMatrix(matrix, multipliers);\r\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\r\n\r\nconst getObjectCSSMatrix = (scaleMultipliers => {\r\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\r\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\r\n\r\nconst Html = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  eps = 0.001,\r\n  style,\r\n  className,\r\n  prepend,\r\n  center,\r\n  fullscreen,\r\n  portal,\r\n  distanceFactor,\r\n  sprite = false,\r\n  transform = false,\r\n  occlude,\r\n  onOcclude,\r\n  zIndexRange = [16777271, 0],\r\n  calculatePosition = defaultCalculatePosition,\r\n  as = 'div',\r\n  wrapperClass,\r\n  pointerEvents = 'auto',\r\n  ...props\r\n}, ref) => {\r\n  var _portal$current;\r\n\r\n  const gl = useThree(({\r\n    gl\r\n  }) => gl);\r\n  const camera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const scene = useThree(({\r\n    scene\r\n  }) => scene);\r\n  const size = useThree(({\r\n    size\r\n  }) => size);\r\n  const raycaster = useThree(({\r\n    raycaster\r\n  }) => raycaster);\r\n  const [el] = React.useState(() => document.createElement(as));\r\n  const root = React.useMemo(() => ReactDOM.createRoot(el), [el]);\r\n  const group = React.useRef(null);\r\n  const oldZoom = React.useRef(0);\r\n  const oldPosition = React.useRef([0, 0]);\r\n  const transformOuterRef = React.useRef(null);\r\n  const transformInnerRef = React.useRef(null);\r\n  const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode;\r\n  React.useEffect(() => {\r\n    if (group.current) {\r\n      scene.updateMatrixWorld();\r\n\r\n      if (transform) {\r\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\r\n      } else {\r\n        const vec = calculatePosition(group.current, camera, size);\r\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\r\n      }\r\n\r\n      if (target) {\r\n        if (prepend) target.prepend(el);else target.appendChild(el);\r\n      }\r\n\r\n      return () => {\r\n        if (target) target.removeChild(el);\r\n        root.unmount();\r\n      };\r\n    }\r\n  }, [target, transform]);\r\n  React.useLayoutEffect(() => {\r\n    if (wrapperClass) el.className = wrapperClass;\r\n  }, [wrapperClass]);\r\n  const styles = React.useMemo(() => {\r\n    if (transform) {\r\n      return {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: size.width,\r\n        height: size.height,\r\n        transformStyle: 'preserve-3d',\r\n        pointerEvents: 'none'\r\n      };\r\n    } else {\r\n      return {\r\n        position: 'absolute',\r\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\r\n        ...(fullscreen && {\r\n          top: -size.height / 2,\r\n          left: -size.width / 2,\r\n          width: size.width,\r\n          height: size.height\r\n        }),\r\n        ...style\r\n      };\r\n    }\r\n  }, [style, center, fullscreen, size, transform]);\r\n  const transformInnerStyles = React.useMemo(() => ({\r\n    position: 'absolute',\r\n    pointerEvents\r\n  }), [pointerEvents]);\r\n  React.useLayoutEffect(() => {\r\n    if (transform) {\r\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\r\n        ref: transformOuterRef,\r\n        style: styles\r\n      }, /*#__PURE__*/React.createElement(\"div\", {\r\n        ref: transformInnerRef,\r\n        style: transformInnerStyles\r\n      }, /*#__PURE__*/React.createElement(\"div\", {\r\n        ref: ref,\r\n        className: className,\r\n        style: style,\r\n        children: children\r\n      }))));\r\n    } else {\r\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\r\n        ref: ref,\r\n        style: styles,\r\n        className: className,\r\n        children: children\r\n      }));\r\n    }\r\n  });\r\n  const visible = React.useRef(true);\r\n  useFrame(() => {\r\n    if (group.current) {\r\n      camera.updateMatrixWorld();\r\n      group.current.updateWorldMatrix(true, false);\r\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\r\n\r\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\r\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\r\n        let raytraceTarget = false;\r\n\r\n        if (typeof occlude === 'boolean') {\r\n          if (occlude === true) {\r\n            raytraceTarget = [scene];\r\n          }\r\n        } else if (Array.isArray(occlude)) {\r\n          raytraceTarget = occlude.map(item => item.current);\r\n        }\r\n\r\n        const previouslyVisible = visible.current;\r\n\r\n        if (raytraceTarget) {\r\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\r\n          visible.current = isvisible && !isBehindCamera;\r\n        } else {\r\n          visible.current = !isBehindCamera;\r\n        }\r\n\r\n        if (previouslyVisible !== visible.current) {\r\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\r\n        }\r\n\r\n        el.style.zIndex = `${objectZIndex(group.current, camera, zIndexRange)}`;\r\n\r\n        if (transform) {\r\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\r\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\r\n          const {\r\n            isOrthographicCamera,\r\n            top,\r\n            left,\r\n            bottom,\r\n            right\r\n          } = camera;\r\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\r\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\r\n          let matrix = group.current.matrixWorld;\r\n\r\n          if (sprite) {\r\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\r\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\r\n            matrix.elements[15] = 1;\r\n          }\r\n\r\n          el.style.width = size.width + 'px';\r\n          el.style.height = size.height + 'px';\r\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\r\n\r\n          if (transformOuterRef.current && transformInnerRef.current) {\r\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\r\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\r\n          }\r\n        } else {\r\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\r\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\r\n        }\r\n\r\n        oldPosition.current = vec;\r\n        oldZoom.current = camera.zoom;\r\n      }\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\r\n    ref: group\r\n  }));\r\n});\r\n\r\nexport { Html };\r\n", "import * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\nfunction CycleRaycast({\r\n  onChanged,\r\n  portal,\r\n  preventDefault = true,\r\n  scroll = true,\r\n  keyCode = 9\r\n}) {\r\n  const cycle = React.useRef(0);\r\n  const setEvents = useThree(state => state.setEvents);\r\n  const get = useThree(state => state.get);\r\n  const gl = useThree(state => state.gl);\r\n  React.useEffect(() => {\r\n    var _portal$current;\r\n\r\n    let hits = [];\r\n    let lastEvent = undefined;\r\n    const prev = get().events.filter;\r\n    const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode; // Render custom status\r\n\r\n    const renderStatus = () => target && onChanged && onChanged(hits, Math.round(cycle.current) % hits.length); // Overwrite the raycasters custom filter (this only exists in r3f)\r\n\r\n\r\n    setEvents({\r\n      filter: (intersections, state) => {\r\n        // Reset cycle when the intersections change\r\n        let clone = [...intersections];\r\n\r\n        if (clone.length !== hits.length || !hits.every(hit => clone.map(e => e.object.uuid).includes(hit.object.uuid))) {\r\n          cycle.current = 0;\r\n          hits = clone;\r\n          renderStatus();\r\n        } // Run custom filter if there is one\r\n\r\n\r\n        if (prev) clone = prev(clone, state); // Cycle through the actual raycast intersects\r\n\r\n        for (let i = 0; i < Math.round(cycle.current) % clone.length; i++) {\r\n          const first = clone.shift();\r\n          clone = [...clone, first];\r\n        }\r\n\r\n        return clone;\r\n      }\r\n    }); // Cycle, refresh events and render status\r\n\r\n    const refresh = fn => {\r\n      var _get$events$handlers, _get$events$handlers2;\r\n\r\n      cycle.current = fn(cycle.current); // Cancel hovered elements and fake a pointer-move\r\n\r\n      (_get$events$handlers = get().events.handlers) == null ? void 0 : _get$events$handlers.onPointerCancel(undefined);\r\n      (_get$events$handlers2 = get().events.handlers) == null ? void 0 : _get$events$handlers2.onPointerMove(lastEvent);\r\n      renderStatus();\r\n    }; // Key events\r\n\r\n\r\n    const tabEvent = event => {\r\n      if (event.keyCode || event.which === keyCode) {\r\n        if (preventDefault) event.preventDefault();\r\n        if (hits.length > 1) refresh(current => current + 1);\r\n      }\r\n    }; // Wheel events\r\n\r\n\r\n    const wheelEvent = event => {\r\n      if (preventDefault) event.preventDefault();\r\n      let delta = 0;\r\n      if (!event) event = window.event;\r\n      if (event.wheelDelta) delta = event.wheelDelta / 120;else if (event.detail) delta = -event.detail / 3;\r\n      if (hits.length > 1) refresh(current => Math.abs(current - delta));\r\n    }; // Catch last move event and position custom status\r\n\r\n\r\n    const moveEvent = event => lastEvent = event;\r\n\r\n    document.addEventListener('pointermove', moveEvent, {\r\n      passive: true\r\n    });\r\n    if (scroll) document.addEventListener('wheel', wheelEvent);\r\n    if (keyCode !== undefined) document.addEventListener('keydown', tabEvent);\r\n    return () => {\r\n      // Clean up\r\n      setEvents({\r\n        filter: prev\r\n      });\r\n      if (keyCode !== undefined) document.removeEventListener('keydown', tabEvent);\r\n      if (scroll) document.removeEventListener('wheel', wheelEvent);\r\n      document.removeEventListener('pointermove', moveEvent);\r\n    };\r\n  }, [gl, get, setEvents, preventDefault, scroll, keyCode]);\r\n  return null;\r\n}\r\n\r\nexport { CycleRaycast };\r\n", "import * as React from 'react';\r\n\r\nfunction useCursor(hovered, onPointerOver = 'pointer', onPointerOut = 'auto') {\r\n  React.useEffect(() => {\r\n    if (hovered) {\r\n      document.body.style.cursor = onPointerOver;\r\n      return () => void (document.body.style.cursor = onPointerOut);\r\n    }\r\n  }, [hovered]);\r\n}\r\n\r\nexport { useCursor };\r\n", "import * as React from 'react';\r\nimport { useProgress } from '../core/useProgress.js';\r\n\r\nconst defaultDataInterpolation = p => `Loading ${p.toFixed(2)}%`;\r\n\r\nfunction Loader({\r\n  containerStyles,\r\n  innerStyles,\r\n  barStyles,\r\n  dataStyles,\r\n  dataInterpolation = defaultDataInterpolation,\r\n  initialState = active => active\r\n}) {\r\n  const {\r\n    active,\r\n    progress\r\n  } = useProgress();\r\n  const progressRef = React.useRef(0);\r\n  const rafRef = React.useRef(0);\r\n  const progressSpanRef = React.useRef(null);\r\n  const [shown, setShown] = React.useState(initialState(active));\r\n  React.useEffect(() => {\r\n    let t;\r\n    if (active !== shown) t = setTimeout(() => setShown(active), 300);\r\n    return () => clearTimeout(t);\r\n  }, [shown, active]);\r\n  const updateProgress = React.useCallback(() => {\r\n    if (!progressSpanRef.current) return;\r\n    progressRef.current += (progress - progressRef.current) / 2;\r\n    if (progressRef.current > 0.95 * progress || progress === 100) progressRef.current = progress;\r\n    progressSpanRef.current.innerText = dataInterpolation(progressRef.current);\r\n    if (progressRef.current < progress) rafRef.current = requestAnimationFrame(updateProgress);\r\n  }, [dataInterpolation, progress]);\r\n  React.useEffect(() => {\r\n    updateProgress();\r\n    return () => cancelAnimationFrame(rafRef.current);\r\n  }, [updateProgress]);\r\n  return shown ? /*#__PURE__*/React.createElement(\"div\", {\r\n    style: { ...styles.container,\r\n      opacity: active ? 1 : 0,\r\n      ...containerStyles\r\n    }\r\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\r\n    style: { ...styles.inner,\r\n      ...innerStyles\r\n    }\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    style: { ...styles.bar,\r\n      transform: `scaleX(${progress / 100})`,\r\n      ...barStyles\r\n    }\r\n  }), /*#__PURE__*/React.createElement(\"span\", {\r\n    ref: progressSpanRef,\r\n    style: { ...styles.data,\r\n      ...dataStyles\r\n    }\r\n  })))) : null;\r\n}\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    background: '#171717',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transition: 'opacity 300ms ease',\r\n    zIndex: 1000\r\n  },\r\n  inner: {\r\n    width: 100,\r\n    height: 3,\r\n    background: '#272727',\r\n    textAlign: 'center'\r\n  },\r\n  bar: {\r\n    height: 3,\r\n    width: '100%',\r\n    background: 'white',\r\n    transition: 'transform 200ms',\r\n    transformOrigin: 'left center'\r\n  },\r\n  data: {\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    fontVariantNumeric: 'tabular-nums',\r\n    marginTop: '0.8em',\r\n    color: '#f0f0f0',\r\n    fontSize: '0.6em',\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\r\n    whiteSpace: 'nowrap'\r\n  }\r\n};\r\n\r\nexport { Loader };\r\n", "import { DefaultLoadingManager } from 'three';\r\nimport create from 'zustand';\r\n\r\nlet saveLastTotalLoaded = 0;\r\nconst useProgress = create(set => {\r\n  DefaultLoadingManager.onStart = (item, loaded, total) => {\r\n    set({\r\n      active: true,\r\n      item,\r\n      loaded,\r\n      total,\r\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100\r\n    });\r\n  };\r\n\r\n  DefaultLoadingManager.onLoad = () => {\r\n    set({\r\n      active: false\r\n    });\r\n  };\r\n\r\n  DefaultLoadingManager.onError = item => set(state => ({\r\n    errors: [...state.errors, item]\r\n  }));\r\n\r\n  DefaultLoadingManager.onProgress = (item, loaded, total) => {\r\n    if (loaded === total) {\r\n      saveLastTotalLoaded = total;\r\n    }\r\n\r\n    set({\r\n      active: true,\r\n      item,\r\n      loaded,\r\n      total,\r\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100 || 100\r\n    });\r\n  };\r\n\r\n  return {\r\n    errors: [],\r\n    active: false,\r\n    progress: 0,\r\n    item: '',\r\n    loaded: 0,\r\n    total: 0\r\n  };\r\n});\r\n\r\nexport { useProgress };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom/client';\r\nimport { useThree, useFrame, context as context$1 } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nconst context = /*#__PURE__*/React.createContext(null);\r\nfunction useScroll() {\r\n  return React.useContext(context);\r\n}\r\nfunction ScrollControls({\r\n  eps = 0.00001,\r\n  enabled = true,\r\n  infinite,\r\n  horizontal,\r\n  pages = 1,\r\n  distance = 1,\r\n  damping = 4,\r\n  style = {},\r\n  children\r\n}) {\r\n  const {\r\n    get,\r\n    setEvents,\r\n    gl,\r\n    size,\r\n    invalidate,\r\n    events\r\n  } = useThree();\r\n  const [el] = React.useState(() => document.createElement('div'));\r\n  const [fill] = React.useState(() => document.createElement('div'));\r\n  const [fixed] = React.useState(() => document.createElement('div'));\r\n  const target = gl.domElement.parentNode;\r\n  const scroll = React.useRef(0);\r\n  const state = React.useMemo(() => {\r\n    const state = {\r\n      el,\r\n      eps,\r\n      fill,\r\n      fixed,\r\n      horizontal,\r\n      damping,\r\n      offset: 0,\r\n      delta: 0,\r\n      scroll,\r\n      pages,\r\n\r\n      // 0-1 for a range between from -> from + distance\r\n      range(from, distance, margin = 0) {\r\n        const start = from - margin;\r\n        const end = start + distance + margin * 2;\r\n        return this.offset < start ? 0 : this.offset > end ? 1 : (this.offset - start) / (end - start);\r\n      },\r\n\r\n      // 0-1-0 for a range between from -> from + distance\r\n      curve(from, distance, margin = 0) {\r\n        return Math.sin(this.range(from, distance, margin) * Math.PI);\r\n      },\r\n\r\n      // true/false for a range between from -> from + distance\r\n      visible(from, distance, margin = 0) {\r\n        const start = from - margin;\r\n        const end = start + distance + margin * 2;\r\n        return this.offset >= start && this.offset <= end;\r\n      }\r\n\r\n    };\r\n    return state;\r\n  }, [eps, damping, horizontal, pages]);\r\n  React.useEffect(() => {\r\n    el.style.position = 'absolute';\r\n    el.style.width = '100%';\r\n    el.style.height = '100%';\r\n    el.style[horizontal ? 'overflowX' : 'overflowY'] = 'auto';\r\n    el.style[horizontal ? 'overflowY' : 'overflowX'] = 'hidden';\r\n    el.style.top = '0px';\r\n    el.style.left = '0px';\r\n\r\n    for (const key in style) {\r\n      el.style[key] = style[key];\r\n    }\r\n\r\n    fixed.style.position = 'sticky';\r\n    fixed.style.top = '0px';\r\n    fixed.style.left = '0px';\r\n    fixed.style.width = '100%';\r\n    fixed.style.height = '100%';\r\n    fixed.style.overflow = 'hidden';\r\n    el.appendChild(fixed);\r\n    fill.style.height = horizontal ? '100%' : `${pages * distance * 100}%`;\r\n    fill.style.width = horizontal ? `${pages * distance * 100}%` : '100%';\r\n    fill.style.pointerEvents = 'none';\r\n    el.appendChild(fill);\r\n    target.appendChild(el); // Init scroll one pixel in to allow upward/leftward scroll\r\n\r\n    el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\r\n    const oldTarget = events.connected || gl.domElement;\r\n    requestAnimationFrame(() => events.connect == null ? void 0 : events.connect(el));\r\n    const oldCompute = get().events.compute;\r\n    setEvents({\r\n      compute(event, state) {\r\n        const offsetX = event.clientX - target.offsetLeft;\r\n        const offsetY = event.clientY - target.offsetTop;\r\n        state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\r\n        state.raycaster.setFromCamera(state.pointer, state.camera);\r\n      }\r\n\r\n    });\r\n    return () => {\r\n      target.removeChild(el);\r\n      setEvents({\r\n        compute: oldCompute\r\n      });\r\n      events.connect == null ? void 0 : events.connect(oldTarget);\r\n    };\r\n  }, [pages, distance, horizontal, el, fill, fixed, target]);\r\n  React.useEffect(() => {\r\n    if (events.connected === el) {\r\n      const containerLength = size[horizontal ? 'width' : 'height'];\r\n      const scrollLength = el[horizontal ? 'scrollWidth' : 'scrollHeight'];\r\n      const scrollThreshold = scrollLength - containerLength;\r\n      let current = 0;\r\n      let disableScroll = true;\r\n      let firstRun = true;\r\n\r\n      const onScroll = () => {\r\n        // Prevent first scroll because it is indirectly caused by the one pixel offset\r\n        if (!enabled || firstRun) return;\r\n        invalidate();\r\n        current = el[horizontal ? 'scrollLeft' : 'scrollTop'];\r\n        scroll.current = current / scrollThreshold;\r\n\r\n        if (infinite) {\r\n          if (!disableScroll) {\r\n            if (current >= scrollThreshold) {\r\n              const damp = 1 - state.offset;\r\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\r\n              scroll.current = state.offset = -damp;\r\n              disableScroll = true;\r\n            } else if (current <= 0) {\r\n              const damp = 1 + state.offset;\r\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = scrollLength;\r\n              scroll.current = state.offset = damp;\r\n              disableScroll = true;\r\n            }\r\n          }\r\n\r\n          if (disableScroll) setTimeout(() => disableScroll = false, 40);\r\n        }\r\n      };\r\n\r\n      el.addEventListener('scroll', onScroll, {\r\n        passive: true\r\n      });\r\n      requestAnimationFrame(() => firstRun = false);\r\n\r\n      const onWheel = e => el.scrollLeft += e.deltaY / 2;\r\n\r\n      if (horizontal) el.addEventListener('wheel', onWheel, {\r\n        passive: true\r\n      });\r\n      return () => {\r\n        el.removeEventListener('scroll', onScroll);\r\n        if (horizontal) el.removeEventListener('wheel', onWheel);\r\n      };\r\n    }\r\n  }, [el, events, size, infinite, state, invalidate, horizontal, enabled]);\r\n  let last = 0;\r\n  useFrame((_, delta) => {\r\n    state.offset = THREE.MathUtils.damp(last = state.offset, scroll.current, damping, delta);\r\n    state.delta = THREE.MathUtils.damp(state.delta, Math.abs(last - state.offset), damping, delta);\r\n    if (state.delta > eps) invalidate();\r\n  });\r\n  return /*#__PURE__*/React.createElement(context.Provider, {\r\n    value: state\r\n  }, children);\r\n}\r\nconst ScrollCanvas = /*#__PURE__*/React.forwardRef(({\r\n  children\r\n}, ref) => {\r\n  const group = React.useRef(null);\r\n  const state = useScroll();\r\n  const {\r\n    width,\r\n    height\r\n  } = useThree(state => state.viewport);\r\n  useFrame(() => {\r\n    group.current.position.x = state.horizontal ? -width * (state.pages - 1) * state.offset : 0;\r\n    group.current.position.y = state.horizontal ? 0 : height * (state.pages - 1) * state.offset;\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: mergeRefs([ref, group])\r\n  }, children);\r\n});\r\nconst ScrollHtml = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  style,\r\n  ...props\r\n}, ref) => {\r\n  const state = useScroll();\r\n  const group = React.useRef(null);\r\n  const {\r\n    width,\r\n    height\r\n  } = useThree(state => state.size);\r\n  const fiberState = React.useContext(context$1);\r\n  const root = React.useMemo(() => ReactDOM.createRoot(state.fixed), [state.fixed]);\r\n  useFrame(() => {\r\n    if (state.delta > state.eps) {\r\n      group.current.style.transform = `translate3d(${state.horizontal ? -width * (state.pages - 1) * state.offset : 0}px,${state.horizontal ? 0 : height * (state.pages - 1) * -state.offset}px,0)`;\r\n    }\r\n  });\r\n  root.render( /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    ref: mergeRefs([ref, group]),\r\n    style: { ...style,\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      willChange: 'transform'\r\n    }\r\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\r\n    value: state\r\n  }, /*#__PURE__*/React.createElement(context$1.Provider, {\r\n    value: fiberState\r\n  }, children))));\r\n  return null;\r\n});\r\nconst Scroll = /*#__PURE__*/React.forwardRef(({\r\n  html,\r\n  ...props\r\n}, ref) => {\r\n  const El = html ? ScrollHtml : ScrollCanvas;\r\n  return /*#__PURE__*/React.createElement(El, _extends({\r\n    ref: ref\r\n  }, props));\r\n});\r\n\r\nexport { Scroll, ScrollControls, useScroll };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { MathUtils } from 'three';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { useSpring, a } from '@react-spring/three';\r\nimport { useGesture } from '@use-gesture/react';\r\n\r\nfunction PresentationControls({\r\n  snap,\r\n  global,\r\n  cursor = true,\r\n  children,\r\n  speed = 1,\r\n  rotation = [0, 0, 0],\r\n  zoom = 1,\r\n  polar = [0, Math.PI / 2],\r\n  azimuth = [-Infinity, Infinity],\r\n  config = {\r\n    mass: 1,\r\n    tension: 170,\r\n    friction: 26\r\n  }\r\n}) {\r\n  const {\r\n    size,\r\n    gl\r\n  } = useThree();\r\n  const rPolar = React.useMemo(() => [rotation[0] + polar[0], rotation[0] + polar[1]], [rotation[0], polar[0], polar[1]]);\r\n  const rAzimuth = React.useMemo(() => [rotation[1] + azimuth[0], rotation[1] + azimuth[1]], [rotation[1], azimuth[0], azimuth[1]]);\r\n  const rInitial = React.useMemo(() => [MathUtils.clamp(rotation[0], ...rPolar), MathUtils.clamp(rotation[1], ...rAzimuth), rotation[2]], [rotation[0], rotation[1], rotation[2], rPolar, rAzimuth]);\r\n  const [spring, api] = useSpring(() => ({\r\n    scale: 1,\r\n    rotation: rInitial,\r\n    config\r\n  }));\r\n  React.useEffect(() => void api.start({\r\n    scale: 1,\r\n    rotation: rInitial,\r\n    config\r\n  }), [rInitial]);\r\n  React.useEffect(() => {\r\n    if (global && cursor) gl.domElement.style.cursor = 'grab';\r\n  }, [global, cursor, gl.domElement]);\r\n  const bind = useGesture({\r\n    onHover: ({\r\n      last\r\n    }) => {\r\n      if (cursor && !global) gl.domElement.style.cursor = last ? 'auto' : 'grab';\r\n    },\r\n    onDrag: ({\r\n      down,\r\n      delta: [x, y],\r\n      memo: [oldY, oldX] = spring.rotation.animation.to || rInitial\r\n    }) => {\r\n      if (cursor) gl.domElement.style.cursor = down ? 'grabbing' : 'grab';\r\n      x = MathUtils.clamp(oldX + x / size.width * Math.PI * speed, ...rAzimuth);\r\n      y = MathUtils.clamp(oldY + y / size.height * Math.PI * speed, ...rPolar);\r\n      const sConfig = snap && !down && typeof snap !== 'boolean' ? snap : config;\r\n      api.start({\r\n        scale: down && y > rPolar[1] / 2 ? zoom : 1,\r\n        rotation: snap && !down ? rInitial : [y, x, 0],\r\n        config: n => n === 'scale' ? { ...sConfig,\r\n          friction: sConfig.friction * 3\r\n        } : sConfig\r\n      });\r\n      return [y, x];\r\n    }\r\n  }, {\r\n    target: global ? gl.domElement : undefined\r\n  });\r\n  return /*#__PURE__*/React.createElement(a.group, _extends({}, bind == null ? void 0 : bind(), spring), children);\r\n}\r\n\r\nexport { PresentationControls };\r\n", "function clamp(v, min, max) {\r\n  return Math.max(min, Math.min(v, max));\r\n}\r\nconst V = {\r\n  toVector(v, fallback) {\r\n    if (v === undefined) v = fallback;\r\n    return Array.isArray(v) ? v : [v, v];\r\n  },\r\n\r\n  add(v1, v2) {\r\n    return [v1[0] + v2[0], v1[1] + v2[1]];\r\n  },\r\n\r\n  sub(v1, v2) {\r\n    return [v1[0] - v2[0], v1[1] - v2[1]];\r\n  },\r\n\r\n  addTo(v1, v2) {\r\n    v1[0] += v2[0];\r\n    v1[1] += v2[1];\r\n  },\r\n\r\n  subTo(v1, v2) {\r\n    v1[0] -= v2[0];\r\n    v1[1] -= v2[1];\r\n  }\r\n\r\n};\r\n\r\nfunction rubberband(distance, dimension, constant) {\r\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return Math.pow(distance, constant * 5);\r\n  return distance * dimension * constant / (dimension + constant * distance);\r\n}\r\n\r\nfunction rubberbandIfOutOfBounds(position, min, max, constant = 0.15) {\r\n  if (constant === 0) return clamp(position, min, max);\r\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\r\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\r\n  return position;\r\n}\r\nfunction computeRubberband(bounds, [Vx, Vy], [Rx, Ry]) {\r\n  const [[X0, X1], [Y0, Y1]] = bounds;\r\n  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];\r\n}\r\n\r\nexport { V, computeRubberband as c, rubberbandIfOutOfBounds as r };\r\n", "import { V, c as computeRubberband } from './maths-b2a210f4.esm.js';\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n  var keys = Object.keys(object);\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    var symbols = Object.getOwnPropertySymbols(object);\r\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\r\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n    })), keys.push.apply(keys, symbols);\r\n  }\r\n\r\n  return keys;\r\n}\r\n\r\nfunction _objectSpread2(target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = null != arguments[i] ? arguments[i] : {};\r\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\r\n      _defineProperty(target, key, source[key]);\r\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\r\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n    });\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nconst EVENT_TYPE_MAP = {\r\n  pointer: {\r\n    start: 'down',\r\n    change: 'move',\r\n    end: 'up'\r\n  },\r\n  mouse: {\r\n    start: 'down',\r\n    change: 'move',\r\n    end: 'up'\r\n  },\r\n  touch: {\r\n    start: 'start',\r\n    change: 'move',\r\n    end: 'end'\r\n  },\r\n  gesture: {\r\n    start: 'start',\r\n    change: 'change',\r\n    end: 'end'\r\n  }\r\n};\r\n\r\nfunction capitalize(string) {\r\n  if (!string) return '';\r\n  return string[0].toUpperCase() + string.slice(1);\r\n}\r\n\r\nconst actionsWithoutCaptureSupported = ['enter', 'leave'];\r\n\r\nfunction hasCapture(capture = false, actionKey) {\r\n  return capture && !actionsWithoutCaptureSupported.includes(actionKey);\r\n}\r\n\r\nfunction toHandlerProp(device, action = '', capture = false) {\r\n  const deviceProps = EVENT_TYPE_MAP[device];\r\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\r\n  return 'on' + capitalize(device) + capitalize(actionKey) + (hasCapture(capture, actionKey) ? 'Capture' : '');\r\n}\r\nconst pointerCaptureEvents = ['gotpointercapture', 'lostpointercapture'];\r\nfunction parseProp(prop) {\r\n  let eventKey = prop.substring(2).toLowerCase();\r\n  const passive = !!~eventKey.indexOf('passive');\r\n  if (passive) eventKey = eventKey.replace('passive', '');\r\n  const captureKey = pointerCaptureEvents.includes(eventKey) ? 'capturecapture' : 'capture';\r\n  const capture = !!~eventKey.indexOf(captureKey);\r\n  if (capture) eventKey = eventKey.replace('capture', '');\r\n  return {\r\n    device: eventKey,\r\n    capture,\r\n    passive\r\n  };\r\n}\r\nfunction toDomEventType(device, action = '') {\r\n  const deviceProps = EVENT_TYPE_MAP[device];\r\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\r\n  return device + actionKey;\r\n}\r\nfunction isTouch(event) {\r\n  return 'touches' in event;\r\n}\r\nfunction getPointerType(event) {\r\n  if (isTouch(event)) return 'touch';\r\n  if ('pointerType' in event) return event.pointerType;\r\n  return 'mouse';\r\n}\r\n\r\nfunction getCurrentTargetTouchList(event) {\r\n  return Array.from(event.touches).filter(e => {\r\n    var _event$currentTarget, _event$currentTarget$;\r\n\r\n    return e.target === event.currentTarget || ((_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 ? void 0 : (_event$currentTarget$ = _event$currentTarget.contains) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.call(_event$currentTarget, e.target));\r\n  });\r\n}\r\n\r\nfunction getTouchList(event) {\r\n  return event.type === 'touchend' || event.type === 'touchcancel' ? event.changedTouches : event.targetTouches;\r\n}\r\n\r\nfunction getValueEvent(event) {\r\n  return isTouch(event) ? getTouchList(event)[0] : event;\r\n}\r\n\r\nfunction distanceAngle(P1, P2) {\r\n  const dx = P2.clientX - P1.clientX;\r\n  const dy = P2.clientY - P1.clientY;\r\n  const cx = (P2.clientX + P1.clientX) / 2;\r\n  const cy = (P2.clientY + P1.clientY) / 2;\r\n  const distance = Math.hypot(dx, dy);\r\n  const angle = -(Math.atan2(dx, dy) * 180) / Math.PI;\r\n  const origin = [cx, cy];\r\n  return {\r\n    angle,\r\n    distance,\r\n    origin\r\n  };\r\n}\r\nfunction touchIds(event) {\r\n  return getCurrentTargetTouchList(event).map(touch => touch.identifier);\r\n}\r\nfunction touchDistanceAngle(event, ids) {\r\n  const [P1, P2] = Array.from(event.touches).filter(touch => ids.includes(touch.identifier));\r\n  return distanceAngle(P1, P2);\r\n}\r\nfunction pointerId(event) {\r\n  const valueEvent = getValueEvent(event);\r\n  return isTouch(event) ? valueEvent.identifier : valueEvent.pointerId;\r\n}\r\nfunction pointerValues(event) {\r\n  const valueEvent = getValueEvent(event);\r\n  return [valueEvent.clientX, valueEvent.clientY];\r\n}\r\nconst LINE_HEIGHT = 40;\r\nconst PAGE_HEIGHT = 800;\r\nfunction wheelValues(event) {\r\n  let {\r\n    deltaX,\r\n    deltaY,\r\n    deltaMode\r\n  } = event;\r\n\r\n  if (deltaMode === 1) {\r\n    deltaX *= LINE_HEIGHT;\r\n    deltaY *= LINE_HEIGHT;\r\n  } else if (deltaMode === 2) {\r\n    deltaX *= PAGE_HEIGHT;\r\n    deltaY *= PAGE_HEIGHT;\r\n  }\r\n\r\n  return [deltaX, deltaY];\r\n}\r\nfunction scrollValues(event) {\r\n  var _ref, _ref2;\r\n\r\n  const {\r\n    scrollX,\r\n    scrollY,\r\n    scrollLeft,\r\n    scrollTop\r\n  } = event.currentTarget;\r\n  return [(_ref = scrollX !== null && scrollX !== void 0 ? scrollX : scrollLeft) !== null && _ref !== void 0 ? _ref : 0, (_ref2 = scrollY !== null && scrollY !== void 0 ? scrollY : scrollTop) !== null && _ref2 !== void 0 ? _ref2 : 0];\r\n}\r\nfunction getEventDetails(event) {\r\n  const payload = {};\r\n  if ('buttons' in event) payload.buttons = event.buttons;\r\n\r\n  if ('shiftKey' in event) {\r\n    const {\r\n      shiftKey,\r\n      altKey,\r\n      metaKey,\r\n      ctrlKey\r\n    } = event;\r\n    Object.assign(payload, {\r\n      shiftKey,\r\n      altKey,\r\n      metaKey,\r\n      ctrlKey\r\n    });\r\n  }\r\n\r\n  return payload;\r\n}\r\n\r\nfunction call(v, ...args) {\r\n  if (typeof v === 'function') {\r\n    return v(...args);\r\n  } else {\r\n    return v;\r\n  }\r\n}\r\nfunction noop() {}\r\nfunction chain(...fns) {\r\n  if (fns.length === 0) return noop;\r\n  if (fns.length === 1) return fns[0];\r\n  return function () {\r\n    let result;\r\n\r\n    for (const fn of fns) {\r\n      result = fn.apply(this, arguments) || result;\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\nfunction assignDefault(value, fallback) {\r\n  return Object.assign({}, fallback, value || {});\r\n}\r\n\r\nconst BEFORE_LAST_KINEMATICS_DELAY = 32;\r\nclass Engine {\r\n  constructor(ctrl, args, key) {\r\n    this.ctrl = ctrl;\r\n    this.args = args;\r\n    this.key = key;\r\n\r\n    if (!this.state) {\r\n      this.state = {};\r\n      this.computeValues([0, 0]);\r\n      this.computeInitial();\r\n      if (this.init) this.init();\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  get state() {\r\n    return this.ctrl.state[this.key];\r\n  }\r\n\r\n  set state(state) {\r\n    this.ctrl.state[this.key] = state;\r\n  }\r\n\r\n  get shared() {\r\n    return this.ctrl.state.shared;\r\n  }\r\n\r\n  get eventStore() {\r\n    return this.ctrl.gestureEventStores[this.key];\r\n  }\r\n\r\n  get timeoutStore() {\r\n    return this.ctrl.gestureTimeoutStores[this.key];\r\n  }\r\n\r\n  get config() {\r\n    return this.ctrl.config[this.key];\r\n  }\r\n\r\n  get sharedConfig() {\r\n    return this.ctrl.config.shared;\r\n  }\r\n\r\n  get handler() {\r\n    return this.ctrl.handlers[this.key];\r\n  }\r\n\r\n  reset() {\r\n    const {\r\n      state,\r\n      shared,\r\n      ingKey,\r\n      args\r\n    } = this;\r\n    shared[ingKey] = state._active = state.active = state._blocked = state._force = false;\r\n    state._step = [false, false];\r\n    state.intentional = false;\r\n    state._movement = [0, 0];\r\n    state._distance = [0, 0];\r\n    state._direction = [0, 0];\r\n    state._delta = [0, 0];\r\n    state._bounds = [[-Infinity, Infinity], [-Infinity, Infinity]];\r\n    state.args = args;\r\n    state.axis = undefined;\r\n    state.memo = undefined;\r\n    state.elapsedTime = 0;\r\n    state.direction = [0, 0];\r\n    state.distance = [0, 0];\r\n    state.overflow = [0, 0];\r\n    state._movementBound = [false, false];\r\n    state.velocity = [0, 0];\r\n    state.movement = [0, 0];\r\n    state.delta = [0, 0];\r\n    state.timeStamp = 0;\r\n  }\r\n\r\n  start(event) {\r\n    const state = this.state;\r\n    const config = this.config;\r\n\r\n    if (!state._active) {\r\n      this.reset();\r\n      this.computeInitial();\r\n      state._active = true;\r\n      state.target = event.target;\r\n      state.currentTarget = event.currentTarget;\r\n      state.lastOffset = config.from ? call(config.from, state) : state.offset;\r\n      state.offset = state.lastOffset;\r\n    }\r\n\r\n    state.startTime = state.timeStamp = event.timeStamp;\r\n  }\r\n\r\n  computeValues(values) {\r\n    const state = this.state;\r\n    state._values = values;\r\n    state.values = this.config.transform(values);\r\n  }\r\n\r\n  computeInitial() {\r\n    const state = this.state;\r\n    state._initial = state._values;\r\n    state.initial = state.values;\r\n  }\r\n\r\n  compute(event) {\r\n    const {\r\n      state,\r\n      config,\r\n      shared\r\n    } = this;\r\n    state.args = this.args;\r\n    let dt = 0;\r\n\r\n    if (event) {\r\n      state.event = event;\r\n      if (config.preventDefault && event.cancelable) state.event.preventDefault();\r\n      state.type = event.type;\r\n      shared.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size;\r\n      shared.locked = !!document.pointerLockElement;\r\n      Object.assign(shared, getEventDetails(event));\r\n      shared.down = shared.pressed = shared.buttons % 2 === 1 || shared.touches > 0;\r\n      dt = event.timeStamp - state.timeStamp;\r\n      state.timeStamp = event.timeStamp;\r\n      state.elapsedTime = state.timeStamp - state.startTime;\r\n    }\r\n\r\n    if (state._active) {\r\n      const _absoluteDelta = state._delta.map(Math.abs);\r\n\r\n      V.addTo(state._distance, _absoluteDelta);\r\n    }\r\n\r\n    if (this.axisIntent) this.axisIntent(event);\r\n    const [_m0, _m1] = state._movement;\r\n    const [t0, t1] = config.threshold;\r\n    const {\r\n      _step,\r\n      values\r\n    } = state;\r\n\r\n    if (config.hasCustomTransform) {\r\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && values[0];\r\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && values[1];\r\n    } else {\r\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && Math.sign(_m0) * t0;\r\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && Math.sign(_m1) * t1;\r\n    }\r\n\r\n    state.intentional = _step[0] !== false || _step[1] !== false;\r\n    if (!state.intentional) return;\r\n    const movement = [0, 0];\r\n\r\n    if (config.hasCustomTransform) {\r\n      const [v0, v1] = values;\r\n      movement[0] = _step[0] !== false ? v0 - _step[0] : 0;\r\n      movement[1] = _step[1] !== false ? v1 - _step[1] : 0;\r\n    } else {\r\n      movement[0] = _step[0] !== false ? _m0 - _step[0] : 0;\r\n      movement[1] = _step[1] !== false ? _m1 - _step[1] : 0;\r\n    }\r\n\r\n    if (this.restrictToAxis && !state._blocked) this.restrictToAxis(movement);\r\n    const previousOffset = state.offset;\r\n    const gestureIsActive = state._active && !state._blocked || state.active;\r\n\r\n    if (gestureIsActive) {\r\n      state.first = state._active && !state.active;\r\n      state.last = !state._active && state.active;\r\n      state.active = shared[this.ingKey] = state._active;\r\n\r\n      if (event) {\r\n        if (state.first) {\r\n          if ('bounds' in config) state._bounds = call(config.bounds, state);\r\n          if (this.setup) this.setup();\r\n        }\r\n\r\n        state.movement = movement;\r\n        this.computeOffset();\r\n      }\r\n    }\r\n\r\n    const [ox, oy] = state.offset;\r\n    const [[x0, x1], [y0, y1]] = state._bounds;\r\n    state.overflow = [ox < x0 ? -1 : ox > x1 ? 1 : 0, oy < y0 ? -1 : oy > y1 ? 1 : 0];\r\n    state._movementBound[0] = state.overflow[0] ? state._movementBound[0] === false ? state._movement[0] : state._movementBound[0] : false;\r\n    state._movementBound[1] = state.overflow[1] ? state._movementBound[1] === false ? state._movement[1] : state._movementBound[1] : false;\r\n    const rubberband = state._active ? config.rubberband || [0, 0] : [0, 0];\r\n    state.offset = computeRubberband(state._bounds, state.offset, rubberband);\r\n    state.delta = V.sub(state.offset, previousOffset);\r\n    this.computeMovement();\r\n\r\n    if (gestureIsActive && (!state.last || dt > BEFORE_LAST_KINEMATICS_DELAY)) {\r\n      state.delta = V.sub(state.offset, previousOffset);\r\n      const absoluteDelta = state.delta.map(Math.abs);\r\n      V.addTo(state.distance, absoluteDelta);\r\n      state.direction = state.delta.map(Math.sign);\r\n      state._direction = state._delta.map(Math.sign);\r\n\r\n      if (!state.first && dt > 0) {\r\n        state.velocity = [absoluteDelta[0] / dt, absoluteDelta[1] / dt];\r\n      }\r\n    }\r\n  }\r\n\r\n  emit() {\r\n    const state = this.state;\r\n    const shared = this.shared;\r\n    const config = this.config;\r\n    if (!state._active) this.clean();\r\n    if ((state._blocked || !state.intentional) && !state._force && !config.triggerAllEvents) return;\r\n    const memo = this.handler(_objectSpread2(_objectSpread2(_objectSpread2({}, shared), state), {}, {\r\n      [this.aliasKey]: state.values\r\n    }));\r\n    if (memo !== undefined) state.memo = memo;\r\n  }\r\n\r\n  clean() {\r\n    this.eventStore.clean();\r\n    this.timeoutStore.clean();\r\n  }\r\n\r\n}\r\n\r\nfunction selectAxis([dx, dy], threshold) {\r\n  const absDx = Math.abs(dx);\r\n  const absDy = Math.abs(dy);\r\n\r\n  if (absDx > absDy && absDx > threshold) {\r\n    return 'x';\r\n  }\r\n\r\n  if (absDy > absDx && absDy > threshold) {\r\n    return 'y';\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nclass CoordinatesEngine extends Engine {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"aliasKey\", 'xy');\r\n  }\r\n\r\n  reset() {\r\n    super.reset();\r\n    this.state.axis = undefined;\r\n  }\r\n\r\n  init() {\r\n    this.state.offset = [0, 0];\r\n    this.state.lastOffset = [0, 0];\r\n  }\r\n\r\n  computeOffset() {\r\n    this.state.offset = V.add(this.state.lastOffset, this.state.movement);\r\n  }\r\n\r\n  computeMovement() {\r\n    this.state.movement = V.sub(this.state.offset, this.state.lastOffset);\r\n  }\r\n\r\n  axisIntent(event) {\r\n    const state = this.state;\r\n    const config = this.config;\r\n\r\n    if (!state.axis && event) {\r\n      const threshold = typeof config.axisThreshold === 'object' ? config.axisThreshold[getPointerType(event)] : config.axisThreshold;\r\n      state.axis = selectAxis(state._movement, threshold);\r\n    }\r\n\r\n    state._blocked = (config.lockDirection || !!config.axis) && !state.axis || !!config.axis && config.axis !== state.axis;\r\n  }\r\n\r\n  restrictToAxis(v) {\r\n    if (this.config.axis || this.config.lockDirection) {\r\n      switch (this.state.axis) {\r\n        case 'x':\r\n          v[1] = 0;\r\n          break;\r\n\r\n        case 'y':\r\n          v[0] = 0;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst identity = v => v;\r\nconst DEFAULT_RUBBERBAND = 0.15;\r\nconst commonConfigResolver = {\r\n  enabled(value = true) {\r\n    return value;\r\n  },\r\n\r\n  eventOptions(value, _k, config) {\r\n    return _objectSpread2(_objectSpread2({}, config.shared.eventOptions), value);\r\n  },\r\n\r\n  preventDefault(value = false) {\r\n    return value;\r\n  },\r\n\r\n  triggerAllEvents(value = false) {\r\n    return value;\r\n  },\r\n\r\n  rubberband(value = 0) {\r\n    switch (value) {\r\n      case true:\r\n        return [DEFAULT_RUBBERBAND, DEFAULT_RUBBERBAND];\r\n\r\n      case false:\r\n        return [0, 0];\r\n\r\n      default:\r\n        return V.toVector(value);\r\n    }\r\n  },\r\n\r\n  from(value) {\r\n    if (typeof value === 'function') return value;\r\n    if (value != null) return V.toVector(value);\r\n  },\r\n\r\n  transform(value, _k, config) {\r\n    const transform = value || config.shared.transform;\r\n    this.hasCustomTransform = !!transform;\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      const originalTransform = transform || identity;\r\n      return v => {\r\n        const r = originalTransform(v);\r\n\r\n        if (!isFinite(r[0]) || !isFinite(r[1])) {\r\n          console.warn(`[@use-gesture]: config.transform() must produce a valid result, but it was: [${r[0]},${[1]}]`);\r\n        }\r\n\r\n        return r;\r\n      };\r\n    }\r\n\r\n    return transform || identity;\r\n  },\r\n\r\n  threshold(value) {\r\n    return V.toVector(value, 0);\r\n  }\r\n\r\n};\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  Object.assign(commonConfigResolver, {\r\n    domTarget(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\r\n      }\r\n\r\n      return NaN;\r\n    },\r\n\r\n    lockDirection(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`lockDirection\\` option has been merged with \\`axis\\`. Use it as in \\`{ axis: 'lock' }\\``);\r\n      }\r\n\r\n      return NaN;\r\n    },\r\n\r\n    initial(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`initial\\` option has been renamed to \\`from\\`.`);\r\n      }\r\n\r\n      return NaN;\r\n    }\r\n\r\n  });\r\n}\r\n\r\nconst DEFAULT_AXIS_THRESHOLD = 0;\r\nconst coordinatesConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {\r\n  axis(_v, _k, {\r\n    axis\r\n  }) {\r\n    this.lockDirection = axis === 'lock';\r\n    if (!this.lockDirection) return axis;\r\n  },\r\n\r\n  axisThreshold(value = DEFAULT_AXIS_THRESHOLD) {\r\n    return value;\r\n  },\r\n\r\n  bounds(value = {}) {\r\n    if (typeof value === 'function') {\r\n      return state => coordinatesConfigResolver.bounds(value(state));\r\n    }\r\n\r\n    if ('current' in value) {\r\n      return () => value.current;\r\n    }\r\n\r\n    if (typeof HTMLElement === 'function' && value instanceof HTMLElement) {\r\n      return value;\r\n    }\r\n\r\n    const {\r\n      left = -Infinity,\r\n      right = Infinity,\r\n      top = -Infinity,\r\n      bottom = Infinity\r\n    } = value;\r\n    return [[left, right], [top, bottom]];\r\n  }\r\n\r\n});\r\n\r\nconst DISPLACEMENT = 10;\r\nconst KEYS_DELTA_MAP = {\r\n  ArrowRight: (factor = 1) => [DISPLACEMENT * factor, 0],\r\n  ArrowLeft: (factor = 1) => [-DISPLACEMENT * factor, 0],\r\n  ArrowUp: (factor = 1) => [0, -DISPLACEMENT * factor],\r\n  ArrowDown: (factor = 1) => [0, DISPLACEMENT * factor]\r\n};\r\nclass DragEngine extends CoordinatesEngine {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"ingKey\", 'dragging');\r\n  }\r\n\r\n  reset() {\r\n    super.reset();\r\n    const state = this.state;\r\n    state._pointerId = undefined;\r\n    state._pointerActive = false;\r\n    state._keyboardActive = false;\r\n    state._preventScroll = false;\r\n    state._delayed = false;\r\n    state.swipe = [0, 0];\r\n    state.tap = false;\r\n    state.canceled = false;\r\n    state.cancel = this.cancel.bind(this);\r\n  }\r\n\r\n  setup() {\r\n    const state = this.state;\r\n\r\n    if (state._bounds instanceof HTMLElement) {\r\n      const boundRect = state._bounds.getBoundingClientRect();\r\n\r\n      const targetRect = state.currentTarget.getBoundingClientRect();\r\n      const _bounds = {\r\n        left: boundRect.left - targetRect.left + state.offset[0],\r\n        right: boundRect.right - targetRect.right + state.offset[0],\r\n        top: boundRect.top - targetRect.top + state.offset[1],\r\n        bottom: boundRect.bottom - targetRect.bottom + state.offset[1]\r\n      };\r\n      state._bounds = coordinatesConfigResolver.bounds(_bounds);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    const state = this.state;\r\n    if (state.canceled) return;\r\n    state.canceled = true;\r\n    state._active = false;\r\n    setTimeout(() => {\r\n      this.compute();\r\n      this.emit();\r\n    }, 0);\r\n  }\r\n\r\n  setActive() {\r\n    this.state._active = this.state._pointerActive || this.state._keyboardActive;\r\n  }\r\n\r\n  clean() {\r\n    this.pointerClean();\r\n    this.state._pointerActive = false;\r\n    this.state._keyboardActive = false;\r\n    super.clean();\r\n  }\r\n\r\n  pointerDown(event) {\r\n    const config = this.config;\r\n    const state = this.state;\r\n    if (event.buttons != null && (Array.isArray(config.pointerButtons) ? !config.pointerButtons.includes(event.buttons) : config.pointerButtons !== -1 && config.pointerButtons !== event.buttons)) return;\r\n    const ctrlIds = this.ctrl.setEventIds(event);\r\n\r\n    if (config.pointerCapture) {\r\n      event.target.setPointerCapture(event.pointerId);\r\n    }\r\n\r\n    if (ctrlIds && ctrlIds.size > 1 && state._pointerActive) return;\r\n    this.start(event);\r\n    this.setupPointer(event);\r\n    state._pointerId = pointerId(event);\r\n    state._pointerActive = true;\r\n    this.computeValues(pointerValues(event));\r\n    this.computeInitial();\r\n\r\n    if (config.preventScrollAxis && getPointerType(event) !== 'mouse') {\r\n      state._active = false;\r\n      this.setupScrollPrevention(event);\r\n    } else if (config.delay > 0) {\r\n      this.setupDelayTrigger(event);\r\n\r\n      if (config.triggerAllEvents) {\r\n        this.compute(event);\r\n        this.emit();\r\n      }\r\n    } else {\r\n      this.startPointerDrag(event);\r\n    }\r\n  }\r\n\r\n  startPointerDrag(event) {\r\n    const state = this.state;\r\n    state._active = true;\r\n    state._preventScroll = true;\r\n    state._delayed = false;\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  pointerMove(event) {\r\n    const state = this.state;\r\n    const config = this.config;\r\n    if (!state._pointerActive) return;\r\n    if (state.type === event.type && event.timeStamp === state.timeStamp) return;\r\n    const id = pointerId(event);\r\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\r\n\r\n    const _values = pointerValues(event);\r\n\r\n    if (document.pointerLockElement === event.target) {\r\n      state._delta = [event.movementX, event.movementY];\r\n    } else {\r\n      state._delta = V.sub(_values, state._values);\r\n      this.computeValues(_values);\r\n    }\r\n\r\n    V.addTo(state._movement, state._delta);\r\n    this.compute(event);\r\n\r\n    if (state._delayed && state.intentional) {\r\n      this.timeoutStore.remove('dragDelay');\r\n      state.active = false;\r\n      this.startPointerDrag(event);\r\n      return;\r\n    }\r\n\r\n    if (config.preventScrollAxis && !state._preventScroll) {\r\n      if (state.axis) {\r\n        if (state.axis === config.preventScrollAxis || config.preventScrollAxis === 'xy') {\r\n          state._active = false;\r\n          this.clean();\r\n          return;\r\n        } else {\r\n          this.timeoutStore.remove('startPointerDrag');\r\n          this.startPointerDrag(event);\r\n          return;\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.emit();\r\n  }\r\n\r\n  pointerUp(event) {\r\n    this.ctrl.setEventIds(event);\r\n\r\n    try {\r\n      if (this.config.pointerCapture && event.target.hasPointerCapture(event.pointerId)) {\r\n        ;\r\n        event.target.releasePointerCapture(event.pointerId);\r\n      }\r\n    } catch (_unused) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn(`[@use-gesture]: If you see this message, it's likely that you're using an outdated version of \\`@react-three/fiber\\`. \\n\\nPlease upgrade to the latest version.`);\r\n      }\r\n    }\r\n\r\n    const state = this.state;\r\n    const config = this.config;\r\n    if (!state._active || !state._pointerActive) return;\r\n    const id = pointerId(event);\r\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\r\n    this.state._pointerActive = false;\r\n    this.setActive();\r\n    this.compute(event);\r\n    const [dx, dy] = state._distance;\r\n    state.tap = dx <= config.tapsThreshold && dy <= config.tapsThreshold;\r\n\r\n    if (state.tap && config.filterTaps) {\r\n      state._force = true;\r\n    } else {\r\n      const [dirx, diry] = state.direction;\r\n      const [vx, vy] = state.velocity;\r\n      const [mx, my] = state.movement;\r\n      const [svx, svy] = config.swipe.velocity;\r\n      const [sx, sy] = config.swipe.distance;\r\n      const sdt = config.swipe.duration;\r\n\r\n      if (state.elapsedTime < sdt) {\r\n        if (Math.abs(vx) > svx && Math.abs(mx) > sx) state.swipe[0] = dirx;\r\n        if (Math.abs(vy) > svy && Math.abs(my) > sy) state.swipe[1] = diry;\r\n      }\r\n    }\r\n\r\n    this.emit();\r\n  }\r\n\r\n  pointerClick(event) {\r\n    if (!this.state.tap) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  setupPointer(event) {\r\n    const config = this.config;\r\n    const device = config.device;\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      try {\r\n        if (device === 'pointer' && config.preventScrollDelay === undefined) {\r\n          const currentTarget = 'uv' in event ? event.sourceEvent.currentTarget : event.currentTarget;\r\n          const style = window.getComputedStyle(currentTarget);\r\n\r\n          if (style.touchAction === 'auto') {\r\n            console.warn(`[@use-gesture]: The drag target has its \\`touch-action\\` style property set to \\`auto\\`. It is recommended to add \\`touch-action: 'none'\\` so that the drag gesture behaves correctly on touch-enabled devices. For more information read this: https://use-gesture.netlify.app/docs/extras/#touch-action.\\n\\nThis message will only show in development mode. It won't appear in production. If this is intended, you can ignore it.`, currentTarget);\r\n          }\r\n        }\r\n      } catch (_unused2) {}\r\n    }\r\n\r\n    if (config.pointerLock) {\r\n      event.currentTarget.requestPointerLock();\r\n    }\r\n\r\n    if (!config.pointerCapture) {\r\n      this.eventStore.add(this.sharedConfig.window, device, 'change', this.pointerMove.bind(this));\r\n      this.eventStore.add(this.sharedConfig.window, device, 'end', this.pointerUp.bind(this));\r\n      this.eventStore.add(this.sharedConfig.window, device, 'cancel', this.pointerUp.bind(this));\r\n    }\r\n  }\r\n\r\n  pointerClean() {\r\n    if (this.config.pointerLock && document.pointerLockElement === this.state.currentTarget) {\r\n      document.exitPointerLock();\r\n    }\r\n  }\r\n\r\n  preventScroll(event) {\r\n    if (this.state._preventScroll && event.cancelable) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  setupScrollPrevention(event) {\r\n    this.state._preventScroll = false;\r\n    persistEvent(event);\r\n    const remove = this.eventStore.add(this.sharedConfig.window, 'touch', 'change', this.preventScroll.bind(this), {\r\n      passive: false\r\n    });\r\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'end', remove);\r\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'cancel', remove);\r\n    this.timeoutStore.add('startPointerDrag', this.startPointerDrag.bind(this), this.config.preventScrollDelay, event);\r\n  }\r\n\r\n  setupDelayTrigger(event) {\r\n    this.state._delayed = true;\r\n    this.timeoutStore.add('dragDelay', () => {\r\n      this.state._step = [0, 0];\r\n      this.startPointerDrag(event);\r\n    }, this.config.delay);\r\n  }\r\n\r\n  keyDown(event) {\r\n    const deltaFn = KEYS_DELTA_MAP[event.key];\r\n\r\n    if (deltaFn) {\r\n      const state = this.state;\r\n      const factor = event.shiftKey ? 10 : event.altKey ? 0.1 : 1;\r\n      this.start(event);\r\n      state._delta = deltaFn(factor);\r\n      state._keyboardActive = true;\r\n      V.addTo(state._movement, state._delta);\r\n      this.compute(event);\r\n      this.emit();\r\n    }\r\n  }\r\n\r\n  keyUp(event) {\r\n    if (!(event.key in KEYS_DELTA_MAP)) return;\r\n    this.state._keyboardActive = false;\r\n    this.setActive();\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  bind(bindFunction) {\r\n    const device = this.config.device;\r\n    bindFunction(device, 'start', this.pointerDown.bind(this));\r\n\r\n    if (this.config.pointerCapture) {\r\n      bindFunction(device, 'change', this.pointerMove.bind(this));\r\n      bindFunction(device, 'end', this.pointerUp.bind(this));\r\n      bindFunction(device, 'cancel', this.pointerUp.bind(this));\r\n      bindFunction('lostPointerCapture', '', this.pointerUp.bind(this));\r\n    }\r\n\r\n    bindFunction('key', 'down', this.keyDown.bind(this));\r\n    bindFunction('key', 'up', this.keyUp.bind(this));\r\n\r\n    if (this.config.filterTaps) {\r\n      bindFunction('click', '', this.pointerClick.bind(this), {\r\n        capture: true,\r\n        passive: false\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction persistEvent(event) {\r\n  'persist' in event && typeof event.persist === 'function' && event.persist();\r\n}\r\n\r\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement;\r\n\r\nfunction supportsTouchEvents() {\r\n  return isBrowser && 'ontouchstart' in window;\r\n}\r\n\r\nfunction isTouchScreen() {\r\n  return supportsTouchEvents() || isBrowser && window.navigator.maxTouchPoints > 1;\r\n}\r\n\r\nfunction supportsPointerEvents() {\r\n  return isBrowser && 'onpointerdown' in window;\r\n}\r\n\r\nfunction supportsPointerLock() {\r\n  return isBrowser && 'exitPointerLock' in window.document;\r\n}\r\n\r\nfunction supportsGestureEvents() {\r\n  try {\r\n    return 'constructor' in GestureEvent;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst SUPPORT = {\r\n  isBrowser,\r\n  gesture: supportsGestureEvents(),\r\n  touch: isTouchScreen(),\r\n  touchscreen: isTouchScreen(),\r\n  pointer: supportsPointerEvents(),\r\n  pointerLock: supportsPointerLock()\r\n};\r\n\r\nconst DEFAULT_PREVENT_SCROLL_DELAY = 250;\r\nconst DEFAULT_DRAG_DELAY = 180;\r\nconst DEFAULT_SWIPE_VELOCITY = 0.5;\r\nconst DEFAULT_SWIPE_DISTANCE = 50;\r\nconst DEFAULT_SWIPE_DURATION = 250;\r\nconst DEFAULT_DRAG_AXIS_THRESHOLD = {\r\n  mouse: 0,\r\n  touch: 0,\r\n  pen: 8\r\n};\r\nconst dragConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\r\n  device(_v, _k, {\r\n    pointer: {\r\n      touch = false,\r\n      lock = false,\r\n      mouse = false\r\n    } = {}\r\n  }) {\r\n    this.pointerLock = lock && SUPPORT.pointerLock;\r\n    if (SUPPORT.touch && touch) return 'touch';\r\n    if (this.pointerLock) return 'mouse';\r\n    if (SUPPORT.pointer && !mouse) return 'pointer';\r\n    if (SUPPORT.touch) return 'touch';\r\n    return 'mouse';\r\n  },\r\n\r\n  preventScrollAxis(value, _k, {\r\n    preventScroll\r\n  }) {\r\n    this.preventScrollDelay = typeof preventScroll === 'number' ? preventScroll : preventScroll || preventScroll === undefined && value ? DEFAULT_PREVENT_SCROLL_DELAY : undefined;\r\n    if (!SUPPORT.touchscreen || preventScroll === false) return undefined;\r\n    return value ? value : preventScroll !== undefined ? 'y' : undefined;\r\n  },\r\n\r\n  pointerCapture(_v, _k, {\r\n    pointer: {\r\n      capture = true,\r\n      buttons = 1\r\n    } = {}\r\n  }) {\r\n    this.pointerButtons = buttons;\r\n    return !this.pointerLock && this.device === 'pointer' && capture;\r\n  },\r\n\r\n  threshold(value, _k, {\r\n    filterTaps = false,\r\n    tapsThreshold = 3,\r\n    axis = undefined\r\n  }) {\r\n    const threshold = V.toVector(value, filterTaps ? tapsThreshold : axis ? 1 : 0);\r\n    this.filterTaps = filterTaps;\r\n    this.tapsThreshold = tapsThreshold;\r\n    return threshold;\r\n  },\r\n\r\n  swipe({\r\n    velocity = DEFAULT_SWIPE_VELOCITY,\r\n    distance = DEFAULT_SWIPE_DISTANCE,\r\n    duration = DEFAULT_SWIPE_DURATION\r\n  } = {}) {\r\n    return {\r\n      velocity: this.transform(V.toVector(velocity)),\r\n      distance: this.transform(V.toVector(distance)),\r\n      duration\r\n    };\r\n  },\r\n\r\n  delay(value = 0) {\r\n    switch (value) {\r\n      case true:\r\n        return DEFAULT_DRAG_DELAY;\r\n\r\n      case false:\r\n        return 0;\r\n\r\n      default:\r\n        return value;\r\n    }\r\n  },\r\n\r\n  axisThreshold(value) {\r\n    if (!value) return DEFAULT_DRAG_AXIS_THRESHOLD;\r\n    return _objectSpread2(_objectSpread2({}, DEFAULT_DRAG_AXIS_THRESHOLD), value);\r\n  }\r\n\r\n});\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  Object.assign(dragConfigResolver, {\r\n    useTouch(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`useTouch\\` option has been renamed to \\`pointer.touch\\`. Use it as in \\`{ pointer: { touch: true } }\\`.`);\r\n      }\r\n\r\n      return NaN;\r\n    },\r\n\r\n    experimental_preventWindowScrollY(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`experimental_preventWindowScrollY\\` option has been renamed to \\`preventScroll\\`.`);\r\n      }\r\n\r\n      return NaN;\r\n    },\r\n\r\n    swipeVelocity(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`swipeVelocity\\` option has been renamed to \\`swipe.velocity\\`. Use it as in \\`{ swipe: { velocity: 0.5 } }\\`.`);\r\n      }\r\n\r\n      return NaN;\r\n    },\r\n\r\n    swipeDistance(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`swipeDistance\\` option has been renamed to \\`swipe.distance\\`. Use it as in \\`{ swipe: { distance: 50 } }\\`.`);\r\n      }\r\n\r\n      return NaN;\r\n    },\r\n\r\n    swipeDuration(value) {\r\n      if (value !== undefined) {\r\n        throw Error(`[@use-gesture]: \\`swipeDuration\\` option has been renamed to \\`swipe.duration\\`. Use it as in \\`{ swipe: { duration: 250 } }\\`.`);\r\n      }\r\n\r\n      return NaN;\r\n    }\r\n\r\n  });\r\n}\r\n\r\nconst SCALE_ANGLE_RATIO_INTENT_DEG = 30;\r\nconst PINCH_WHEEL_RATIO = 100;\r\nclass PinchEngine extends Engine {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"ingKey\", 'pinching');\r\n\r\n    _defineProperty(this, \"aliasKey\", 'da');\r\n  }\r\n\r\n  init() {\r\n    this.state.offset = [1, 0];\r\n    this.state.lastOffset = [1, 0];\r\n    this.state._pointerEvents = new Map();\r\n  }\r\n\r\n  reset() {\r\n    super.reset();\r\n    const state = this.state;\r\n    state._touchIds = [];\r\n    state.canceled = false;\r\n    state.cancel = this.cancel.bind(this);\r\n    state.turns = 0;\r\n  }\r\n\r\n  computeOffset() {\r\n    const {\r\n      type,\r\n      movement,\r\n      lastOffset\r\n    } = this.state;\r\n\r\n    if (type === 'wheel') {\r\n      this.state.offset = V.add(movement, lastOffset);\r\n    } else {\r\n      this.state.offset = [(1 + movement[0]) * lastOffset[0], movement[1] + lastOffset[1]];\r\n    }\r\n  }\r\n\r\n  computeMovement() {\r\n    const {\r\n      offset,\r\n      lastOffset\r\n    } = this.state;\r\n    this.state.movement = [offset[0] / lastOffset[0], offset[1] - lastOffset[1]];\r\n  }\r\n\r\n  axisIntent() {\r\n    const state = this.state;\r\n    const [_m0, _m1] = state._movement;\r\n\r\n    if (!state.axis) {\r\n      const axisMovementDifference = Math.abs(_m0) * SCALE_ANGLE_RATIO_INTENT_DEG - Math.abs(_m1);\r\n      if (axisMovementDifference < 0) state.axis = 'angle';else if (axisMovementDifference > 0) state.axis = 'scale';\r\n    }\r\n  }\r\n\r\n  restrictToAxis(v) {\r\n    if (this.config.lockDirection) {\r\n      if (this.state.axis === 'scale') v[1] = 0;else if (this.state.axis === 'angle') v[0] = 0;\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    const state = this.state;\r\n    if (state.canceled) return;\r\n    setTimeout(() => {\r\n      state.canceled = true;\r\n      state._active = false;\r\n      this.compute();\r\n      this.emit();\r\n    }, 0);\r\n  }\r\n\r\n  touchStart(event) {\r\n    this.ctrl.setEventIds(event);\r\n    const state = this.state;\r\n    const ctrlTouchIds = this.ctrl.touchIds;\r\n\r\n    if (state._active) {\r\n      if (state._touchIds.every(id => ctrlTouchIds.has(id))) return;\r\n    }\r\n\r\n    if (ctrlTouchIds.size < 2) return;\r\n    this.start(event);\r\n    state._touchIds = Array.from(ctrlTouchIds).slice(0, 2);\r\n    const payload = touchDistanceAngle(event, state._touchIds);\r\n    this.pinchStart(event, payload);\r\n  }\r\n\r\n  pointerStart(event) {\r\n    if (event.buttons != null && event.buttons % 2 !== 1) return;\r\n    this.ctrl.setEventIds(event);\r\n    event.target.setPointerCapture(event.pointerId);\r\n    const state = this.state;\r\n    const _pointerEvents = state._pointerEvents;\r\n    const ctrlPointerIds = this.ctrl.pointerIds;\r\n\r\n    if (state._active) {\r\n      if (Array.from(_pointerEvents.keys()).every(id => ctrlPointerIds.has(id))) return;\r\n    }\r\n\r\n    if (_pointerEvents.size < 2) {\r\n      _pointerEvents.set(event.pointerId, event);\r\n    }\r\n\r\n    if (state._pointerEvents.size < 2) return;\r\n    this.start(event);\r\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\r\n    this.pinchStart(event, payload);\r\n  }\r\n\r\n  pinchStart(event, payload) {\r\n    const state = this.state;\r\n    state.origin = payload.origin;\r\n    this.computeValues([payload.distance, payload.angle]);\r\n    this.computeInitial();\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  touchMove(event) {\r\n    if (!this.state._active) return;\r\n    const payload = touchDistanceAngle(event, this.state._touchIds);\r\n    this.pinchMove(event, payload);\r\n  }\r\n\r\n  pointerMove(event) {\r\n    const _pointerEvents = this.state._pointerEvents;\r\n\r\n    if (_pointerEvents.has(event.pointerId)) {\r\n      _pointerEvents.set(event.pointerId, event);\r\n    }\r\n\r\n    if (!this.state._active) return;\r\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\r\n    this.pinchMove(event, payload);\r\n  }\r\n\r\n  pinchMove(event, payload) {\r\n    const state = this.state;\r\n    const prev_a = state._values[1];\r\n    const delta_a = payload.angle - prev_a;\r\n    let delta_turns = 0;\r\n    if (Math.abs(delta_a) > 270) delta_turns += Math.sign(delta_a);\r\n    this.computeValues([payload.distance, payload.angle - 360 * delta_turns]);\r\n    state.origin = payload.origin;\r\n    state.turns = delta_turns;\r\n    state._movement = [state._values[0] / state._initial[0] - 1, state._values[1] - state._initial[1]];\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  touchEnd(event) {\r\n    this.ctrl.setEventIds(event);\r\n    if (!this.state._active) return;\r\n\r\n    if (this.state._touchIds.some(id => !this.ctrl.touchIds.has(id))) {\r\n      this.state._active = false;\r\n      this.compute(event);\r\n      this.emit();\r\n    }\r\n  }\r\n\r\n  pointerEnd(event) {\r\n    const state = this.state;\r\n    this.ctrl.setEventIds(event);\r\n\r\n    try {\r\n      event.target.releasePointerCapture(event.pointerId);\r\n    } catch (_unused) {}\r\n\r\n    if (state._pointerEvents.has(event.pointerId)) {\r\n      state._pointerEvents.delete(event.pointerId);\r\n    }\r\n\r\n    if (!state._active) return;\r\n\r\n    if (state._pointerEvents.size < 2) {\r\n      state._active = false;\r\n      this.compute(event);\r\n      this.emit();\r\n    }\r\n  }\r\n\r\n  gestureStart(event) {\r\n    if (event.cancelable) event.preventDefault();\r\n    const state = this.state;\r\n    if (state._active) return;\r\n    this.start(event);\r\n    this.computeValues([event.scale, event.rotation]);\r\n    state.origin = [event.clientX, event.clientY];\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  gestureMove(event) {\r\n    if (event.cancelable) event.preventDefault();\r\n    if (!this.state._active) return;\r\n    const state = this.state;\r\n    this.computeValues([event.scale, event.rotation]);\r\n    state.origin = [event.clientX, event.clientY];\r\n    const _previousMovement = state._movement;\r\n    state._movement = [event.scale - 1, event.rotation];\r\n    state._delta = V.sub(state._movement, _previousMovement);\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  gestureEnd(event) {\r\n    if (!this.state._active) return;\r\n    this.state._active = false;\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  wheel(event) {\r\n    const modifierKey = this.config.modifierKey;\r\n    if (modifierKey && !event[modifierKey]) return;\r\n    if (!this.state._active) this.wheelStart(event);else this.wheelChange(event);\r\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\r\n  }\r\n\r\n  wheelStart(event) {\r\n    this.start(event);\r\n    this.wheelChange(event);\r\n  }\r\n\r\n  wheelChange(event) {\r\n    const isR3f = ('uv' in event);\r\n\r\n    if (!isR3f) {\r\n      if (event.cancelable) {\r\n        event.preventDefault();\r\n      }\r\n\r\n      if (process.env.NODE_ENV === 'development' && !event.defaultPrevented) {\r\n        console.warn(`[@use-gesture]: To properly support zoom on trackpads, try using the \\`target\\` option.\\n\\nThis message will only appear in development mode.`);\r\n      }\r\n    }\r\n\r\n    const state = this.state;\r\n    state._delta = [-wheelValues(event)[1] / PINCH_WHEEL_RATIO * state.offset[0], 0];\r\n    V.addTo(state._movement, state._delta);\r\n    this.state.origin = [event.clientX, event.clientY];\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  wheelEnd() {\r\n    if (!this.state._active) return;\r\n    this.state._active = false;\r\n    this.compute();\r\n    this.emit();\r\n  }\r\n\r\n  bind(bindFunction) {\r\n    const device = this.config.device;\r\n\r\n    if (!!device) {\r\n      bindFunction(device, 'start', this[device + 'Start'].bind(this));\r\n      bindFunction(device, 'change', this[device + 'Move'].bind(this));\r\n      bindFunction(device, 'end', this[device + 'End'].bind(this));\r\n      bindFunction(device, 'cancel', this[device + 'End'].bind(this));\r\n    } else {\r\n      bindFunction('wheel', '', this.wheel.bind(this), {\r\n        passive: false\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst pinchConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {\r\n  device(_v, _k, {\r\n    shared,\r\n    pointer: {\r\n      touch = false\r\n    } = {}\r\n  }) {\r\n    const sharedConfig = shared;\r\n    if (sharedConfig.target && !SUPPORT.touch && SUPPORT.gesture) return 'gesture';\r\n    if (SUPPORT.touch && touch) return 'touch';\r\n\r\n    if (SUPPORT.touchscreen) {\r\n      if (SUPPORT.pointer) return 'pointer';\r\n      if (SUPPORT.touch) return 'touch';\r\n    }\r\n  },\r\n\r\n  bounds(_v, _k, {\r\n    scaleBounds = {},\r\n    angleBounds = {}\r\n  }) {\r\n    const _scaleBounds = state => {\r\n      const D = assignDefault(call(scaleBounds, state), {\r\n        min: -Infinity,\r\n        max: Infinity\r\n      });\r\n      return [D.min, D.max];\r\n    };\r\n\r\n    const _angleBounds = state => {\r\n      const A = assignDefault(call(angleBounds, state), {\r\n        min: -Infinity,\r\n        max: Infinity\r\n      });\r\n      return [A.min, A.max];\r\n    };\r\n\r\n    if (typeof scaleBounds !== 'function' && typeof angleBounds !== 'function') return [_scaleBounds(), _angleBounds()];\r\n    return state => [_scaleBounds(state), _angleBounds(state)];\r\n  },\r\n\r\n  threshold(value, _k, config) {\r\n    this.lockDirection = config.axis === 'lock';\r\n    const threshold = V.toVector(value, this.lockDirection ? [0.1, 3] : 0);\r\n    return threshold;\r\n  },\r\n\r\n  modifierKey(value) {\r\n    if (value === undefined) return 'ctrlKey';\r\n    return value;\r\n  }\r\n\r\n});\r\n\r\nclass MoveEngine extends CoordinatesEngine {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"ingKey\", 'moving');\r\n  }\r\n\r\n  move(event) {\r\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\r\n    if (!this.state._active) this.moveStart(event);else this.moveChange(event);\r\n    this.timeoutStore.add('moveEnd', this.moveEnd.bind(this));\r\n  }\r\n\r\n  moveStart(event) {\r\n    this.start(event);\r\n    this.computeValues(pointerValues(event));\r\n    this.compute(event);\r\n    this.computeInitial();\r\n    this.emit();\r\n  }\r\n\r\n  moveChange(event) {\r\n    if (!this.state._active) return;\r\n    const values = pointerValues(event);\r\n    const state = this.state;\r\n    state._delta = V.sub(values, state._values);\r\n    V.addTo(state._movement, state._delta);\r\n    this.computeValues(values);\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  moveEnd(event) {\r\n    if (!this.state._active) return;\r\n    this.state._active = false;\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  bind(bindFunction) {\r\n    bindFunction('pointer', 'change', this.move.bind(this));\r\n    bindFunction('pointer', 'leave', this.moveEnd.bind(this));\r\n  }\r\n\r\n}\r\n\r\nconst moveConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\r\n  mouseOnly: (value = true) => value\r\n});\r\n\r\nclass ScrollEngine extends CoordinatesEngine {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"ingKey\", 'scrolling');\r\n  }\r\n\r\n  scroll(event) {\r\n    if (!this.state._active) this.start(event);\r\n    this.scrollChange(event);\r\n    this.timeoutStore.add('scrollEnd', this.scrollEnd.bind(this));\r\n  }\r\n\r\n  scrollChange(event) {\r\n    if (event.cancelable) event.preventDefault();\r\n    const state = this.state;\r\n    const values = scrollValues(event);\r\n    state._delta = V.sub(values, state._values);\r\n    V.addTo(state._movement, state._delta);\r\n    this.computeValues(values);\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  scrollEnd() {\r\n    if (!this.state._active) return;\r\n    this.state._active = false;\r\n    this.compute();\r\n    this.emit();\r\n  }\r\n\r\n  bind(bindFunction) {\r\n    bindFunction('scroll', '', this.scroll.bind(this));\r\n  }\r\n\r\n}\r\n\r\nconst scrollConfigResolver = coordinatesConfigResolver;\r\n\r\nclass WheelEngine extends CoordinatesEngine {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"ingKey\", 'wheeling');\r\n  }\r\n\r\n  wheel(event) {\r\n    if (!this.state._active) this.start(event);\r\n    this.wheelChange(event);\r\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\r\n  }\r\n\r\n  wheelChange(event) {\r\n    const state = this.state;\r\n    state._delta = wheelValues(event);\r\n    V.addTo(state._movement, state._delta);\r\n    const [ox, oy] = state.overflow;\r\n    const [dx, dy] = state._delta;\r\n    const [dirx, diry] = state._direction;\r\n\r\n    if (ox < 0 && dx > 0 && dirx < 0 || ox > 0 && dx < 0 && dirx > 0) {\r\n      state._movement[0] = state._movementBound[0];\r\n    }\r\n\r\n    if (oy < 0 && dy > 0 && diry < 0 || oy > 0 && dy < 0 && diry > 0) {\r\n      state._movement[1] = state._movementBound[1];\r\n    }\r\n\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  wheelEnd() {\r\n    if (!this.state._active) return;\r\n    this.state._active = false;\r\n    this.compute();\r\n    this.emit();\r\n  }\r\n\r\n  bind(bindFunction) {\r\n    bindFunction('wheel', '', this.wheel.bind(this));\r\n  }\r\n\r\n}\r\n\r\nconst wheelConfigResolver = coordinatesConfigResolver;\r\n\r\nclass HoverEngine extends CoordinatesEngine {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    _defineProperty(this, \"ingKey\", 'hovering');\r\n  }\r\n\r\n  enter(event) {\r\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\r\n    this.start(event);\r\n    this.computeValues(pointerValues(event));\r\n    this.compute(event);\r\n    this.emit();\r\n  }\r\n\r\n  leave(event) {\r\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\r\n    const state = this.state;\r\n    if (!state._active) return;\r\n    state._active = false;\r\n    const values = pointerValues(event);\r\n    state._movement = state._delta = V.sub(values, state._values);\r\n    this.computeValues(values);\r\n    this.compute(event);\r\n    state.delta = state.movement;\r\n    this.emit();\r\n  }\r\n\r\n  bind(bindFunction) {\r\n    bindFunction('pointer', 'enter', this.enter.bind(this));\r\n    bindFunction('pointer', 'leave', this.leave.bind(this));\r\n  }\r\n\r\n}\r\n\r\nconst hoverConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\r\n  mouseOnly: (value = true) => value\r\n});\r\n\r\nconst EngineMap = new Map();\r\nconst ConfigResolverMap = new Map();\r\nfunction registerAction(action) {\r\n  EngineMap.set(action.key, action.engine);\r\n  ConfigResolverMap.set(action.key, action.resolver);\r\n}\r\nconst dragAction = {\r\n  key: 'drag',\r\n  engine: DragEngine,\r\n  resolver: dragConfigResolver\r\n};\r\nconst hoverAction = {\r\n  key: 'hover',\r\n  engine: HoverEngine,\r\n  resolver: hoverConfigResolver\r\n};\r\nconst moveAction = {\r\n  key: 'move',\r\n  engine: MoveEngine,\r\n  resolver: moveConfigResolver\r\n};\r\nconst pinchAction = {\r\n  key: 'pinch',\r\n  engine: PinchEngine,\r\n  resolver: pinchConfigResolver\r\n};\r\nconst scrollAction = {\r\n  key: 'scroll',\r\n  engine: ScrollEngine,\r\n  resolver: scrollConfigResolver\r\n};\r\nconst wheelAction = {\r\n  key: 'wheel',\r\n  engine: WheelEngine,\r\n  resolver: wheelConfigResolver\r\n};\r\n\r\nexport { ConfigResolverMap as C, EngineMap as E, SUPPORT as S, _objectSpread2 as _, _defineProperty as a, touchIds as b, chain as c, toHandlerProp as d, dragAction as e, pinchAction as f, hoverAction as h, isTouch as i, moveAction as m, parseProp as p, registerAction as r, scrollAction as s, toDomEventType as t, wheelAction as w };\r\n", "import { registerAction, dragAction, pinchAction, wheelAction, scrollAction, moveAction, hoverAction } from '@use-gesture/core/actions';\r\nexport * from '@use-gesture/core/actions';\r\nimport React from 'react';\r\nimport { Controller, parseMergedHandlers } from '@use-gesture/core';\r\nexport * from '@use-gesture/core/utils';\r\nexport * from '@use-gesture/core/types';\r\n\r\nfunction useRecognizers(handlers, config = {}, gestureKey, nativeHandlers) {\r\n  const ctrl = React.useMemo(() => new Controller(handlers), []);\r\n  ctrl.applyHandlers(handlers, nativeHandlers);\r\n  ctrl.applyConfig(config, gestureKey);\r\n  React.useEffect(ctrl.effect.bind(ctrl));\r\n  React.useEffect(() => {\r\n    return ctrl.clean.bind(ctrl);\r\n  }, []);\r\n\r\n  if (config.target === undefined) {\r\n    return ctrl.bind.bind(ctrl);\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction useDrag(handler, config) {\r\n  registerAction(dragAction);\r\n  return useRecognizers({\r\n    drag: handler\r\n  }, config || {}, 'drag');\r\n}\r\n\r\nfunction usePinch(handler, config) {\r\n  registerAction(pinchAction);\r\n  return useRecognizers({\r\n    pinch: handler\r\n  }, config || {}, 'pinch');\r\n}\r\n\r\nfunction useWheel(handler, config) {\r\n  registerAction(wheelAction);\r\n  return useRecognizers({\r\n    wheel: handler\r\n  }, config || {}, 'wheel');\r\n}\r\n\r\nfunction useScroll(handler, config) {\r\n  registerAction(scrollAction);\r\n  return useRecognizers({\r\n    scroll: handler\r\n  }, config || {}, 'scroll');\r\n}\r\n\r\nfunction useMove(handler, config) {\r\n  registerAction(moveAction);\r\n  return useRecognizers({\r\n    move: handler\r\n  }, config || {}, 'move');\r\n}\r\n\r\nfunction useHover(handler, config) {\r\n  registerAction(hoverAction);\r\n  return useRecognizers({\r\n    hover: handler\r\n  }, config || {}, 'hover');\r\n}\r\n\r\nfunction createUseGesture(actions) {\r\n  actions.forEach(registerAction);\r\n  return function useGesture(_handlers, _config) {\r\n    const {\r\n      handlers,\r\n      nativeHandlers,\r\n      config\r\n    } = parseMergedHandlers(_handlers, _config || {});\r\n    return useRecognizers(handlers, config, undefined, nativeHandlers);\r\n  };\r\n}\r\n\r\nfunction useGesture(handlers, config) {\r\n  const hook = createUseGesture([dragAction, pinchAction, scrollAction, wheelAction, moveAction, hoverAction]);\r\n  return hook(handlers, config || {});\r\n}\r\n\r\nexport { createUseGesture, useDrag, useGesture, useHover, useMove, usePinch, useScroll, useWheel };\r\n", "import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, p as parseProp, d as toHandlerProp } from './actions-1416bf77.esm.js';\r\nimport './maths-b2a210f4.esm.js';\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _objectWithoutProperties(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = _objectWithoutPropertiesLoose(source, excluded);\r\n  var key, i;\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n\r\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n      key = sourceSymbolKeys[i];\r\n      if (excluded.indexOf(key) >= 0) continue;\r\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nconst sharedConfigResolver = {\r\n  target(value) {\r\n    if (value) {\r\n      return () => 'current' in value ? value.current : value;\r\n    }\r\n\r\n    return undefined;\r\n  },\r\n\r\n  enabled(value = true) {\r\n    return value;\r\n  },\r\n\r\n  window(value = SUPPORT.isBrowser ? window : undefined) {\r\n    return value;\r\n  },\r\n\r\n  eventOptions({\r\n    passive = true,\r\n    capture = false\r\n  } = {}) {\r\n    return {\r\n      passive,\r\n      capture\r\n    };\r\n  },\r\n\r\n  transform(value) {\r\n    return value;\r\n  }\r\n\r\n};\r\n\r\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\r\nfunction resolveWith(config = {}, resolvers) {\r\n  const result = {};\r\n\r\n  for (const [key, resolver] of Object.entries(resolvers)) {\r\n    switch (typeof resolver) {\r\n      case 'function':\r\n        if (process.env.NODE_ENV === 'development') {\r\n          const r = resolver.call(result, config[key], key, config);\r\n          if (!Number.isNaN(r)) result[key] = r;\r\n        } else {\r\n          result[key] = resolver.call(result, config[key], key, config);\r\n        }\r\n\r\n        break;\r\n\r\n      case 'object':\r\n        result[key] = resolveWith(config[key], resolver);\r\n        break;\r\n\r\n      case 'boolean':\r\n        if (resolver) result[key] = config[key];\r\n        break;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\nfunction parse(config, gestureKey) {\r\n  const _ref = config,\r\n        {\r\n    target,\r\n    eventOptions,\r\n    window,\r\n    enabled,\r\n    transform\r\n  } = _ref,\r\n        rest = _objectWithoutProperties(_ref, _excluded);\r\n\r\n  const _config = {\r\n    shared: resolveWith({\r\n      target,\r\n      eventOptions,\r\n      window,\r\n      enabled,\r\n      transform\r\n    }, sharedConfigResolver)\r\n  };\r\n\r\n  if (gestureKey) {\r\n    const resolver = ConfigResolverMap.get(gestureKey);\r\n    _config[gestureKey] = resolveWith(_objectSpread2({\r\n      shared: _config.shared\r\n    }, rest), resolver);\r\n  } else {\r\n    for (const key in rest) {\r\n      const resolver = ConfigResolverMap.get(key);\r\n\r\n      if (resolver) {\r\n        _config[key] = resolveWith(_objectSpread2({\r\n          shared: _config.shared\r\n        }, rest[key]), resolver);\r\n      } else if (process.env.NODE_ENV === 'development') {\r\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\r\n          if (key === 'domTarget') {\r\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\r\n          }\r\n\r\n          console.warn(`[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return _config;\r\n}\r\n\r\nclass EventStore {\r\n  constructor(ctrl, gestureKey) {\r\n    _defineProperty(this, \"_listeners\", new Set());\r\n\r\n    this._ctrl = ctrl;\r\n    this._gestureKey = gestureKey;\r\n  }\r\n\r\n  add(element, device, action, handler, options) {\r\n    const listeners = this._listeners;\r\n    const type = toDomEventType(device, action);\r\n\r\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};\r\n\r\n    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);\r\n\r\n    element.addEventListener(type, handler, eventOptions);\r\n\r\n    const remove = () => {\r\n      element.removeEventListener(type, handler, eventOptions);\r\n      listeners.delete(remove);\r\n    };\r\n\r\n    listeners.add(remove);\r\n    return remove;\r\n  }\r\n\r\n  clean() {\r\n    this._listeners.forEach(remove => remove());\r\n\r\n    this._listeners.clear();\r\n  }\r\n\r\n}\r\n\r\nclass TimeoutStore {\r\n  constructor() {\r\n    _defineProperty(this, \"_timeouts\", new Map());\r\n  }\r\n\r\n  add(key, callback, ms = 140, ...args) {\r\n    this.remove(key);\r\n\r\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\r\n  }\r\n\r\n  remove(key) {\r\n    const timeout = this._timeouts.get(key);\r\n\r\n    if (timeout) window.clearTimeout(timeout);\r\n  }\r\n\r\n  clean() {\r\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\r\n\r\n    this._timeouts.clear();\r\n  }\r\n\r\n}\r\n\r\nclass Controller {\r\n  constructor(handlers) {\r\n    _defineProperty(this, \"gestures\", new Set());\r\n\r\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\r\n\r\n    _defineProperty(this, \"gestureEventStores\", {});\r\n\r\n    _defineProperty(this, \"gestureTimeoutStores\", {});\r\n\r\n    _defineProperty(this, \"handlers\", {});\r\n\r\n    _defineProperty(this, \"config\", {});\r\n\r\n    _defineProperty(this, \"pointerIds\", new Set());\r\n\r\n    _defineProperty(this, \"touchIds\", new Set());\r\n\r\n    _defineProperty(this, \"state\", {\r\n      shared: {\r\n        shiftKey: false,\r\n        metaKey: false,\r\n        ctrlKey: false,\r\n        altKey: false\r\n      }\r\n    });\r\n\r\n    resolveGestures(this, handlers);\r\n  }\r\n\r\n  setEventIds(event) {\r\n    if (isTouch(event)) {\r\n      this.touchIds = new Set(touchIds(event));\r\n      return this.touchIds;\r\n    } else if ('pointerId' in event) {\r\n      if (event.type === 'pointerup' || event.type === 'pointercancel') this.pointerIds.delete(event.pointerId);else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\r\n      return this.pointerIds;\r\n    }\r\n  }\r\n\r\n  applyHandlers(handlers, nativeHandlers) {\r\n    this.handlers = handlers;\r\n    this.nativeHandlers = nativeHandlers;\r\n  }\r\n\r\n  applyConfig(config, gestureKey) {\r\n    this.config = parse(config, gestureKey);\r\n  }\r\n\r\n  clean() {\r\n    this._targetEventStore.clean();\r\n\r\n    for (const key of this.gestures) {\r\n      this.gestureEventStores[key].clean();\r\n      this.gestureTimeoutStores[key].clean();\r\n    }\r\n  }\r\n\r\n  effect() {\r\n    if (this.config.shared.target) this.bind();\r\n    return () => this._targetEventStore.clean();\r\n  }\r\n\r\n  bind(...args) {\r\n    const sharedConfig = this.config.shared;\r\n    const props = {};\r\n    let target;\r\n\r\n    if (sharedConfig.target) {\r\n      target = sharedConfig.target();\r\n      if (!target) return;\r\n    }\r\n\r\n    if (sharedConfig.enabled) {\r\n      for (const gestureKey of this.gestures) {\r\n        const gestureConfig = this.config[gestureKey];\r\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\r\n\r\n        if (gestureConfig.enabled) {\r\n          const Engine = EngineMap.get(gestureKey);\r\n          new Engine(this, args, gestureKey).bind(bindFunction);\r\n        }\r\n      }\r\n\r\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\r\n\r\n      for (const eventKey in this.nativeHandlers) {\r\n        nativeBindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\r\n          event,\r\n          args\r\n        })), undefined, true);\r\n      }\r\n    }\r\n\r\n    for (const handlerProp in props) {\r\n      props[handlerProp] = chain(...props[handlerProp]);\r\n    }\r\n\r\n    if (!target) return props;\r\n\r\n    for (const handlerProp in props) {\r\n      const {\r\n        device,\r\n        capture,\r\n        passive\r\n      } = parseProp(handlerProp);\r\n\r\n      this._targetEventStore.add(target, device, '', props[handlerProp], {\r\n        capture,\r\n        passive\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction setupGesture(ctrl, gestureKey) {\r\n  ctrl.gestures.add(gestureKey);\r\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\r\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\r\n}\r\n\r\nfunction resolveGestures(ctrl, internalHandlers) {\r\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\r\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\r\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\r\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\r\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\r\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\r\n}\r\n\r\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\r\n  var _options$capture, _options$passive;\r\n\r\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\r\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\r\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\r\n  if (withPassiveOption && passive) handlerProp += 'Passive';\r\n  props[handlerProp] = props[handlerProp] || [];\r\n  props[handlerProp].push(handler);\r\n};\r\n\r\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\r\n\r\nfunction sortHandlers(_handlers) {\r\n  const native = {};\r\n  const handlers = {};\r\n  const actions = new Set();\r\n\r\n  for (let key in _handlers) {\r\n    if (RE_NOT_NATIVE.test(key)) {\r\n      actions.add(RegExp.lastMatch);\r\n      handlers[key] = _handlers[key];\r\n    } else {\r\n      native[key] = _handlers[key];\r\n    }\r\n  }\r\n\r\n  return [handlers, native, actions];\r\n}\r\n\r\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\r\n  if (!actions.has(handlerKey)) return;\r\n\r\n  if (!EngineMap.has(key)) {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  const startKey = handlerKey + 'Start';\r\n  const endKey = handlerKey + 'End';\r\n\r\n  const fn = state => {\r\n    let memo = undefined;\r\n    if (state.first && startKey in handlers) handlers[startKey](state);\r\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\r\n    if (state.last && endKey in handlers) handlers[endKey](state);\r\n    return memo;\r\n  };\r\n\r\n  internalHandlers[key] = fn;\r\n  config[key] = config[key] || {};\r\n}\r\n\r\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\r\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\r\n  const internalHandlers = {};\r\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\r\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\r\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\r\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\r\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\r\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\r\n  return {\r\n    handlers: internalHandlers,\r\n    config: mergedConfig,\r\n    nativeHandlers\r\n  };\r\n}\r\n\r\nexport { Controller, parseMergedHandlers };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { SelectionBox } from 'three-stdlib';\r\nimport { useThree } from '@react-three/fiber';\r\nimport shallow from 'zustand/shallow';\r\n\r\nconst context = /*#__PURE__*/React.createContext([]);\r\nfunction Select({\r\n  box,\r\n  multiple,\r\n  children,\r\n  onChange,\r\n  border = '1px solid #55aaff',\r\n  backgroundColor = 'rgba(75, 160, 255, 0.1)',\r\n  filter: customFilter = item => item,\r\n  ...props\r\n}) {\r\n  const {\r\n    setEvents,\r\n    camera,\r\n    raycaster,\r\n    gl,\r\n    controls,\r\n    size,\r\n    get\r\n  } = useThree();\r\n  const [hovered, hover] = React.useState(false);\r\n  const [active, dispatch] = React.useReducer((state, {\r\n    object,\r\n    shift\r\n  }) => {\r\n    if (object === undefined) return [];else if (Array.isArray(object)) return object;else if (!shift) return state[0] === object ? [] : [object];else if (state.includes(object)) return state.filter(o => o !== object);else return [object, ...state];\r\n  }, []);\r\n  React.useEffect(() => void (onChange == null ? void 0 : onChange(active)), [active]);\r\n  const onClick = React.useCallback(e => {\r\n    e.stopPropagation();\r\n    dispatch({\r\n      object: customFilter([e.object])[0],\r\n      shift: multiple && e.shiftKey\r\n    });\r\n  }, []);\r\n  const onPointerMissed = React.useCallback(e => !hovered && dispatch({}), [hovered]);\r\n  const ref = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (!box || !multiple) return;\r\n    const selBox = new SelectionBox(camera, ref.current);\r\n    const element = document.createElement('div');\r\n    element.style.pointerEvents = 'none';\r\n    element.style.border = border;\r\n    element.style.backgroundColor = backgroundColor;\r\n    element.style.position = 'fixed';\r\n    const startPoint = new THREE.Vector2();\r\n    const pointTopLeft = new THREE.Vector2();\r\n    const pointBottomRight = new THREE.Vector2();\r\n    const oldRaycasterEnabled = get().events.enabled;\r\n    const oldControlsEnabled = controls == null ? void 0 : controls.enabled;\r\n    let isDown = false;\r\n\r\n    function prepareRay(event, vec) {\r\n      const {\r\n        offsetX,\r\n        offsetY\r\n      } = event;\r\n      const {\r\n        width,\r\n        height\r\n      } = size;\r\n      vec.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\r\n    }\r\n\r\n    function onSelectStart(event) {\r\n      var _gl$domElement$parent;\r\n\r\n      if (controls) controls.enabled = false;\r\n      setEvents({\r\n        enabled: false\r\n      });\r\n      isDown = true;\r\n      (_gl$domElement$parent = gl.domElement.parentElement) == null ? void 0 : _gl$domElement$parent.appendChild(element);\r\n      element.style.left = `${event.clientX}px`;\r\n      element.style.top = `${event.clientY}px`;\r\n      element.style.width = '0px';\r\n      element.style.height = '0px';\r\n      startPoint.x = event.clientX;\r\n      startPoint.y = event.clientY;\r\n    }\r\n\r\n    function onSelectMove(event) {\r\n      pointBottomRight.x = Math.max(startPoint.x, event.clientX);\r\n      pointBottomRight.y = Math.max(startPoint.y, event.clientY);\r\n      pointTopLeft.x = Math.min(startPoint.x, event.clientX);\r\n      pointTopLeft.y = Math.min(startPoint.y, event.clientY);\r\n      element.style.left = `${pointTopLeft.x}px`;\r\n      element.style.top = `${pointTopLeft.y}px`;\r\n      element.style.width = `${pointBottomRight.x - pointTopLeft.x}px`;\r\n      element.style.height = `${pointBottomRight.y - pointTopLeft.y}px`;\r\n    }\r\n\r\n    function onSelectOver() {\r\n      if (isDown) {\r\n        var _element$parentElemen;\r\n\r\n        if (controls) controls.enabled = oldControlsEnabled;\r\n        setEvents({\r\n          enabled: oldRaycasterEnabled\r\n        });\r\n        isDown = false;\r\n        (_element$parentElemen = element.parentElement) == null ? void 0 : _element$parentElemen.removeChild(element);\r\n      }\r\n    }\r\n\r\n    function pointerDown(event) {\r\n      if (event.shiftKey) {\r\n        onSelectStart(event);\r\n        prepareRay(event, selBox.startPoint);\r\n      }\r\n    }\r\n\r\n    let previous = [];\r\n\r\n    function pointerMove(event) {\r\n      if (isDown) {\r\n        onSelectMove(event);\r\n        prepareRay(event, selBox.endPoint);\r\n        const allSelected = selBox.select().sort(o => o.uuid).filter(o => o.isMesh);\r\n\r\n        if (!shallow(allSelected, previous)) {\r\n          previous = allSelected;\r\n          dispatch({\r\n            object: customFilter(allSelected)\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    function pointerUp(event) {\r\n      if (isDown) onSelectOver();\r\n    }\r\n\r\n    document.addEventListener('pointerdown', pointerDown, {\r\n      passive: true\r\n    });\r\n    document.addEventListener('pointermove', pointerMove, {\r\n      passive: true,\r\n      capture: true\r\n    });\r\n    document.addEventListener('pointerup', pointerUp, {\r\n      passive: true\r\n    });\r\n    return () => {\r\n      document.removeEventListener('pointerdown', pointerDown);\r\n      document.removeEventListener('pointermove', pointerMove);\r\n      document.removeEventListener('pointerup', pointerUp);\r\n    };\r\n  }, [size, raycaster, camera, controls, gl]);\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    ref: ref,\r\n    onClick: onClick,\r\n    onPointerOver: () => hover(true),\r\n    onPointerOut: () => hover(false),\r\n    onPointerMissed: onPointerMissed\r\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\r\n    value: active\r\n  }, children));\r\n}\r\nfunction useSelect() {\r\n  return React.useContext(context);\r\n}\r\n\r\nexport { Select, useSelect };\r\n", "function shallow(objA, objB) {\r\n  if (Object.is(objA, objB)) {\r\n    return true;\r\n  }\r\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\r\n    return false;\r\n  }\r\n  const keysA = Object.keys(objA);\r\n  if (keysA.length !== Object.keys(objB).length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport { shallow as default };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\n/**\r\n * Wraps children in a billboarded group. Sample usage:\r\n *\r\n * ```js\r\n * <Billboard>\r\n *   <Text>hi</Text>\r\n * </Billboard>\r\n * ```\r\n */\r\nconst Billboard = /*#__PURE__*/React.forwardRef(function Billboard({\r\n  follow = true,\r\n  lockX = false,\r\n  lockY = false,\r\n  lockZ = false,\r\n  ...props\r\n}, ref) {\r\n  const localRef = React.useRef();\r\n  useFrame(({\r\n    camera\r\n  }) => {\r\n    if (!follow || !localRef.current) return; // save previous rotation in case we're locking an axis\r\n\r\n    const prevRotation = localRef.current.rotation.clone(); // always face the camera\r\n\r\n    localRef.current.quaternion.copy(camera.quaternion); // readjust any axis that is locked\r\n\r\n    if (lockX) localRef.current.rotation.x = prevRotation.x;\r\n    if (lockY) localRef.current.rotation.y = prevRotation.y;\r\n    if (lockZ) localRef.current.rotation.z = prevRotation.z;\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    ref: mergeRefs([localRef, ref])\r\n  }, props));\r\n});\r\n\r\nexport { Billboard };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Vector3, QuadraticBezierCurve3 } from 'three';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { Line } from './Line.js';\r\n\r\nconst v = new Vector3();\r\nconst QuadraticBezierLine = /*#__PURE__*/React.forwardRef(function QuadraticBezierLine({\r\n  start = [0, 0, 0],\r\n  end = [0, 0, 0],\r\n  mid,\r\n  segments = 20,\r\n  ...rest\r\n}, forwardref) {\r\n  const ref = React.useRef(null);\r\n  const [curve] = React.useState(() => new QuadraticBezierCurve3(undefined, undefined, undefined));\r\n  const getPoints = React.useCallback((start, end, mid, segments = 20) => {\r\n    if (start instanceof Vector3) curve.v0.copy(start);else curve.v0.set(...start);\r\n    if (end instanceof Vector3) curve.v2.copy(end);else curve.v2.set(...end);\r\n\r\n    if (mid instanceof Vector3) {\r\n      curve.v1.copy(mid);\r\n    } else {\r\n      curve.v1.copy(curve.v0.clone().add(curve.v2.clone().sub(curve.v0)).add(v.set(0, curve.v0.y - curve.v2.y, 0)));\r\n    }\r\n\r\n    return curve.getPoints(segments);\r\n  }, []);\r\n  React.useLayoutEffect(() => {\r\n    ref.current.setPoints = (start, end, mid) => {\r\n      const points = getPoints(start, end, mid);\r\n      if (ref.current.geometry) ref.current.geometry.setPositions(points.map(p => p.toArray()).flat());\r\n    };\r\n  }, []);\r\n  const points = React.useMemo(() => getPoints(start, end, mid, segments), [start, end, mid, segments]);\r\n  return /*#__PURE__*/React.createElement(Line, _extends({\r\n    ref: mergeRefs([ref, forwardref]),\r\n    points: points\r\n  }, rest));\r\n});\r\n\r\nexport { QuadraticBezierLine };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Vector2, Vector3, Color } from 'three';\r\nimport { Line2, LineMaterial, LineGeometry } from 'three-stdlib';\r\n\r\nconst Line = /*#__PURE__*/React.forwardRef(function Line({\r\n  points,\r\n  color = 'black',\r\n  vertexColors,\r\n  lineWidth,\r\n  dashed,\r\n  ...rest\r\n}, ref) {\r\n  const [line2] = React.useState(() => new Line2());\r\n  const [lineMaterial] = React.useState(() => new LineMaterial());\r\n  const [resolution] = React.useState(() => new Vector2(512, 512));\r\n  const lineGeom = React.useMemo(() => {\r\n    const geom = new LineGeometry();\r\n    const pValues = points.map(p => p instanceof Vector3 ? p.toArray() : p);\r\n    geom.setPositions(pValues.flat());\r\n\r\n    if (vertexColors) {\r\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\r\n      geom.setColors(cValues.flat());\r\n    }\r\n\r\n    return geom;\r\n  }, [points, vertexColors]);\r\n  React.useLayoutEffect(() => {\r\n    line2.computeLineDistances();\r\n  }, [points, line2]);\r\n  React.useLayoutEffect(() => {\r\n    if (dashed) {\r\n      lineMaterial.defines.USE_DASH = '';\r\n    } else {\r\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\r\n      delete lineMaterial.defines.USE_DASH;\r\n    }\r\n\r\n    lineMaterial.needsUpdate = true;\r\n  }, [dashed, lineMaterial]);\r\n  React.useEffect(() => {\r\n    return () => lineGeom.dispose();\r\n  }, [lineGeom]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: line2,\r\n    ref: ref\r\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\r\n    object: lineGeom,\r\n    attach: \"geometry\"\r\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: lineMaterial,\r\n    attach: \"material\",\r\n    color: color,\r\n    vertexColors: Boolean(vertexColors),\r\n    resolution: resolution,\r\n    linewidth: lineWidth,\r\n    dashed: dashed\r\n  }, rest)));\r\n});\r\n\r\nexport { Line };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Vector3, CubicBezierCurve3 } from 'three';\r\nimport { Line } from './Line.js';\r\n\r\nconst CubicBezierLine = /*#__PURE__*/React.forwardRef(function CubicBezierLine({\r\n  start,\r\n  end,\r\n  midA,\r\n  midB,\r\n  segments = 20,\r\n  ...rest\r\n}, ref) {\r\n  const points = React.useMemo(() => {\r\n    const startV = start instanceof Vector3 ? start : new Vector3(...start);\r\n    const endV = end instanceof Vector3 ? end : new Vector3(...end);\r\n    const midAV = midA instanceof Vector3 ? midA : new Vector3(...midA);\r\n    const midBV = midB instanceof Vector3 ? midB : new Vector3(...midB);\r\n    const interpolatedV = new CubicBezierCurve3(startV, midAV, midBV, endV).getPoints(segments);\r\n    return interpolatedV;\r\n  }, [start, end, midA, midB, segments]);\r\n  return /*#__PURE__*/React.createElement(Line, _extends({\r\n    ref: ref,\r\n    points: points\r\n  }, rest));\r\n});\r\n\r\nexport { CubicBezierLine };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { AudioListener, AudioLoader } from 'three';\r\nimport { useThree, useLoader } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nconst PositionalAudio = /*#__PURE__*/React.forwardRef(({\r\n  url,\r\n  distance = 1,\r\n  loop = true,\r\n  autoplay,\r\n  ...props\r\n}, ref) => {\r\n  const sound = React.useRef();\r\n  const camera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const [listener] = React.useState(() => new AudioListener());\r\n  const buffer = useLoader(AudioLoader, url);\r\n  React.useEffect(() => {\r\n    const _sound = sound.current;\r\n\r\n    if (_sound) {\r\n      _sound.setBuffer(buffer);\r\n\r\n      _sound.setRefDistance(distance);\r\n\r\n      _sound.setLoop(loop);\r\n\r\n      if (autoplay && !_sound.isPlaying) _sound.play();\r\n    }\r\n  }, [buffer, camera, distance, loop]);\r\n  React.useEffect(() => {\r\n    const _sound = sound.current;\r\n    camera.add(listener);\r\n    return () => {\r\n      camera.remove(listener);\r\n\r\n      if (_sound) {\r\n        if (_sound.isPlaying) _sound.stop();\r\n        if (_sound.source && _sound.source._connected) _sound.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n  return /*#__PURE__*/React.createElement(\"positionalAudio\", _extends({\r\n    ref: mergeRefs([sound, ref]),\r\n    args: [listener]\r\n  }, props));\r\n});\r\n\r\nexport { PositionalAudio };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Text as Text$1, preloadFont } from 'troika-three-text';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { suspend } from 'suspend-react';\r\n\r\n// eslint-disable-next-line prettier/prettier\r\nconst Text = /*#__PURE__*/React.forwardRef(({\r\n  anchorX = 'center',\r\n  anchorY = 'middle',\r\n  font,\r\n  children,\r\n  characters,\r\n  onSync,\r\n  ...props\r\n}, ref) => {\r\n  const invalidate = useThree(({\r\n    invalidate\r\n  }) => invalidate);\r\n  const [troikaMesh] = React.useState(() => new Text$1());\r\n  const [nodes, text] = React.useMemo(() => {\r\n    const n = [];\r\n    let t = '';\r\n    React.Children.forEach(children, child => {\r\n      if (typeof child === 'string' || typeof child === 'number') {\r\n        t += child;\r\n      } else {\r\n        n.push(child);\r\n      }\r\n    });\r\n    return [n, t];\r\n  }, [children]);\r\n  suspend(() => new Promise(res => preloadFont({\r\n    font,\r\n    characters\r\n  }, res)), ['troika-text', font, characters]);\r\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\r\n    invalidate();\r\n    if (onSync) onSync(troikaMesh);\r\n  }));\r\n  React.useEffect(() => {\r\n    return () => troikaMesh.dispose();\r\n  }, [troikaMesh]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: troikaMesh,\r\n    ref: ref,\r\n    font: font,\r\n    text: text,\r\n    anchorX: anchorX,\r\n    anchorY: anchorY\r\n  }, props), nodes);\r\n});\r\n\r\nexport { Text };\r\n", "import { Texture, LinearFilter, Color, InstancedBufferGeometry, Sphere, Box3, BackSide, DoubleSide, InstancedBufferAttribute, PlaneBufferGeometry, BufferGeometry, Float32BufferAttribute, Vector2, Vector4, Matrix3, MeshBasicMaterial, Matrix4, Vector3, Mesh, FrontSide } from 'three';\r\nimport { terminateWorker, Thenable, defineWorkerModule, ThenableWorkerModule } from 'troika-worker-utils';\r\nimport createSDFGenerator from 'webgl-sdf-generator';\r\nimport bidiFactory from 'bidi-js';\r\nimport { createDerivedMaterial, voidMainRegExp } from 'troika-three-utils';\r\n\r\n/**\r\n * Factory function that creates a self-contained environment for processing text typesetting requests.\r\n *\r\n * It is important that this function has no closure dependencies, so that it can be easily injected\r\n * into the source for a Worker without requiring a build step or complex dependency loading. All its\r\n * dependencies must be passed in at initialization.\r\n *\r\n * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\r\n * a standardized structure giving access to the font and its glyphs:\r\n *   {\r\n *     unitsPerEm: number,\r\n *     ascender: number,\r\n *     descender: number,\r\n *     forEachGlyph(string, fontSize, letterSpacing, callback) {\r\n *       //invokes callback for each glyph to render, passing it an object:\r\n *       callback({\r\n *         index: number,\r\n *         advanceWidth: number,\r\n *         xMin: number,\r\n *         yMin: number,\r\n *         xMax: number,\r\n *         yMax: number,\r\n *         pathCommandCount: number,\r\n *         forEachPathCommand(callback) {\r\n *           //invokes callback for each path command, with args:\r\n *           callback(\r\n *             type: 'M|L|C|Q|Z',\r\n *             ...args //0 to 6 args depending on the type\r\n *           )\r\n *         }\r\n *       })\r\n *     }\r\n *   }\r\n * @param {object} bidi - the bidi.js implementation object\r\n * @param {Object} config\r\n * @return {Object}\r\n */\r\nfunction createTypesetter(fontParser, bidi, config) {\r\n\r\n  const {\r\n    defaultFontURL\r\n  } = config;\r\n\r\n  /**\r\n   * Holds parsed font objects by url\r\n   */\r\n  const fonts = Object.create(null);\r\n\r\n  const INF = Infinity;\r\n\r\n  // Set of Unicode Default_Ignorable_Code_Point characters, these will not produce visible glyphs\r\n  const DEFAULT_IGNORABLE_CHARS = /[\\u00AD\\u034F\\u061C\\u115F-\\u1160\\u17B4-\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8]/;\r\n\r\n  // Incomplete set of characters that allow line breaking after them\r\n  // In the future we may consider a full Unicode line breaking algorithm impl: https://www.unicode.org/reports/tr14\r\n  const BREAK_AFTER_CHARS = /[\\s\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]/;\r\n\r\n  /**\r\n   * Load a given font url\r\n   */\r\n  function doLoadFont(url, callback) {\r\n    function tryLoad() {\r\n      const onError = err => {\r\n        console.error(`Failure loading font ${url}${url === defaultFontURL ? '' : '; trying fallback'}`, err);\r\n        if (url !== defaultFontURL) {\r\n          url = defaultFontURL;\r\n          tryLoad();\r\n        }\r\n      };\r\n      try {\r\n        const request = new XMLHttpRequest();\r\n        request.open('get', url, true);\r\n        request.responseType = 'arraybuffer';\r\n        request.onload = function () {\r\n          if (request.status >= 400) {\r\n            onError(new Error(request.statusText));\r\n          }\r\n          else if (request.status > 0) {\r\n            try {\r\n              const fontObj = fontParser(request.response);\r\n              callback(fontObj);\r\n            } catch (e) {\r\n              onError(e);\r\n            }\r\n          }\r\n        };\r\n        request.onerror = onError;\r\n        request.send();\r\n      } catch(err) {\r\n        onError(err);\r\n      }\r\n    }\r\n    tryLoad();\r\n  }\r\n\r\n\r\n  /**\r\n   * Load a given font url if needed, invoking a callback when it's loaded. If already\r\n   * loaded, the callback will be called synchronously.\r\n   */\r\n  function loadFont(fontUrl, callback) {\r\n    if (!fontUrl) fontUrl = defaultFontURL;\r\n    let font = fonts[fontUrl];\r\n    if (font) {\r\n      // if currently loading font, add to callbacks, otherwise execute immediately\r\n      if (font.pending) {\r\n        font.pending.push(callback);\r\n      } else {\r\n        callback(font);\r\n      }\r\n    } else {\r\n      fonts[fontUrl] = {pending: [callback]};\r\n      doLoadFont(fontUrl, fontObj => {\r\n        let callbacks = fonts[fontUrl].pending;\r\n        fonts[fontUrl] = fontObj;\r\n        callbacks.forEach(cb => cb(fontObj));\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Main entry point.\r\n   * Process a text string with given font and formatting parameters, and return all info\r\n   * necessary to render all its glyphs.\r\n   */\r\n  function typeset(\r\n    {\r\n      text='',\r\n      font=defaultFontURL,\r\n      sdfGlyphSize=64,\r\n      fontSize=1,\r\n      letterSpacing=0,\r\n      lineHeight='normal',\r\n      maxWidth=INF,\r\n      direction,\r\n      textAlign='left',\r\n      textIndent=0,\r\n      whiteSpace='normal',\r\n      overflowWrap='normal',\r\n      anchorX = 0,\r\n      anchorY = 0,\r\n      includeCaretPositions=false,\r\n      chunkedBoundsSize=8192,\r\n      colorRanges=null\r\n    },\r\n    callback,\r\n    metricsOnly=false\r\n  ) {\r\n    const mainStart = now();\r\n    const timings = {fontLoad: 0, typesetting: 0};\r\n\r\n    // Ensure newlines are normalized\r\n    if (text.indexOf('\\r') > -1) {\r\n      console.info('Typesetter: got text with \\\\r chars; normalizing to \\\\n');\r\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\r\n    }\r\n\r\n    // Ensure we've got numbers not strings\r\n    fontSize = +fontSize;\r\n    letterSpacing = +letterSpacing;\r\n    maxWidth = +maxWidth;\r\n    lineHeight = lineHeight || 'normal';\r\n    textIndent = +textIndent;\r\n\r\n    loadFont(font, fontObj => {\r\n      const hasMaxWidth = isFinite(maxWidth);\r\n      let glyphIds = null;\r\n      let glyphPositions = null;\r\n      let glyphData = null;\r\n      let glyphColors = null;\r\n      let caretPositions = null;\r\n      let visibleBounds = null;\r\n      let chunkedBounds = null;\r\n      let maxLineWidth = 0;\r\n      let renderableGlyphCount = 0;\r\n      let canWrap = whiteSpace !== 'nowrap';\r\n      const {ascender, descender, unitsPerEm} = fontObj;\r\n      timings.fontLoad = now() - mainStart;\r\n      const typesetStart = now();\r\n\r\n      // Find conversion between native font units and fontSize units; this will already be done\r\n      // for the gx/gy values below but everything else we'll need to convert\r\n      const fontSizeMult = fontSize / unitsPerEm;\r\n\r\n      // Determine appropriate value for 'normal' line height based on the font's actual metrics\r\n      // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\r\n      if (lineHeight === 'normal') {\r\n        lineHeight = (ascender - descender) / unitsPerEm;\r\n      }\r\n\r\n      // Determine line height and leading adjustments\r\n      lineHeight = lineHeight * fontSize;\r\n      const halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\r\n      const topBaseline = -(ascender * fontSizeMult + halfLeading);\r\n      const caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\r\n      const caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\r\n\r\n      // Distribute glyphs into lines based on wrapping\r\n      let lineXOffset = textIndent;\r\n      let currentLine = new TextLine();\r\n      const lines = [currentLine];\r\n\r\n      fontObj.forEachGlyph(text, fontSize, letterSpacing, (glyphObj, glyphX, charIndex) => {\r\n        const char = text.charAt(charIndex);\r\n        const glyphWidth = glyphObj.advanceWidth * fontSizeMult;\r\n        const curLineCount = currentLine.count;\r\n        let nextLine;\r\n\r\n        // Calc isWhitespace and isEmpty once per glyphObj\r\n        if (!('isEmpty' in glyphObj)) {\r\n          glyphObj.isWhitespace = !!char && /\\s/.test(char);\r\n          glyphObj.canBreakAfter = !!char && BREAK_AFTER_CHARS.test(char);\r\n          glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax || DEFAULT_IGNORABLE_CHARS.test(char);\r\n        }\r\n        if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\r\n          renderableGlyphCount++;\r\n        }\r\n\r\n        // If a non-whitespace character overflows the max width, we need to soft-wrap\r\n        if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\r\n          // If it's the first char after a whitespace, start a new line\r\n          if (currentLine.glyphAt(curLineCount - 1).glyphObj.canBreakAfter) {\r\n            nextLine = new TextLine();\r\n            lineXOffset = -glyphX;\r\n          } else {\r\n            // Back up looking for a whitespace character to wrap at\r\n            for (let i = curLineCount; i--;) {\r\n              // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\r\n              if (i === 0 && overflowWrap === 'break-word') {\r\n                nextLine = new TextLine();\r\n                lineXOffset = -glyphX;\r\n                break\r\n              }\r\n              // Found a soft break point; move all chars since it to a new line\r\n              else if (currentLine.glyphAt(i).glyphObj.canBreakAfter) {\r\n                nextLine = currentLine.splitAt(i + 1);\r\n                const adjustX = nextLine.glyphAt(0).x;\r\n                lineXOffset -= adjustX;\r\n                for (let j = nextLine.count; j--;) {\r\n                  nextLine.glyphAt(j).x -= adjustX;\r\n                }\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (nextLine) {\r\n            currentLine.isSoftWrapped = true;\r\n            currentLine = nextLine;\r\n            lines.push(currentLine);\r\n            maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\r\n          }\r\n        }\r\n\r\n        let fly = currentLine.glyphAt(currentLine.count);\r\n        fly.glyphObj = glyphObj;\r\n        fly.x = glyphX + lineXOffset;\r\n        fly.width = glyphWidth;\r\n        fly.charIndex = charIndex;\r\n\r\n        // Handle hard line breaks\r\n        if (char === '\\n') {\r\n          currentLine = new TextLine();\r\n          lines.push(currentLine);\r\n          lineXOffset = -(glyphX + glyphWidth + (letterSpacing * fontSize)) + textIndent;\r\n        }\r\n      });\r\n\r\n      // Calculate width of each line (excluding trailing whitespace) and maximum block width\r\n      lines.forEach(line => {\r\n        for (let i = line.count; i--;) {\r\n          let {glyphObj, x, width} = line.glyphAt(i);\r\n          if (!glyphObj.isWhitespace) {\r\n            line.width = x + width;\r\n            if (line.width > maxLineWidth) {\r\n              maxLineWidth = line.width;\r\n            }\r\n            return\r\n          }\r\n        }\r\n      });\r\n\r\n      // Find overall position adjustments for anchoring\r\n      let anchorXOffset = 0;\r\n      let anchorYOffset = 0;\r\n      if (anchorX) {\r\n        if (typeof anchorX === 'number') {\r\n          anchorXOffset = -anchorX;\r\n        }\r\n        else if (typeof anchorX === 'string') {\r\n          anchorXOffset = -maxLineWidth * (\r\n            anchorX === 'left' ? 0 :\r\n            anchorX === 'center' ? 0.5 :\r\n            anchorX === 'right' ? 1 :\r\n            parsePercent(anchorX)\r\n          );\r\n        }\r\n      }\r\n      if (anchorY) {\r\n        if (typeof anchorY === 'number') {\r\n          anchorYOffset = -anchorY;\r\n        }\r\n        else if (typeof anchorY === 'string') {\r\n          let height = lines.length * lineHeight;\r\n          anchorYOffset = anchorY === 'top' ? 0 :\r\n            anchorY === 'top-baseline' ? -topBaseline :\r\n            anchorY === 'middle' ? height / 2 :\r\n            anchorY === 'bottom' ? height :\r\n            anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult :\r\n            parsePercent(anchorY) * height;\r\n        }\r\n      }\r\n\r\n      if (!metricsOnly) {\r\n        // Resolve bidi levels\r\n        const bidiLevelsResult = bidi.getEmbeddingLevels(text, direction);\r\n\r\n        // Process each line, applying alignment offsets, adding each glyph to the atlas, and\r\n        // collecting all renderable glyphs into a single collection.\r\n        glyphIds = new Uint16Array(renderableGlyphCount);\r\n        glyphPositions = new Float32Array(renderableGlyphCount * 2);\r\n        glyphData = {};\r\n        visibleBounds = [INF, INF, -INF, -INF];\r\n        chunkedBounds = [];\r\n        let lineYOffset = topBaseline;\r\n        if (includeCaretPositions) {\r\n          caretPositions = new Float32Array(text.length * 3);\r\n        }\r\n        if (colorRanges) {\r\n          glyphColors = new Uint8Array(renderableGlyphCount * 3);\r\n        }\r\n        let renderableGlyphIndex = 0;\r\n        let prevCharIndex = -1;\r\n        let colorCharIndex = -1;\r\n        let chunk;\r\n        let currentColor;\r\n        lines.forEach((line, lineIndex) => {\r\n          let {count:lineGlyphCount, width:lineWidth} = line;\r\n\r\n          // Ignore empty lines\r\n          if (lineGlyphCount > 0) {\r\n            // Count trailing whitespaces, we want to ignore these for certain things\r\n            let trailingWhitespaceCount = 0;\r\n            for (let i = lineGlyphCount; i-- && line.glyphAt(i).glyphObj.isWhitespace;) {\r\n              trailingWhitespaceCount++;\r\n            }\r\n\r\n            // Apply horizontal alignment adjustments\r\n            let lineXOffset = 0;\r\n            let justifyAdjust = 0;\r\n            if (textAlign === 'center') {\r\n              lineXOffset = (maxLineWidth - lineWidth) / 2;\r\n            } else if (textAlign === 'right') {\r\n              lineXOffset = maxLineWidth - lineWidth;\r\n            } else if (textAlign === 'justify' && line.isSoftWrapped) {\r\n              // count non-trailing whitespace characters, and we'll adjust the offsets per character in the next loop\r\n              let whitespaceCount = 0;\r\n              for (let i = lineGlyphCount - trailingWhitespaceCount; i--;) {\r\n                if (line.glyphAt(i).glyphObj.isWhitespace) {\r\n                  whitespaceCount++;\r\n                }\r\n              }\r\n              justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\r\n            }\r\n            if (justifyAdjust || lineXOffset) {\r\n              let justifyOffset = 0;\r\n              for (let i = 0; i < lineGlyphCount; i++) {\r\n                let glyphInfo = line.glyphAt(i);\r\n                const glyphObj = glyphInfo.glyphObj;\r\n                glyphInfo.x += lineXOffset + justifyOffset;\r\n                // Expand non-trailing whitespaces for justify alignment\r\n                if (justifyAdjust !== 0 && glyphObj.isWhitespace && i < lineGlyphCount - trailingWhitespaceCount) {\r\n                  justifyOffset += justifyAdjust;\r\n                  glyphInfo.width += justifyAdjust;\r\n                }\r\n              }\r\n            }\r\n\r\n            // Perform bidi range flipping\r\n            const flips = bidi.getReorderSegments(\r\n              text, bidiLevelsResult, line.glyphAt(0).charIndex, line.glyphAt(line.count - 1).charIndex\r\n            );\r\n            for (let fi = 0; fi < flips.length; fi++) {\r\n              const [start, end] = flips[fi];\r\n              // Map start/end string indices to indices in the line\r\n              let left = Infinity, right = -Infinity;\r\n              for (let i = 0; i < lineGlyphCount; i++) {\r\n                if (line.glyphAt(i).charIndex >= start) { // gte to handle removed characters\r\n                  let startInLine = i, endInLine = i;\r\n                  for (; endInLine < lineGlyphCount; endInLine++) {\r\n                    let info = line.glyphAt(endInLine);\r\n                    if (info.charIndex > end) {\r\n                      break\r\n                    }\r\n                    if (endInLine < lineGlyphCount - trailingWhitespaceCount) { //don't include trailing ws in flip width\r\n                      left = Math.min(left, info.x);\r\n                      right = Math.max(right, info.x + info.width);\r\n                    }\r\n                  }\r\n                  for (let j = startInLine; j < endInLine; j++) {\r\n                    const glyphInfo = line.glyphAt(j);\r\n                    glyphInfo.x = right - (glyphInfo.x + glyphInfo.width - left);\r\n                  }\r\n                  break\r\n                }\r\n              }\r\n            }\r\n\r\n            // Assemble final data arrays\r\n            let glyphObj;\r\n            const setGlyphObj = g => glyphObj = g;\r\n            for (let i = 0; i < lineGlyphCount; i++) {\r\n              let glyphInfo = line.glyphAt(i);\r\n              glyphObj = glyphInfo.glyphObj;\r\n              const glyphId = glyphObj.index;\r\n\r\n              // Replace mirrored characters in rtl\r\n              const rtl = bidiLevelsResult.levels[glyphInfo.charIndex] & 1; //odd level means rtl\r\n              if (rtl) {\r\n                const mirrored = bidi.getMirroredCharacter(text[glyphInfo.charIndex]);\r\n                if (mirrored) {\r\n                  fontObj.forEachGlyph(mirrored, 0, 0, setGlyphObj);\r\n                }\r\n              }\r\n\r\n              // Add caret positions\r\n              if (includeCaretPositions) {\r\n                const {charIndex} = glyphInfo;\r\n                const caretLeft = glyphInfo.x + anchorXOffset;\r\n                const caretRight = glyphInfo.x + glyphInfo.width + anchorXOffset;\r\n                caretPositions[charIndex * 3] = rtl ? caretRight : caretLeft; //start edge x\r\n                caretPositions[charIndex * 3 + 1] = rtl ? caretLeft : caretRight; //end edge x\r\n                caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\r\n\r\n                // If we skipped any chars from the previous glyph (due to ligature subs), fill in caret\r\n                // positions for those missing char indices; currently this uses a best-guess by dividing\r\n                // the ligature's width evenly. In the future we may try to use the font's LigatureCaretList\r\n                // table to get better interior caret positions.\r\n                const ligCount = charIndex - prevCharIndex;\r\n                if (ligCount > 1) {\r\n                  fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\r\n                }\r\n                prevCharIndex = charIndex;\r\n              }\r\n\r\n              // Track current color range\r\n              if (colorRanges) {\r\n                const {charIndex} = glyphInfo;\r\n                while(charIndex > colorCharIndex) {\r\n                  colorCharIndex++;\r\n                  if (colorRanges.hasOwnProperty(colorCharIndex)) {\r\n                    currentColor = colorRanges[colorCharIndex];\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Get atlas data for renderable glyphs\r\n              if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\r\n                const idx = renderableGlyphIndex++;\r\n\r\n                // Add this glyph's path data\r\n                if (!glyphData[glyphId]) {\r\n                  glyphData[glyphId] = {\r\n                    path: glyphObj.path,\r\n                    pathBounds: [glyphObj.xMin, glyphObj.yMin, glyphObj.xMax, glyphObj.yMax]\r\n                  };\r\n                }\r\n\r\n                // Determine final glyph position and add to glyphPositions array\r\n                const glyphX = glyphInfo.x + anchorXOffset;\r\n                const glyphY = lineYOffset + anchorYOffset;\r\n                glyphPositions[idx * 2] = glyphX;\r\n                glyphPositions[idx * 2 + 1] = glyphY;\r\n\r\n                // Track total visible bounds\r\n                const visX0 = glyphX + glyphObj.xMin * fontSizeMult;\r\n                const visY0 = glyphY + glyphObj.yMin * fontSizeMult;\r\n                const visX1 = glyphX + glyphObj.xMax * fontSizeMult;\r\n                const visY1 = glyphY + glyphObj.yMax * fontSizeMult;\r\n                if (visX0 < visibleBounds[0]) visibleBounds[0] = visX0;\r\n                if (visY0 < visibleBounds[1]) visibleBounds[1] = visY0;\r\n                if (visX1 > visibleBounds[2]) visibleBounds[2] = visX1;\r\n                if (visY1 > visibleBounds[3]) visibleBounds[3] = visY1;\r\n\r\n                // Track bounding rects for each chunk of N glyphs\r\n                if (idx % chunkedBoundsSize === 0) {\r\n                  chunk = {start: idx, end: idx, rect: [INF, INF, -INF, -INF]};\r\n                  chunkedBounds.push(chunk);\r\n                }\r\n                chunk.end++;\r\n                const chunkRect = chunk.rect;\r\n                if (visX0 < chunkRect[0]) chunkRect[0] = visX0;\r\n                if (visY0 < chunkRect[1]) chunkRect[1] = visY0;\r\n                if (visX1 > chunkRect[2]) chunkRect[2] = visX1;\r\n                if (visY1 > chunkRect[3]) chunkRect[3] = visY1;\r\n\r\n                // Add to glyph ids array\r\n                glyphIds[idx] = glyphId;\r\n\r\n                // Add colors\r\n                if (colorRanges) {\r\n                  const start = idx * 3;\r\n                  glyphColors[start] = currentColor >> 16 & 255;\r\n                  glyphColors[start + 1] = currentColor >> 8 & 255;\r\n                  glyphColors[start + 2] = currentColor & 255;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // Increment y offset for next line\r\n          lineYOffset -= lineHeight;\r\n        });\r\n\r\n        // Fill in remaining caret positions in case the final character was a ligature\r\n        if (caretPositions) {\r\n          const ligCount = text.length - prevCharIndex;\r\n          if (ligCount > 1) {\r\n            fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Timing stats\r\n      timings.typesetting = now() - typesetStart;\r\n\r\n      callback({\r\n        glyphIds, //font indices for each glyph\r\n        glyphPositions, //x,y of each glyph's origin in layout\r\n        glyphData, //dict holding data about each glyph appearing in the text\r\n        caretPositions, //startX,endX,bottomY caret positions for each char\r\n        caretHeight, //height of cursor from bottom to top\r\n        glyphColors, //color for each glyph, if color ranges supplied\r\n        chunkedBounds, //total rects per (n=chunkedBoundsSize) consecutive glyphs\r\n        fontSize, //calculated em height\r\n        unitsPerEm, //font units per em\r\n        ascender: ascender * fontSizeMult, //font ascender\r\n        descender: descender * fontSizeMult, //font descender\r\n        lineHeight, //computed line height\r\n        topBaseline, //y coordinate of the top line's baseline\r\n        blockBounds: [ //bounds for the whole block of text, including vertical padding for lineHeight\r\n          anchorXOffset,\r\n          anchorYOffset - lines.length * lineHeight,\r\n          anchorXOffset + maxLineWidth,\r\n          anchorYOffset\r\n        ],\r\n        visibleBounds, //total bounds of visible text paths, may be larger or smaller than totalBounds\r\n        timings\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * For a given text string and font parameters, determine the resulting block dimensions\r\n   * after wrapping for the given maxWidth.\r\n   * @param args\r\n   * @param callback\r\n   */\r\n  function measure(args, callback) {\r\n    typeset(args, (result) => {\r\n      const [x0, y0, x1, y1] = result.blockBounds;\r\n      callback({\r\n        width: x1 - x0,\r\n        height: y1 - y0\r\n      });\r\n    }, {metricsOnly: true});\r\n  }\r\n\r\n  function parsePercent(str) {\r\n    let match = str.match(/^([\\d.]+)%$/);\r\n    let pct = match ? parseFloat(match[1]) : NaN;\r\n    return isNaN(pct) ? 0 : pct / 100\r\n  }\r\n\r\n  function fillLigatureCaretPositions(caretPositions, ligStartIndex, ligCount) {\r\n    const ligStartX = caretPositions[ligStartIndex * 3];\r\n    const ligEndX = caretPositions[ligStartIndex * 3 + 1];\r\n    const ligY = caretPositions[ligStartIndex * 3 + 2];\r\n    const guessedAdvanceX = (ligEndX - ligStartX) / ligCount;\r\n    for (let i = 0; i < ligCount; i++) {\r\n      const startIndex = (ligStartIndex + i) * 3;\r\n      caretPositions[startIndex] = ligStartX + guessedAdvanceX * i;\r\n      caretPositions[startIndex + 1] = ligStartX + guessedAdvanceX * (i + 1);\r\n      caretPositions[startIndex + 2] = ligY;\r\n    }\r\n  }\r\n\r\n  function now() {\r\n    return (self.performance || Date).now()\r\n  }\r\n\r\n  // Array-backed structure for a single line's glyphs data\r\n  function TextLine() {\r\n    this.data = [];\r\n  }\r\n  const textLineProps = ['glyphObj', 'x', 'width', 'charIndex'];\r\n  TextLine.prototype = {\r\n    width: 0,\r\n    isSoftWrapped: false,\r\n    get count() {\r\n      return Math.ceil(this.data.length / textLineProps.length)\r\n    },\r\n    glyphAt(i) {\r\n      let fly = TextLine.flyweight;\r\n      fly.data = this.data;\r\n      fly.index = i;\r\n      return fly\r\n    },\r\n    splitAt(i) {\r\n      let newLine = new TextLine();\r\n      newLine.data = this.data.splice(i * textLineProps.length);\r\n      return newLine\r\n    }\r\n  };\r\n  TextLine.flyweight = textLineProps.reduce((obj, prop, i, all) => {\r\n    Object.defineProperty(obj, prop, {\r\n      get() {\r\n        return this.data[this.index * textLineProps.length + i]\r\n      },\r\n      set(val) {\r\n        this.data[this.index * textLineProps.length + i] = val;\r\n      }\r\n    });\r\n    return obj\r\n  }, {data: null, index: 0});\r\n\r\n\r\n  return {\r\n    typeset,\r\n    measure,\r\n    loadFont\r\n  }\r\n}\r\n\r\nconst now = () => (self.performance || Date).now();\r\n\r\nconst mainThreadGenerator = createSDFGenerator();\r\n\r\nlet warned;\r\n\r\n/**\r\n * Generate an SDF texture image for a single glyph path, placing the result into a webgl canvas at a\r\n * given location and channel. Utilizes the webgl-sdf-generator external package for GPU-accelerated SDF\r\n * generation when supported.\r\n */\r\nfunction generateSDF(width, height, path, viewBox, distance, exponent, canvas, x, y, channel, useWebGL = true) {\r\n  // Allow opt-out\r\n  if (!useWebGL) {\r\n    return generateSDF_JS_Worker(width, height, path, viewBox, distance, exponent, canvas, x, y, channel)\r\n  }\r\n\r\n  // Attempt GPU-accelerated generation first\r\n  return generateSDF_GL(width, height, path, viewBox, distance, exponent, canvas, x, y, channel).then(\r\n    null,\r\n    err => {\r\n      // WebGL failed either due to a hard error or unexpected results; fall back to JS in workers\r\n      if (!warned) {\r\n        console.warn(`WebGL SDF generation failed, falling back to JS`, err);\r\n        warned = true;\r\n      }\r\n      return generateSDF_JS_Worker(width, height, path, viewBox, distance, exponent, canvas, x, y, channel)\r\n    }\r\n  )\r\n}\r\n\r\n/**\r\n * WebGL-based implementation executed on the main thread. Requests are executed in time-bounded\r\n * macrotask chunks to allow render frames to execute in between.\r\n */\r\nconst generateSDF_GL = /*#__PURE__*/function() {\r\n  const queue = [];\r\n  const chunkTimeBudget = 5; //ms\r\n  let timer = 0;\r\n  function nextChunk() {\r\n    const start = now();\r\n    while (queue.length && now() - start < chunkTimeBudget) {\r\n      queue.shift()();\r\n    }\r\n    timer = queue.length ? setTimeout(nextChunk, 0) : 0;\r\n  }\r\n  return (...args) => {\r\n    const thenable = Thenable();\r\n    queue.push(() => {\r\n      const start = now();\r\n      try {\r\n        mainThreadGenerator.webgl.generateIntoCanvas(...args);\r\n        thenable.resolve({timing: now() - start});\r\n      } catch(err) {\r\n        thenable.reject(err);\r\n      }\r\n    });\r\n    if (!timer) {\r\n      timer = setTimeout(nextChunk, 0);\r\n    }\r\n    return thenable\r\n  }\r\n}();\r\n\r\n/**\r\n * Fallback JS-based implementation, fanned out to a number of worker threads for parallelism\r\n */\r\nconst generateSDF_JS_Worker = /*#__PURE__*/function() {\r\n  const threadCount = 4; //how many workers to spawn\r\n  const idleTimeout = 2000; //workers will be terminated after being idle this many milliseconds\r\n  const threads = {};\r\n  let callNum = 0;\r\n  return function(width, height, path, viewBox, distance, exponent, canvas, x, y, channel) {\r\n    const workerId = 'TroikaTextSDFGenerator_JS_' + ((callNum++) % threadCount);\r\n    let thread = threads[workerId];\r\n    if (!thread) {\r\n      thread = threads[workerId] = {\r\n        workerModule: defineWorkerModule({\r\n          name: workerId,\r\n          workerId,\r\n          dependencies: [\r\n            createSDFGenerator,\r\n            now\r\n          ],\r\n          init(_createSDFGenerator, now) {\r\n            const generate = _createSDFGenerator().javascript.generate;\r\n            return function (...args) {\r\n              const start = now();\r\n              const textureData = generate(...args);\r\n              return {\r\n                textureData,\r\n                timing: now() - start\r\n              }\r\n            }\r\n          },\r\n          getTransferables(result) {\r\n            return [result.textureData.buffer]\r\n          }\r\n        }),\r\n        requests: 0,\r\n        idleTimer: null\r\n      };\r\n    }\r\n\r\n    thread.requests++;\r\n    clearTimeout(thread.idleTimer);\r\n    return thread.workerModule(width, height, path, viewBox, distance, exponent)\r\n      .then(({textureData, timing}) => {\r\n        // copy result data into the canvas\r\n        const start = now();\r\n        // expand single-channel data into rgba\r\n        const imageData = new Uint8Array(textureData.length * 4);\r\n        for (let i = 0; i < textureData.length; i++) {\r\n          imageData[i * 4 + channel] = textureData[i];\r\n        }\r\n        mainThreadGenerator.webglUtils.renderImageData(canvas, imageData, x, y, width, height, 1 << (3 - channel));\r\n        timing += now() - start;\r\n\r\n        // clean up workers after a while\r\n        if (--thread.requests === 0) {\r\n          thread.idleTimer = setTimeout(() => { terminateWorker(workerId); }, idleTimeout);\r\n        }\r\n        return {timing}\r\n      })\r\n  }\r\n}();\r\n\r\nfunction warmUpSDFCanvas(canvas) {\r\n  if (!canvas._warm) {\r\n    mainThreadGenerator.webgl.isSupported(canvas);\r\n    canvas._warm = true;\r\n  }\r\n}\r\n\r\nconst resizeWebGLCanvasWithoutClearing = mainThreadGenerator.webglUtils.resizeWebGLCanvasWithoutClearing;\r\n\r\n/*!\r\nCustom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.\r\nOriginal MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE\r\n*/\r\nfunction typrFactory(){return \"undefined\"==typeof window&&(self.window=self),function(r){var e={parse:function(r){var t=e._bin,a=new Uint8Array(r);if(\"ttcf\"==t.readASCII(a,0,4)){var n=4;t.readUshort(a,n),n+=2,t.readUshort(a,n),n+=2;var o=t.readUint(a,n);n+=4;for(var s=[],i=0;i<o;i++){var h=t.readUint(a,n);n+=4,s.push(e._readFont(a,h));}return s}return [e._readFont(a,0)]},_readFont:function(r,t){var a=e._bin,n=t;a.readFixed(r,t),t+=4;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2;for(var s=[\"cmap\",\"head\",\"hhea\",\"maxp\",\"hmtx\",\"name\",\"OS/2\",\"post\",\"loca\",\"glyf\",\"kern\",\"CFF \",\"GPOS\",\"GSUB\",\"SVG \"],i={_data:r,_offset:n},h={},f=0;f<o;f++){var d=a.readASCII(r,t,4);t+=4,a.readUint(r,t),t+=4;var l=a.readUint(r,t);t+=4;var u=a.readUint(r,t);t+=4,h[d]={offset:l,length:u};}for(f=0;f<s.length;f++){var v=s[f];h[v]&&(i[v.trim()]=e[v.trim()].parse(r,h[v].offset,h[v].length,i));}return i},_tabOffset:function(r,t,a){for(var n=e._bin,o=n.readUshort(r,a+4),s=a+12,i=0;i<o;i++){var h=n.readASCII(r,s,4);s+=4,n.readUint(r,s),s+=4;var f=n.readUint(r,s);if(s+=4,n.readUint(r,s),s+=4,h==t)return f}return 0}};e._bin={readFixed:function(r,e){return (r[e]<<8|r[e+1])+(r[e+2]<<8|r[e+3])/65540},readF2dot14:function(r,t){return e._bin.readShort(r,t)/16384},readInt:function(r,t){return e._bin._view(r).getInt32(t)},readInt8:function(r,t){return e._bin._view(r).getInt8(t)},readShort:function(r,t){return e._bin._view(r).getInt16(t)},readUshort:function(r,t){return e._bin._view(r).getUint16(t)},readUshorts:function(r,t,a){for(var n=[],o=0;o<a;o++)n.push(e._bin.readUshort(r,t+2*o));return n},readUint:function(r,t){return e._bin._view(r).getUint32(t)},readUint64:function(r,t){return 4294967296*e._bin.readUint(r,t)+e._bin.readUint(r,t+4)},readASCII:function(r,e,t){for(var a=\"\",n=0;n<t;n++)a+=String.fromCharCode(r[e+n]);return a},readUnicode:function(r,e,t){for(var a=\"\",n=0;n<t;n++){var o=r[e++]<<8|r[e++];a+=String.fromCharCode(o);}return a},_tdec:\"undefined\"!=typeof window&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(r,t,a){var n=e._bin._tdec;return n&&0==t&&a==r.length?n.decode(r):e._bin.readASCII(r,t,a)},readBytes:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(r[e+n]);return a},readASCIIArray:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(String.fromCharCode(r[e+n]));return a},_view:function(r){return r._dataView||(r._dataView=r.buffer?new DataView(r.buffer,r.byteOffset,r.byteLength):new DataView(new Uint8Array(r).buffer))}},e._lctf={},e._lctf.parse=function(r,t,a,n,o){var s=e._bin,i={},h=t;s.readFixed(r,t),t+=4;var f=s.readUshort(r,t);t+=2;var d=s.readUshort(r,t);t+=2;var l=s.readUshort(r,t);return t+=2,i.scriptList=e._lctf.readScriptList(r,h+f),i.featureList=e._lctf.readFeatureList(r,h+d),i.lookupList=e._lctf.readLookupList(r,h+l,o),i},e._lctf.readLookupList=function(r,t,a){var n=e._bin,o=t,s=[],i=n.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=n.readUshort(r,t);t+=2;var d=e._lctf.readLookupTable(r,o+f,a);s.push(d);}return s},e._lctf.readLookupTable=function(r,t,a){var n=e._bin,o=t,s={tabs:[]};s.ltype=n.readUshort(r,t),t+=2,s.flag=n.readUshort(r,t),t+=2;var i=n.readUshort(r,t);t+=2;for(var h=s.ltype,f=0;f<i;f++){var d=n.readUshort(r,t);t+=2;var l=a(r,h,o+d,s);s.tabs.push(l);}return s},e._lctf.numOfOnes=function(r){for(var e=0,t=0;t<32;t++)0!=(r>>>t&1)&&e++;return e},e._lctf.readClassDef=function(r,t){var a=e._bin,n=[],o=a.readUshort(r,t);if(t+=2,1==o){var s=a.readUshort(r,t);t+=2;var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++)n.push(s+h),n.push(s+h),n.push(a.readUshort(r,t)),t+=2;}if(2==o){var f=a.readUshort(r,t);t+=2;for(h=0;h<f;h++)n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2;}return n},e._lctf.getInterval=function(r,e){for(var t=0;t<r.length;t+=3){var a=r[t],n=r[t+1];if(r[t+2],a<=e&&e<=n)return t}return -1},e._lctf.readCoverage=function(r,t){var a=e._bin,n={};n.fmt=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,1==n.fmt&&(n.tab=a.readUshorts(r,t,o)),2==n.fmt&&(n.tab=a.readUshorts(r,t,3*o)),n},e._lctf.coverageIndex=function(r,t){var a=r.tab;if(1==r.fmt)return a.indexOf(t);if(2==r.fmt){var n=e._lctf.getInterval(a,t);if(-1!=n)return a[n+2]+(t-a[n])}return -1},e._lctf.readFeatureList=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2;var d=e._lctf.readFeatureTable(r,n+f);d.tag=h.trim(),o.push(d);}return o},e._lctf.readFeatureTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,s>0&&(o.featureParams=n+s);var i=a.readUshort(r,t);t+=2,o.tab=[];for(var h=0;h<i;h++)o.tab.push(a.readUshort(r,t+2*h));return o},e._lctf.readScriptList=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2,o[h.trim()]=e._lctf.readScriptTable(r,n+f);}return o},e._lctf.readScriptTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,o.default=e._lctf.readLangSysTable(r,n+s);var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=a.readASCII(r,t,4);t+=4;var d=a.readUshort(r,t);t+=2,o[f.trim()]=e._lctf.readLangSysTable(r,n+d);}return o},e._lctf.readLangSysTable=function(r,t){var a=e._bin,n={};a.readUshort(r,t),t+=2,n.reqFeature=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,n.features=a.readUshorts(r,t,o),n},e.CFF={},e.CFF.parse=function(r,t,a){var n=e._bin;(r=new Uint8Array(r.buffer,t,a))[t=0],r[++t],r[++t],r[++t],t++;var o=[];t=e.CFF.readIndex(r,t,o);for(var s=[],i=0;i<o.length-1;i++)s.push(n.readASCII(r,t+o[i],o[i+1]-o[i]));t+=o[o.length-1];var h=[];t=e.CFF.readIndex(r,t,h);var f=[];for(i=0;i<h.length-1;i++)f.push(e.CFF.readDict(r,t+h[i],t+h[i+1]));t+=h[h.length-1];var d=f[0],l=[];t=e.CFF.readIndex(r,t,l);var u=[];for(i=0;i<l.length-1;i++)u.push(n.readASCII(r,t+l[i],l[i+1]-l[i]));if(t+=l[l.length-1],e.CFF.readSubrs(r,t,d),d.CharStrings){t=d.CharStrings;l=[];t=e.CFF.readIndex(r,t,l);var v=[];for(i=0;i<l.length-1;i++)v.push(n.readBytes(r,t+l[i],l[i+1]-l[i]));d.CharStrings=v;}if(d.ROS){t=d.FDArray;var c=[];t=e.CFF.readIndex(r,t,c),d.FDArray=[];for(i=0;i<c.length-1;i++){var p=e.CFF.readDict(r,t+c[i],t+c[i+1]);e.CFF._readFDict(r,p,u),d.FDArray.push(p);}t+=c[c.length-1],t=d.FDSelect,d.FDSelect=[];var U=r[t];if(t++,3!=U)throw U;var g=n.readUshort(r,t);t+=2;for(i=0;i<g+1;i++)d.FDSelect.push(n.readUshort(r,t),r[t+2]),t+=3;}return d.Encoding&&(d.Encoding=e.CFF.readEncoding(r,d.Encoding,d.CharStrings.length)),d.charset&&(d.charset=e.CFF.readCharset(r,d.charset,d.CharStrings.length)),e.CFF._readFDict(r,d,u),d},e.CFF._readFDict=function(r,t,a){var n;for(var o in t.Private&&(n=t.Private[1],t.Private=e.CFF.readDict(r,n,n+t.Private[0]),t.Private.Subrs&&e.CFF.readSubrs(r,n+t.Private.Subrs,t.Private)),t)-1!=[\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(o)&&(t[o]=a[t[o]-426+35]);},e.CFF.readSubrs=function(r,t,a){var n=e._bin,o=[];t=e.CFF.readIndex(r,t,o);var s,i=o.length;s=i<1240?107:i<33900?1131:32768,a.Bias=s,a.Subrs=[];for(var h=0;h<o.length-1;h++)a.Subrs.push(n.readBytes(r,t+o[h],o[h+1]-o[h]));},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(r,e){for(var t=0;t<r.charset.length;t++)if(r.charset[t]==e)return t;return -1},e.CFF.glyphBySE=function(r,t){return t<0||t>255?-1:e.CFF.glyphByUnicode(r,e.CFF.tableSE[t])},e.CFF.readEncoding=function(r,t,a){e._bin;var n=[\".notdef\"],o=r[t];if(t++,0!=o)throw \"error: unknown encoding format: \"+o;var s=r[t];t++;for(var i=0;i<s;i++)n.push(r[t+i]);return n},e.CFF.readCharset=function(r,t,a){var n=e._bin,o=[\".notdef\"],s=r[t];if(t++,0==s)for(var i=0;i<a;i++){var h=n.readUshort(r,t);t+=2,o.push(h);}else {if(1!=s&&2!=s)throw \"error: format: \"+s;for(;o.length<a;){h=n.readUshort(r,t);t+=2;var f=0;1==s?(f=r[t],t++):(f=n.readUshort(r,t),t+=2);for(i=0;i<=f;i++)o.push(h),h++;}}return o},e.CFF.readIndex=function(r,t,a){var n=e._bin,o=n.readUshort(r,t)+1,s=r[t+=2];if(t++,1==s)for(var i=0;i<o;i++)a.push(r[t+i]);else if(2==s)for(i=0;i<o;i++)a.push(n.readUshort(r,t+2*i));else if(3==s)for(i=0;i<o;i++)a.push(16777215&n.readUint(r,t+3*i-1));else if(1!=o)throw \"unsupported offset size: \"+s+\", count: \"+o;return (t+=o*s)-1},e.CFF.getCharString=function(r,t,a){var n=e._bin,o=r[t],s=r[t+1];r[t+2],r[t+3],r[t+4];var i=1,h=null,f=null;o<=20&&(h=o,i=1),12==o&&(h=100*o+s,i=2),21<=o&&o<=27&&(h=o,i=1),28==o&&(f=n.readShort(r,t+1),i=3),29<=o&&o<=31&&(h=o,i=1),32<=o&&o<=246&&(f=o-139,i=1),247<=o&&o<=250&&(f=256*(o-247)+s+108,i=2),251<=o&&o<=254&&(f=256*-(o-251)-s-108,i=2),255==o&&(f=n.readInt(r,t+1)/65535,i=5),a.val=null!=f?f:\"o\"+h,a.size=i;},e.CFF.readCharString=function(r,t,a){for(var n=t+a,o=e._bin,s=[];t<n;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,l=null;i<=20&&(d=i,f=1),12==i&&(d=100*i+h,f=2),19!=i&&20!=i||(d=i,f=2),21<=i&&i<=27&&(d=i,f=1),28==i&&(l=o.readShort(r,t+1),f=3),29<=i&&i<=31&&(d=i,f=1),32<=i&&i<=246&&(l=i-139,f=1),247<=i&&i<=250&&(l=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(l=256*-(i-251)-h-108,f=2),255==i&&(l=o.readInt(r,t+1)/65535,f=5),s.push(null!=l?l:\"o\"+d),t+=f;}return s},e.CFF.readDict=function(r,t,a){for(var n=e._bin,o={},s=[];t<a;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,l=null;if(28==i&&(l=n.readShort(r,t+1),f=3),29==i&&(l=n.readInt(r,t+1),f=5),32<=i&&i<=246&&(l=i-139,f=1),247<=i&&i<=250&&(l=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(l=256*-(i-251)-h-108,f=2),255==i)throw l=n.readInt(r,t+1)/65535,f=5,\"unknown number\";if(30==i){var u=[];for(f=1;;){var v=r[t+f];f++;var c=v>>4,p=15&v;if(15!=c&&u.push(c),15!=p&&u.push(p),15==p)break}for(var U=\"\",g=[0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"],S=0;S<u.length;S++)U+=g[u[S]];l=parseFloat(U);}if(i<=21)if(d=[\"version\",\"Notice\",\"FullName\",\"FamilyName\",\"Weight\",\"FontBBox\",\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StdHW\",\"StdVW\",\"escape\",\"UniqueID\",\"XUID\",\"charset\",\"Encoding\",\"CharStrings\",\"Private\",\"Subrs\",\"defaultWidthX\",\"nominalWidthX\"][i],f=1,12==i)d=[\"Copyright\",\"isFixedPitch\",\"ItalicAngle\",\"UnderlinePosition\",\"UnderlineThickness\",\"PaintType\",\"CharstringType\",\"FontMatrix\",\"StrokeWidth\",\"BlueScale\",\"BlueShift\",\"BlueFuzz\",\"StemSnapH\",\"StemSnapV\",\"ForceBold\",0,0,\"LanguageGroup\",\"ExpansionFactor\",\"initialRandomSeed\",\"SyntheticBase\",\"PostScript\",\"BaseFontName\",\"BaseFontBlend\",0,0,0,0,0,0,\"ROS\",\"CIDFontVersion\",\"CIDFontRevision\",\"CIDFontType\",\"CIDCount\",\"UIDBase\",\"FDArray\",\"FDSelect\",\"FontName\"][h],f=2;null!=d?(o[d]=1==s.length?s[0]:s,s=[]):s.push(l),t+=f;}return o},e.cmap={},e.cmap.parse=function(r,t,a){r=new Uint8Array(r.buffer,t,a),t=0;var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2;var i=[];o.tables=[];for(var h=0;h<s;h++){var f=n.readUshort(r,t);t+=2;var d=n.readUshort(r,t);t+=2;var l=n.readUint(r,t);t+=4;var u=\"p\"+f+\"e\"+d,v=i.indexOf(l);if(-1==v){var c;v=o.tables.length,i.push(l);var p=n.readUshort(r,l);0==p?c=e.cmap.parse0(r,l):4==p?c=e.cmap.parse4(r,l):6==p?c=e.cmap.parse6(r,l):12==p?c=e.cmap.parse12(r,l):console.debug(\"unknown format: \"+p,f,d,l),o.tables.push(c);}if(null!=o[u])throw \"multiple tables for one platform+encoding\";o[u]=v;}return o},e.cmap.parse0=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,n.map=[];for(var s=0;s<o-6;s++)n.map.push(r[t+s]);return n},e.cmap.parse4=function(r,t){var a=e._bin,n=t,o={};o.format=a.readUshort(r,t),t+=2;var s=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2;var i=a.readUshort(r,t);t+=2;var h=i/2;o.searchRange=a.readUshort(r,t),t+=2,o.entrySelector=a.readUshort(r,t),t+=2,o.rangeShift=a.readUshort(r,t),t+=2,o.endCount=a.readUshorts(r,t,h),t+=2*h,t+=2,o.startCount=a.readUshorts(r,t,h),t+=2*h,o.idDelta=[];for(var f=0;f<h;f++)o.idDelta.push(a.readShort(r,t)),t+=2;for(o.idRangeOffset=a.readUshorts(r,t,h),t+=2*h,o.glyphIdArray=[];t<n+s;)o.glyphIdArray.push(a.readUshort(r,t)),t+=2;return o},e.cmap.parse6=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,n.firstCode=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,n.glyphIdArray=[];for(var s=0;s<o;s++)n.glyphIdArray.push(a.readUshort(r,t)),t+=2;return n},e.cmap.parse12=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,t+=2,a.readUint(r,t),t+=4,a.readUint(r,t),t+=4;var o=a.readUint(r,t);t+=4,n.groups=[];for(var s=0;s<o;s++){var i=t+12*s,h=a.readUint(r,i+0),f=a.readUint(r,i+4),d=a.readUint(r,i+8);n.groups.push([h,f,d]);}return n},e.glyf={},e.glyf.parse=function(r,e,t,a){for(var n=[],o=0;o<a.maxp.numGlyphs;o++)n.push(null);return n},e.glyf._parseGlyf=function(r,t){var a=e._bin,n=r._data,o=e._tabOffset(n,\"glyf\",r._offset)+r.loca[t];if(r.loca[t]==r.loca[t+1])return null;var s={};if(s.noc=a.readShort(n,o),o+=2,s.xMin=a.readShort(n,o),o+=2,s.yMin=a.readShort(n,o),o+=2,s.xMax=a.readShort(n,o),o+=2,s.yMax=a.readShort(n,o),o+=2,s.xMin>=s.xMax||s.yMin>=s.yMax)return null;if(s.noc>0){s.endPts=[];for(var i=0;i<s.noc;i++)s.endPts.push(a.readUshort(n,o)),o+=2;var h=a.readUshort(n,o);if(o+=2,n.length-o<h)return null;s.instructions=a.readBytes(n,o,h),o+=h;var f=s.endPts[s.noc-1]+1;s.flags=[];for(i=0;i<f;i++){var d=n[o];if(o++,s.flags.push(d),0!=(8&d)){var l=n[o];o++;for(var u=0;u<l;u++)s.flags.push(d),i++;}}s.xs=[];for(i=0;i<f;i++){var v=0!=(2&s.flags[i]),c=0!=(16&s.flags[i]);v?(s.xs.push(c?n[o]:-n[o]),o++):c?s.xs.push(0):(s.xs.push(a.readShort(n,o)),o+=2);}s.ys=[];for(i=0;i<f;i++){v=0!=(4&s.flags[i]),c=0!=(32&s.flags[i]);v?(s.ys.push(c?n[o]:-n[o]),o++):c?s.ys.push(0):(s.ys.push(a.readShort(n,o)),o+=2);}var p=0,U=0;for(i=0;i<f;i++)p+=s.xs[i],U+=s.ys[i],s.xs[i]=p,s.ys[i]=U;}else {var g;s.parts=[];do{g=a.readUshort(n,o),o+=2;var S={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(s.parts.push(S),S.glyphIndex=a.readUshort(n,o),o+=2,1&g){var m=a.readShort(n,o);o+=2;var b=a.readShort(n,o);o+=2;}else {m=a.readInt8(n,o);o++;b=a.readInt8(n,o);o++;}2&g?(S.m.tx=m,S.m.ty=b):(S.p1=m,S.p2=b),8&g?(S.m.a=S.m.d=a.readF2dot14(n,o),o+=2):64&g?(S.m.a=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2):128&g&&(S.m.a=a.readF2dot14(n,o),o+=2,S.m.b=a.readF2dot14(n,o),o+=2,S.m.c=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2);}while(32&g);if(256&g){var y=a.readUshort(n,o);o+=2,s.instr=[];for(i=0;i<y;i++)s.instr.push(n[o]),o++;}}return s},e.GPOS={},e.GPOS.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GPOS.subt)},e.GPOS.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1==t||2==t||3==t||7==t||8==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,h+s);}if(1==t&&1==i.fmt){var f=o.readUshort(r,a);a+=2;var d=e._lctf.numOfOnes(f);0!=f&&(i.pos=e.GPOS.readValueRecord(r,a,f));}else if(2==t&&i.fmt>=1&&i.fmt<=2){f=o.readUshort(r,a);a+=2;var l=o.readUshort(r,a);a+=2;d=e._lctf.numOfOnes(f);var u=e._lctf.numOfOnes(l);if(1==i.fmt){i.pairsets=[];var v=o.readUshort(r,a);a+=2;for(var c=0;c<v;c++){var p=s+o.readUshort(r,a);a+=2;var U=o.readUshort(r,p);p+=2;for(var g=[],S=0;S<U;S++){var m=o.readUshort(r,p);p+=2,0!=f&&(x=e.GPOS.readValueRecord(r,p,f),p+=2*d),0!=l&&(P=e.GPOS.readValueRecord(r,p,l),p+=2*u),g.push({gid2:m,val1:x,val2:P});}i.pairsets.push(g);}}if(2==i.fmt){var b=o.readUshort(r,a);a+=2;var y=o.readUshort(r,a);a+=2;var F=o.readUshort(r,a);a+=2;var _=o.readUshort(r,a);a+=2,i.classDef1=e._lctf.readClassDef(r,s+b),i.classDef2=e._lctf.readClassDef(r,s+y),i.matrix=[];for(c=0;c<F;c++){var C=[];for(S=0;S<_;S++){var x=null,P=null;0!=f&&(x=e.GPOS.readValueRecord(r,a,f),a+=2*d),0!=l&&(P=e.GPOS.readValueRecord(r,a,l),a+=2*u),C.push({val1:x,val2:P});}i.matrix.push(C);}}}else {if(9==t&&1==i.fmt){var I=o.readUshort(r,a);a+=2;var w=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=I;else if(n.ltype!=I)throw \"invalid extension substitution\";return e.GPOS.subt(r,n.ltype,s+w)}console.debug(\"unsupported GPOS table LookupType\",t,\"format\",i.fmt);}return i},e.GPOS.readValueRecord=function(r,t,a){var n=e._bin,o=[];return o.push(1&a?n.readShort(r,t):0),t+=1&a?2:0,o.push(2&a?n.readShort(r,t):0),t+=2&a?2:0,o.push(4&a?n.readShort(r,t):0),t+=4&a?2:0,o.push(8&a?n.readShort(r,t):0),t+=8&a?2:0,o},e.GSUB={},e.GSUB.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GSUB.subt)},e.GSUB.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1!=t&&4!=t&&5!=t&&6!=t)return null;if(1==t||4==t||5==t&&i.fmt<=2||6==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,s+h);}if(1==t&&i.fmt>=1&&i.fmt<=2){if(1==i.fmt)i.delta=o.readShort(r,a),a+=2;else if(2==i.fmt){var f=o.readUshort(r,a);a+=2,i.newg=o.readUshorts(r,a,f),a+=2*i.newg.length;}}else if(4==t){i.vals=[];f=o.readUshort(r,a);a+=2;for(var d=0;d<f;d++){var l=o.readUshort(r,a);a+=2,i.vals.push(e.GSUB.readLigatureSet(r,s+l));}}else if(5==t&&2==i.fmt){if(2==i.fmt){var u=o.readUshort(r,a);a+=2,i.cDef=e._lctf.readClassDef(r,s+u),i.scset=[];var v=o.readUshort(r,a);a+=2;for(d=0;d<v;d++){var c=o.readUshort(r,a);a+=2,i.scset.push(0==c?null:e.GSUB.readSubClassSet(r,s+c));}}}else if(6==t&&3==i.fmt){if(3==i.fmt){for(d=0;d<3;d++){f=o.readUshort(r,a);a+=2;for(var p=[],U=0;U<f;U++)p.push(e._lctf.readCoverage(r,s+o.readUshort(r,a+2*U)));a+=2*f,0==d&&(i.backCvg=p),1==d&&(i.inptCvg=p),2==d&&(i.ahedCvg=p);}f=o.readUshort(r,a);a+=2,i.lookupRec=e.GSUB.readSubstLookupRecords(r,a,f);}}else {if(7==t&&1==i.fmt){var g=o.readUshort(r,a);a+=2;var S=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=g;else if(n.ltype!=g)throw \"invalid extension substitution\";return e.GSUB.subt(r,n.ltype,s+S)}console.debug(\"unsupported GSUB table LookupType\",t,\"format\",i.fmt);}return i},e.GSUB.readSubClassSet=function(r,t){var a=e._bin.readUshort,n=t,o=[],s=a(r,t);t+=2;for(var i=0;i<s;i++){var h=a(r,t);t+=2,o.push(e.GSUB.readSubClassRule(r,n+h));}return o},e.GSUB.readSubClassRule=function(r,t){var a=e._bin.readUshort,n={},o=a(r,t),s=a(r,t+=2);t+=2,n.input=[];for(var i=0;i<o-1;i++)n.input.push(a(r,t)),t+=2;return n.substLookupRecords=e.GSUB.readSubstLookupRecords(r,t,s),n},e.GSUB.readSubstLookupRecords=function(r,t,a){for(var n=e._bin.readUshort,o=[],s=0;s<a;s++)o.push(n(r,t),n(r,t+2)),t+=4;return o},e.GSUB.readChainSubClassSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readChainSubClassRule(r,n+h));}return o},e.GSUB.readChainSubClassRule=function(r,t){for(var a=e._bin,n={},o=[\"backtrack\",\"input\",\"lookahead\"],s=0;s<o.length;s++){var i=a.readUshort(r,t);t+=2,1==s&&i--,n[o[s]]=a.readUshorts(r,t,i),t+=2*n[o[s]].length;}i=a.readUshort(r,t);return t+=2,n.subst=a.readUshorts(r,t,2*i),t+=2*n.subst.length,n},e.GSUB.readLigatureSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readLigature(r,n+h));}return o},e.GSUB.readLigature=function(r,t){var a=e._bin,n={chain:[]};n.nglyph=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2;for(var s=0;s<o-1;s++)n.chain.push(a.readUshort(r,t)),t+=2;return n},e.head={},e.head.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.fontRevision=n.readFixed(r,t),t+=4,n.readUint(r,t),t+=4,n.readUint(r,t),t+=4,o.flags=n.readUshort(r,t),t+=2,o.unitsPerEm=n.readUshort(r,t),t+=2,o.created=n.readUint64(r,t),t+=8,o.modified=n.readUint64(r,t),t+=8,o.xMin=n.readShort(r,t),t+=2,o.yMin=n.readShort(r,t),t+=2,o.xMax=n.readShort(r,t),t+=2,o.yMax=n.readShort(r,t),t+=2,o.macStyle=n.readUshort(r,t),t+=2,o.lowestRecPPEM=n.readUshort(r,t),t+=2,o.fontDirectionHint=n.readShort(r,t),t+=2,o.indexToLocFormat=n.readShort(r,t),t+=2,o.glyphDataFormat=n.readShort(r,t),t+=2,o},e.hhea={},e.hhea.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.ascender=n.readShort(r,t),t+=2,o.descender=n.readShort(r,t),t+=2,o.lineGap=n.readShort(r,t),t+=2,o.advanceWidthMax=n.readUshort(r,t),t+=2,o.minLeftSideBearing=n.readShort(r,t),t+=2,o.minRightSideBearing=n.readShort(r,t),t+=2,o.xMaxExtent=n.readShort(r,t),t+=2,o.caretSlopeRise=n.readShort(r,t),t+=2,o.caretSlopeRun=n.readShort(r,t),t+=2,o.caretOffset=n.readShort(r,t),t+=2,t+=8,o.metricDataFormat=n.readShort(r,t),t+=2,o.numberOfHMetrics=n.readUshort(r,t),t+=2,o},e.hmtx={},e.hmtx.parse=function(r,t,a,n){for(var o=e._bin,s={aWidth:[],lsBearing:[]},i=0,h=0,f=0;f<n.maxp.numGlyphs;f++)f<n.hhea.numberOfHMetrics&&(i=o.readUshort(r,t),t+=2,h=o.readShort(r,t),t+=2),s.aWidth.push(i),s.lsBearing.push(h);return s},e.kern={},e.kern.parse=function(r,t,a,n){var o=e._bin,s=o.readUshort(r,t);if(t+=2,1==s)return e.kern.parseV1(r,t-2,a,n);var i=o.readUshort(r,t);t+=2;for(var h={glyph1:[],rval:[]},f=0;f<i;f++){t+=2;a=o.readUshort(r,t);t+=2;var d=o.readUshort(r,t);t+=2;var l=d>>>8;if(0!=(l&=15))throw \"unknown kern table format: \"+l;t=e.kern.readFormat0(r,t,h);}return h},e.kern.parseV1=function(r,t,a,n){var o=e._bin;o.readFixed(r,t),t+=4;var s=o.readUint(r,t);t+=4;for(var i={glyph1:[],rval:[]},h=0;h<s;h++){o.readUint(r,t),t+=4;var f=o.readUshort(r,t);t+=2,o.readUshort(r,t),t+=2;var d=f>>>8;if(0!=(d&=15))throw \"unknown kern table format: \"+d;t=e.kern.readFormat0(r,t,i);}return i},e.kern.readFormat0=function(r,t,a){var n=e._bin,o=-1,s=n.readUshort(r,t);t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2;for(var i=0;i<s;i++){var h=n.readUshort(r,t);t+=2;var f=n.readUshort(r,t);t+=2;var d=n.readShort(r,t);t+=2,h!=o&&(a.glyph1.push(h),a.rval.push({glyph2:[],vals:[]}));var l=a.rval[a.rval.length-1];l.glyph2.push(f),l.vals.push(d),o=h;}return t},e.loca={},e.loca.parse=function(r,t,a,n){var o=e._bin,s=[],i=n.head.indexToLocFormat,h=n.maxp.numGlyphs+1;if(0==i)for(var f=0;f<h;f++)s.push(o.readUshort(r,t+(f<<1))<<1);if(1==i)for(f=0;f<h;f++)s.push(o.readUint(r,t+(f<<2)));return s},e.maxp={},e.maxp.parse=function(r,t,a){var n=e._bin,o={},s=n.readUint(r,t);return t+=4,o.numGlyphs=n.readUshort(r,t),t+=2,65536==s&&(o.maxPoints=n.readUshort(r,t),t+=2,o.maxContours=n.readUshort(r,t),t+=2,o.maxCompositePoints=n.readUshort(r,t),t+=2,o.maxCompositeContours=n.readUshort(r,t),t+=2,o.maxZones=n.readUshort(r,t),t+=2,o.maxTwilightPoints=n.readUshort(r,t),t+=2,o.maxStorage=n.readUshort(r,t),t+=2,o.maxFunctionDefs=n.readUshort(r,t),t+=2,o.maxInstructionDefs=n.readUshort(r,t),t+=2,o.maxStackElements=n.readUshort(r,t),t+=2,o.maxSizeOfInstructions=n.readUshort(r,t),t+=2,o.maxComponentElements=n.readUshort(r,t),t+=2,o.maxComponentDepth=n.readUshort(r,t),t+=2),o},e.name={},e.name.parse=function(r,t,a){var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2,n.readUshort(r,t);for(var i,h=[\"copyright\",\"fontFamily\",\"fontSubfamily\",\"ID\",\"fullName\",\"version\",\"postScriptName\",\"trademark\",\"manufacturer\",\"designer\",\"description\",\"urlVendor\",\"urlDesigner\",\"licence\",\"licenceURL\",\"---\",\"typoFamilyName\",\"typoSubfamilyName\",\"compatibleFull\",\"sampleText\",\"postScriptCID\",\"wwsFamilyName\",\"wwsSubfamilyName\",\"lightPalette\",\"darkPalette\"],f=t+=2,d=0;d<s;d++){var l=n.readUshort(r,t);t+=2;var u=n.readUshort(r,t);t+=2;var v=n.readUshort(r,t);t+=2;var c=n.readUshort(r,t);t+=2;var p=n.readUshort(r,t);t+=2;var U=n.readUshort(r,t);t+=2;var g,S=h[c],m=f+12*s+U;if(0==l)g=n.readUnicode(r,m,p/2);else if(3==l&&0==u)g=n.readUnicode(r,m,p/2);else if(0==u)g=n.readASCII(r,m,p);else if(1==u)g=n.readUnicode(r,m,p/2);else if(3==u)g=n.readUnicode(r,m,p/2);else {if(1!=l)throw \"unknown encoding \"+u+\", platformID: \"+l;g=n.readASCII(r,m,p),console.debug(\"reading unknown MAC encoding \"+u+\" as ASCII\");}var b=\"p\"+l+\",\"+v.toString(16);null==o[b]&&(o[b]={}),o[b][void 0!==S?S:c]=g,o[b]._lang=v;}for(var y in o)if(null!=o[y].postScriptName&&1033==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&0==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&3084==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName)return o[y];for(var y in o){i=y;break}return console.debug(\"returning name table with languageID \"+o[i]._lang),o[i]},e[\"OS/2\"]={},e[\"OS/2\"].parse=function(r,t,a){var n=e._bin.readUshort(r,t);t+=2;var o={};if(0==n)e[\"OS/2\"].version0(r,t,o);else if(1==n)e[\"OS/2\"].version1(r,t,o);else if(2==n||3==n||4==n)e[\"OS/2\"].version2(r,t,o);else {if(5!=n)throw \"unknown OS/2 table version: \"+n;e[\"OS/2\"].version5(r,t,o);}return o},e[\"OS/2\"].version0=function(r,t,a){var n=e._bin;return a.xAvgCharWidth=n.readShort(r,t),t+=2,a.usWeightClass=n.readUshort(r,t),t+=2,a.usWidthClass=n.readUshort(r,t),t+=2,a.fsType=n.readUshort(r,t),t+=2,a.ySubscriptXSize=n.readShort(r,t),t+=2,a.ySubscriptYSize=n.readShort(r,t),t+=2,a.ySubscriptXOffset=n.readShort(r,t),t+=2,a.ySubscriptYOffset=n.readShort(r,t),t+=2,a.ySuperscriptXSize=n.readShort(r,t),t+=2,a.ySuperscriptYSize=n.readShort(r,t),t+=2,a.ySuperscriptXOffset=n.readShort(r,t),t+=2,a.ySuperscriptYOffset=n.readShort(r,t),t+=2,a.yStrikeoutSize=n.readShort(r,t),t+=2,a.yStrikeoutPosition=n.readShort(r,t),t+=2,a.sFamilyClass=n.readShort(r,t),t+=2,a.panose=n.readBytes(r,t,10),t+=10,a.ulUnicodeRange1=n.readUint(r,t),t+=4,a.ulUnicodeRange2=n.readUint(r,t),t+=4,a.ulUnicodeRange3=n.readUint(r,t),t+=4,a.ulUnicodeRange4=n.readUint(r,t),t+=4,a.achVendID=[n.readInt8(r,t),n.readInt8(r,t+1),n.readInt8(r,t+2),n.readInt8(r,t+3)],t+=4,a.fsSelection=n.readUshort(r,t),t+=2,a.usFirstCharIndex=n.readUshort(r,t),t+=2,a.usLastCharIndex=n.readUshort(r,t),t+=2,a.sTypoAscender=n.readShort(r,t),t+=2,a.sTypoDescender=n.readShort(r,t),t+=2,a.sTypoLineGap=n.readShort(r,t),t+=2,a.usWinAscent=n.readUshort(r,t),t+=2,a.usWinDescent=n.readUshort(r,t),t+=2},e[\"OS/2\"].version1=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version0(r,t,a),a.ulCodePageRange1=n.readUint(r,t),t+=4,a.ulCodePageRange2=n.readUint(r,t),t+=4},e[\"OS/2\"].version2=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version1(r,t,a),a.sxHeight=n.readShort(r,t),t+=2,a.sCapHeight=n.readShort(r,t),t+=2,a.usDefault=n.readUshort(r,t),t+=2,a.usBreak=n.readUshort(r,t),t+=2,a.usMaxContext=n.readUshort(r,t),t+=2},e[\"OS/2\"].version5=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version2(r,t,a),a.usLowerOpticalPointSize=n.readUshort(r,t),t+=2,a.usUpperOpticalPointSize=n.readUshort(r,t),t+=2},e.post={},e.post.parse=function(r,t,a){var n=e._bin,o={};return o.version=n.readFixed(r,t),t+=4,o.italicAngle=n.readFixed(r,t),t+=4,o.underlinePosition=n.readShort(r,t),t+=2,o.underlineThickness=n.readShort(r,t),t+=2,o},null==e&&(e={}),null==e.U&&(e.U={}),e.U.codeToGlyph=function(r,e){var t=r.cmap,a=-1;if(null!=t.p0e4?a=t.p0e4:null!=t.p3e1?a=t.p3e1:null!=t.p1e0?a=t.p1e0:null!=t.p0e3&&(a=t.p0e3),-1==a)throw \"no familiar platform and encoding!\";var n=t.tables[a];if(0==n.format)return e>=n.map.length?0:n.map[e];if(4==n.format){for(var o=-1,s=0;s<n.endCount.length;s++)if(e<=n.endCount[s]){o=s;break}if(-1==o)return 0;if(n.startCount[o]>e)return 0;return 65535&(0!=n.idRangeOffset[o]?n.glyphIdArray[e-n.startCount[o]+(n.idRangeOffset[o]>>1)-(n.idRangeOffset.length-o)]:e+n.idDelta[o])}if(12==n.format){if(e>n.groups[n.groups.length-1][1])return 0;for(s=0;s<n.groups.length;s++){var i=n.groups[s];if(i[0]<=e&&e<=i[1])return i[2]+(e-i[0])}return 0}throw \"unknown cmap table format \"+n.format},e.U.glyphToPath=function(r,t){var a={cmds:[],crds:[]};if(r.SVG&&r.SVG.entries[t]){var n=r.SVG.entries[t];return null==n?a:(\"string\"==typeof n&&(n=e.SVG.toPath(n),r.SVG.entries[t]=n),n)}if(r.CFF){var o={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:r.CFF.Private?r.CFF.Private.defaultWidthX:0,open:!1},s=r.CFF,i=r.CFF.Private;if(s.ROS){for(var h=0;s.FDSelect[h+2]<=t;)h+=2;i=s.FDArray[s.FDSelect[h+1]].Private;}e.U._drawCFF(r.CFF.CharStrings[t],o,s,i,a);}else r.glyf&&e.U._drawGlyf(t,r,a);return a},e.U._drawGlyf=function(r,t,a){var n=t.glyf[r];null==n&&(n=t.glyf[r]=e.glyf._parseGlyf(t,r)),null!=n&&(n.noc>-1?e.U._simpleGlyph(n,a):e.U._compoGlyph(n,t,a));},e.U._simpleGlyph=function(r,t){for(var a=0;a<r.noc;a++){for(var n=0==a?0:r.endPts[a-1]+1,o=r.endPts[a],s=n;s<=o;s++){var i=s==n?o:s-1,h=s==o?n:s+1,f=1&r.flags[s],d=1&r.flags[i],l=1&r.flags[h],u=r.xs[s],v=r.ys[s];if(s==n)if(f){if(!d){e.U.P.moveTo(t,u,v);continue}e.U.P.moveTo(t,r.xs[i],r.ys[i]);}else d?e.U.P.moveTo(t,r.xs[i],r.ys[i]):e.U.P.moveTo(t,(r.xs[i]+u)/2,(r.ys[i]+v)/2);f?d&&e.U.P.lineTo(t,u,v):l?e.U.P.qcurveTo(t,u,v,r.xs[h],r.ys[h]):e.U.P.qcurveTo(t,u,v,(u+r.xs[h])/2,(v+r.ys[h])/2);}e.U.P.closePath(t);}},e.U._compoGlyph=function(r,t,a){for(var n=0;n<r.parts.length;n++){var o={cmds:[],crds:[]},s=r.parts[n];e.U._drawGlyf(s.glyphIndex,t,o);for(var i=s.m,h=0;h<o.crds.length;h+=2){var f=o.crds[h],d=o.crds[h+1];a.crds.push(f*i.a+d*i.b+i.tx),a.crds.push(f*i.c+d*i.d+i.ty);}for(h=0;h<o.cmds.length;h++)a.cmds.push(o.cmds[h]);}},e.U._getGlyphClass=function(r,t){var a=e._lctf.getInterval(t,r);return -1==a?0:t[a+2]},e.U.getPairAdjustment=function(r,t,a){var n=0,o=!1;if(r.GPOS)for(var s=r.GPOS,i=s.lookupList,h=s.featureList,f=[],d=0;d<h.length;d++){var l=h[d];if(\"kern\"==l.tag){o=!0;for(var u=0;u<l.tab.length;u++)if(!f[l.tab[u]]){f[l.tab[u]]=!0;for(var v=i[l.tab[u]],c=0;c<v.tabs.length;c++)if(null!=v.tabs[c]){var p,U=v.tabs[c];if(!U.coverage||-1!=(p=e._lctf.coverageIndex(U.coverage,t)))if(1==v.ltype);else if(2==v.ltype){var g;if(1==U.fmt){var S=U.pairsets[p];for(d=0;d<S.length;d++)S[d].gid2==a&&(g=S[d]);}else if(2==U.fmt){var m=e.U._getGlyphClass(t,U.classDef1),b=e.U._getGlyphClass(a,U.classDef2);g=U.matrix[m][b];}g&&g.val1&&g.val1[2]&&(n+=g.val1[2]),g&&g.val2&&g.val2[0]&&(n+=g.val2[0]);}}}}}if(r.kern&&!o){var y=r.kern.glyph1.indexOf(t);if(-1!=y){var F=r.kern.rval[y].glyph2.indexOf(a);-1!=F&&(n+=r.kern.rval[y].vals[F]);}}return n},e.U._applySubs=function(r,t,a,n){for(var o=r.length-t-1,s=0;s<a.tabs.length;s++)if(null!=a.tabs[s]){var i,h=a.tabs[s];if(!h.coverage||-1!=(i=e._lctf.coverageIndex(h.coverage,r[t])))if(1==a.ltype)r[t],1==h.fmt?r[t]=r[t]+h.delta:r[t]=h.newg[i];else if(4==a.ltype)for(var f=h.vals[i],d=0;d<f.length;d++){var l=f[d],u=l.chain.length;if(!(u>o)){for(var v=!0,c=0,p=0;p<u;p++){for(;-1==r[t+c+(1+p)];)c++;l.chain[p]!=r[t+c+(1+p)]&&(v=!1);}if(v){r[t]=l.nglyph;for(p=0;p<u+c;p++)r[t+p+1]=-1;break}}}else if(5==a.ltype&&2==h.fmt)for(var U=e._lctf.getInterval(h.cDef,r[t]),g=h.cDef[U+2],S=h.scset[g],m=0;m<S.length;m++){var b=S[m],y=b.input;if(!(y.length>o)){for(v=!0,p=0;p<y.length;p++){var F=e._lctf.getInterval(h.cDef,r[t+1+p]);if(-1==U&&h.cDef[F+2]!=y[p]){v=!1;break}}if(v){var _=b.substLookupRecords;for(d=0;d<_.length;d+=2)_[d],_[d+1];}}}else if(6==a.ltype&&3==h.fmt){if(!e.U._glsCovered(r,h.backCvg,t-h.backCvg.length))continue;if(!e.U._glsCovered(r,h.inptCvg,t))continue;if(!e.U._glsCovered(r,h.ahedCvg,t+h.inptCvg.length))continue;var C=h.lookupRec;for(m=0;m<C.length;m+=2){U=C[m];var x=n[C[m+1]];e.U._applySubs(r,t+U,x,n);}}}},e.U._glsCovered=function(r,t,a){for(var n=0;n<t.length;n++){if(-1==e._lctf.coverageIndex(t[n],r[a+n]))return !1}return !0},e.U.glyphsToPath=function(r,t,a){for(var n={cmds:[],crds:[]},o=0,s=0;s<t.length;s++){var i=t[s];if(-1!=i){for(var h=s<t.length-1&&-1!=t[s+1]?t[s+1]:0,f=e.U.glyphToPath(r,i),d=0;d<f.crds.length;d+=2)n.crds.push(f.crds[d]+o),n.crds.push(f.crds[d+1]);a&&n.cmds.push(a);for(d=0;d<f.cmds.length;d++)n.cmds.push(f.cmds[d]);a&&n.cmds.push(\"X\"),o+=r.hmtx.aWidth[i],s<t.length-1&&(o+=e.U.getPairAdjustment(r,i,h));}}return n},e.U.P={},e.U.P.moveTo=function(r,e,t){r.cmds.push(\"M\"),r.crds.push(e,t);},e.U.P.lineTo=function(r,e,t){r.cmds.push(\"L\"),r.crds.push(e,t);},e.U.P.curveTo=function(r,e,t,a,n,o,s){r.cmds.push(\"C\"),r.crds.push(e,t,a,n,o,s);},e.U.P.qcurveTo=function(r,e,t,a,n){r.cmds.push(\"Q\"),r.crds.push(e,t,a,n);},e.U.P.closePath=function(r){r.cmds.push(\"Z\");},e.U._drawCFF=function(r,t,a,n,o){for(var s=t.stack,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open,l=0,u=t.x,v=t.y,c=0,p=0,U=0,g=0,S=0,m=0,b=0,y=0,F=0,_=0,C={val:0,size:0};l<r.length;){e.CFF.getCharString(r,l,C);var x=C.val;if(l+=C.size,\"o1\"==x||\"o18\"==x)s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;else if(\"o3\"==x||\"o23\"==x){s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;}else if(\"o4\"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),d&&e.U.P.closePath(o),v+=s.pop(),e.U.P.moveTo(o,u,v),d=!0;else if(\"o5\"==x)for(;s.length>0;)u+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,u,v);else if(\"o6\"==x||\"o7\"==x)for(var P=s.length,I=\"o6\"==x,w=0;w<P;w++){var O=s.shift();I?u+=O:v+=O,I=!I,e.U.P.lineTo(o,u,v);}else if(\"o8\"==x||\"o24\"==x){P=s.length;for(var T=0;T+6<=P;)c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),u=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,u,v),T+=6;\"o24\"==x&&(u+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,u,v));}else {if(\"o11\"==x)break;if(\"o1234\"==x||\"o1235\"==x||\"o1236\"==x||\"o1237\"==x)\"o1234\"==x&&(p=v,U=(c=u+s.shift())+s.shift(),_=g=p+s.shift(),m=g,y=v,u=(b=(S=(F=U+s.shift())+s.shift())+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v)),\"o1235\"==x&&(c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),u=b+s.shift(),v=y+s.shift(),s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v)),\"o1236\"==x&&(c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),_=g=p+s.shift(),m=g,b=(S=(F=U+s.shift())+s.shift())+s.shift(),y=m+s.shift(),u=b+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v)),\"o1237\"==x&&(c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),Math.abs(b-u)>Math.abs(y-v)?u=b+s.shift():v=y+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v));else if(\"o14\"==x){if(s.length>0&&!h&&(f=s.shift()+a.nominalWidthX,h=!0),4==s.length){var k=s.shift(),G=s.shift(),D=s.shift(),B=s.shift(),L=e.CFF.glyphBySE(a,D),R=e.CFF.glyphBySE(a,B);e.U._drawCFF(a.CharStrings[L],t,a,n,o),t.x=k,t.y=G,e.U._drawCFF(a.CharStrings[R],t,a,n,o);}d&&(e.U.P.closePath(o),d=!1);}else if(\"o19\"==x||\"o20\"==x){s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0,l+=i+7>>3;}else if(\"o21\"==x)s.length>2&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),v+=s.pop(),u+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,u,v),d=!0;else if(\"o22\"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),u+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,u,v),d=!0;else if(\"o25\"==x){for(;s.length>6;)u+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,u,v);c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),u=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,u,v);}else if(\"o26\"==x)for(s.length%2&&(u+=s.shift());s.length>0;)c=u,p=v+s.shift(),u=U=c+s.shift(),v=(g=p+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,u,v);else if(\"o27\"==x)for(s.length%2&&(v+=s.shift());s.length>0;)p=v,U=(c=u+s.shift())+s.shift(),g=p+s.shift(),u=U+s.shift(),v=g,e.U.P.curveTo(o,c,p,U,g,u,v);else if(\"o10\"==x||\"o29\"==x){var A=\"o10\"==x?n:a;if(0==s.length)console.debug(\"error: empty stack\");else {var W=s.pop(),M=A.Subrs[W+A.Bias];t.x=u,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d,e.U._drawCFF(M,t,a,n,o),u=t.x,v=t.y,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open;}}else if(\"o30\"==x||\"o31\"==x){var V=s.length,N=(T=0,\"o31\"==x);for(T+=V-(P=-3&V);T<P;)N?(p=v,U=(c=u+s.shift())+s.shift(),v=(g=p+s.shift())+s.shift(),P-T==5?(u=U+s.shift(),T++):u=U,N=!1):(c=u,p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),u=U+s.shift(),P-T==5?(v=g+s.shift(),T++):v=g,N=!0),e.U.P.curveTo(o,c,p,U,g,u,v),T+=4;}else {if(\"o\"==(x+\"\").charAt(0))throw console.debug(\"Unknown operation: \"+x,r),x;s.push(x);}}}t.x=u,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d;};var t=e,a={Typr:t};return r.Typr=t,r.default=a,Object.defineProperty(r,\"__esModule\",{value:!0}),r}({}).Typr}\r\n\r\n/*!\r\nCustom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate\r\n(https://github.com/101arrowz/fflate) for use in Troika text rendering. \r\nOriginal licenses apply: \r\n- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)\r\n- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\r\n*/\r\nfunction woff2otfFactory(){return function(r){var e=Uint8Array,n=Uint16Array,t=Uint32Array,a=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),f=function(r,e){for(var a=new n(31),i=0;i<31;++i)a[i]=e+=1<<r[i-1];var o=new t(a[30]);for(i=1;i<30;++i)for(var f=a[i];f<a[i+1];++f)o[f]=f-a[i]<<5|i;return [a,o]},u=f(a,2),v=u[0],s=u[1];v[28]=258,s[258]=28;for(var l=f(i,0)[0],c=new n(32768),g=0;g<32768;++g){var h=(43690&g)>>>1|(21845&g)<<1;h=(61680&(h=(52428&h)>>>2|(13107&h)<<2))>>>4|(3855&h)<<4,c[g]=((65280&h)>>>8|(255&h)<<8)>>>1;}var w=function(r,e,t){for(var a=r.length,i=0,o=new n(e);i<a;++i)++o[r[i]-1];var f,u=new n(e);for(i=0;i<e;++i)u[i]=u[i-1]+o[i-1]<<1;if(t){f=new n(1<<e);var v=15-e;for(i=0;i<a;++i)if(r[i])for(var s=i<<4|r[i],l=e-r[i],g=u[r[i]-1]++<<l,h=g|(1<<l)-1;g<=h;++g)f[c[g]>>>v]=s;}else for(f=new n(a),i=0;i<a;++i)r[i]&&(f[i]=c[u[r[i]-1]++]>>>15-r[i]);return f},d=new e(288);for(g=0;g<144;++g)d[g]=8;for(g=144;g<256;++g)d[g]=9;for(g=256;g<280;++g)d[g]=7;for(g=280;g<288;++g)d[g]=8;var m=new e(32);for(g=0;g<32;++g)m[g]=5;var b=w(d,9,1),p=w(m,5,1),y=function(r){for(var e=r[0],n=1;n<r.length;++n)r[n]>e&&(e=r[n]);return e},L=function(r,e,n){var t=e/8|0;return (r[t]|r[t+1]<<8)>>(7&e)&n},U=function(r,e){var n=e/8|0;return (r[n]|r[n+1]<<8|r[n+2]<<16)>>(7&e)},k=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],T=function(r,e,n){var t=new Error(e||k[r]);if(t.code=r,Error.captureStackTrace&&Error.captureStackTrace(t,T),!n)throw t;return t},O=function(r,f,u){var s=r.length;if(!s||u&&!u.l&&s<5)return f||new e(0);var c=!f||u,g=!u||u.i;u||(u={}),f||(f=new e(3*s));var h,d=function(r){var n=f.length;if(r>n){var t=new e(Math.max(2*n,r));t.set(f),f=t;}},m=u.f||0,k=u.p||0,O=u.b||0,A=u.l,x=u.d,E=u.m,D=u.n,M=8*s;do{if(!A){u.f=m=L(r,k,1);var S=L(r,k+1,3);if(k+=3,!S){var V=r[(I=((h=k)/8|0)+(7&h&&1)+4)-4]|r[I-3]<<8,_=I+V;if(_>s){g&&T(0);break}c&&d(O+V),f.set(r.subarray(I,_),O),u.b=O+=V,u.p=k=8*_;continue}if(1==S)A=b,x=p,E=9,D=5;else if(2==S){var j=L(r,k,31)+257,z=L(r,k+10,15)+4,C=j+L(r,k+5,31)+1;k+=14;for(var F=new e(C),P=new e(19),q=0;q<z;++q)P[o[q]]=L(r,k+3*q,7);k+=3*z;var B=y(P),G=(1<<B)-1,H=w(P,B,1);for(q=0;q<C;){var I,J=H[L(r,k,G)];if(k+=15&J,(I=J>>>4)<16)F[q++]=I;else {var K=0,N=0;for(16==I?(N=3+L(r,k,3),k+=2,K=F[q-1]):17==I?(N=3+L(r,k,7),k+=3):18==I&&(N=11+L(r,k,127),k+=7);N--;)F[q++]=K;}}var Q=F.subarray(0,j),R=F.subarray(j);E=y(Q),D=y(R),A=w(Q,E,1),x=w(R,D,1);}else T(1);if(k>M){g&&T(0);break}}c&&d(O+131072);for(var W=(1<<E)-1,X=(1<<D)-1,Y=k;;Y=k){var Z=(K=A[U(r,k)&W])>>>4;if((k+=15&K)>M){g&&T(0);break}if(K||T(2),Z<256)f[O++]=Z;else {if(256==Z){Y=k,A=null;break}var $=Z-254;if(Z>264){var rr=a[q=Z-257];$=L(r,k,(1<<rr)-1)+v[q],k+=rr;}var er=x[U(r,k)&X],nr=er>>>4;er||T(3),k+=15&er;R=l[nr];if(nr>3){rr=i[nr];R+=U(r,k)&(1<<rr)-1,k+=rr;}if(k>M){g&&T(0);break}c&&d(O+131072);for(var tr=O+$;O<tr;O+=4)f[O]=f[O-R],f[O+1]=f[O+1-R],f[O+2]=f[O+2-R],f[O+3]=f[O+3-R];O=tr;}}u.l=A,u.p=Y,u.b=O,A&&(m=1,u.m=E,u.d=x,u.n=D);}while(!m);return O==f.length?f:function(r,a,i){(null==a||a<0)&&(a=0),(null==i||i>r.length)&&(i=r.length);var o=new(r instanceof n?n:r instanceof t?t:e)(i-a);return o.set(r.subarray(a,i)),o}(f,0,O)},A=new e(0);var x=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{x.decode(A,{stream:!0}),1;}catch(r){}return r.convert_streams=function(r){var e=new DataView(r),n=0;function t(){var r=e.getUint16(n);return n+=2,r}function a(){var r=e.getUint32(n);return n+=4,r}function i(r){m.setUint16(b,r),b+=2;}function o(r){m.setUint32(b,r),b+=4;}for(var f={signature:a(),flavor:a(),length:a(),numTables:t(),reserved:t(),totalSfntSize:a(),majorVersion:t(),minorVersion:t(),metaOffset:a(),metaLength:a(),metaOrigLength:a(),privOffset:a(),privLength:a()},u=0;Math.pow(2,u)<=f.numTables;)u++;u--;for(var v=16*Math.pow(2,u),s=16*f.numTables-v,l=12,c=[],g=0;g<f.numTables;g++)c.push({tag:a(),offset:a(),compLength:a(),origLength:a(),origChecksum:a()}),l+=16;var h,w=new Uint8Array(12+16*c.length+c.reduce((function(r,e){return r+e.origLength+4}),0)),d=w.buffer,m=new DataView(d),b=0;return o(f.flavor),i(f.numTables),i(v),i(u),i(s),c.forEach((function(r){o(r.tag),o(r.origChecksum),o(l),o(r.origLength),r.outOffset=l,(l+=r.origLength)%4!=0&&(l+=4-l%4);})),c.forEach((function(e){var n,t=r.slice(e.offset,e.offset+e.compLength);if(e.compLength!=e.origLength){var a=new Uint8Array(e.origLength);n=new Uint8Array(t,2),O(n,a);}else a=new Uint8Array(t);w.set(a,e.outOffset);var i=0;(l=e.outOffset+e.origLength)%4!=0&&(i=4-l%4),w.set(new Uint8Array(i).buffer,e.outOffset+e.origLength),h=l+i;})),d.slice(0,h)},Object.defineProperty(r,\"__esModule\",{value:!0}),r}({}).convert_streams}\r\n\r\n/**\r\n * A factory wrapper parsing a font file using Typr.\r\n * Also adds support for WOFF files (not WOFF2).\r\n */\r\n\r\nfunction parserFactory(Typr, woff2otf) {\r\n  const cmdArgLengths = {\r\n    M: 2,\r\n    L: 2,\r\n    Q: 4,\r\n    C: 6,\r\n    Z: 0\r\n  };\r\n\r\n  // {joinType: \"skip+step,...\"}\r\n  const joiningTypeRawData = {\"C\":\"18g,ca,368,1kz\",\"D\":\"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v\",\"R\":\"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6\",\"L\":\"x9u,jff,a,fd,jv\",\"T\":\"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n\"};\r\n\r\n  const JT_LEFT = 1, //indicates that a character joins with the subsequent character, but does not join with the preceding character.\r\n    JT_RIGHT = 2, //indicates that a character joins with the preceding character, but does not join with the subsequent character.\r\n    JT_DUAL = 4, //indicates that a character joins with the preceding character and joins with the subsequent character.\r\n    JT_TRANSPARENT = 8, //indicates that the character does not join with adjacent characters and that the character must be skipped over when the shaping engine is evaluating the joining positions in a sequence of characters. When a JT_TRANSPARENT character is encountered in a sequence, the JOINING_TYPE of the preceding character passes through. Diacritical marks are frequently assigned this value.\r\n    JT_JOIN_CAUSING = 16, //indicates that the character forces the use of joining forms with the preceding and subsequent characters. Kashidas and the Zero Width Joiner (U+200D) are both JOIN_CAUSING characters.\r\n    JT_NON_JOINING = 32; //indicates that a character does not join with the preceding or with the subsequent character.,\r\n\r\n  let joiningTypeMap;\r\n  function getCharJoiningType(ch) {\r\n    if (!joiningTypeMap) {\r\n      const m = {\r\n        R: JT_RIGHT,\r\n        L: JT_LEFT,\r\n        D: JT_DUAL,\r\n        C: JT_JOIN_CAUSING,\r\n        U: JT_NON_JOINING,\r\n        T: JT_TRANSPARENT\r\n      };\r\n      joiningTypeMap = new Map();\r\n      for (let type in joiningTypeRawData) {\r\n        let lastCode = 0;\r\n        joiningTypeRawData[type].split(',').forEach(range => {\r\n          let [skip, step] = range.split('+');\r\n          skip = parseInt(skip,36);\r\n          step = step ? parseInt(step, 36) : 0;\r\n          joiningTypeMap.set(lastCode += skip, m[type]);\r\n          for (let i = step; i--;) {\r\n            joiningTypeMap.set(++lastCode, m[type]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return joiningTypeMap.get(ch) || JT_NON_JOINING\r\n  }\r\n\r\n  const ISOL = 1, INIT = 2, FINA = 3, MEDI = 4;\r\n  const formsToFeatures = [null, 'isol', 'init', 'fina', 'medi'];\r\n\r\n  function detectJoiningForms(str) {\r\n    // This implements the algorithm described here:\r\n    // https://github.com/n8willis/opentype-shaping-documents/blob/master/opentype-shaping-arabic-general.md\r\n    const joiningForms = new Uint8Array(str.length);\r\n    let prevJoiningType = JT_NON_JOINING;\r\n    let prevForm = ISOL;\r\n    let prevIndex = -1;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const code = str.codePointAt(i);\r\n      let joiningType = getCharJoiningType(code) | 0;\r\n      let form = ISOL;\r\n      if (joiningType & JT_TRANSPARENT) {\r\n        continue\r\n      }\r\n      if (prevJoiningType & (JT_LEFT | JT_DUAL | JT_JOIN_CAUSING)) {\r\n        if (joiningType & (JT_RIGHT | JT_DUAL | JT_JOIN_CAUSING)) {\r\n          form = FINA;\r\n          // isol->init, fina->medi\r\n          if (prevForm === ISOL || prevForm === FINA) {\r\n            joiningForms[prevIndex]++;\r\n          }\r\n        }\r\n        else if (joiningType & (JT_LEFT | JT_NON_JOINING)) {\r\n          // medi->fina, init->isol\r\n          if (prevForm === INIT || prevForm === MEDI) {\r\n            joiningForms[prevIndex]--;\r\n          }\r\n        }\r\n      }\r\n      else if (prevJoiningType & (JT_RIGHT | JT_NON_JOINING)) {\r\n        // medi->fina, init->isol\r\n        if (prevForm === INIT || prevForm === MEDI) {\r\n          joiningForms[prevIndex]--;\r\n        }\r\n      }\r\n      prevForm = joiningForms[i] = form;\r\n      prevJoiningType = joiningType;\r\n      prevIndex = i;\r\n      if (code > 0xffff) i++;\r\n    }\r\n    // console.log(str.split('').map(ch => ch.codePointAt(0).toString(16)))\r\n    // console.log(str.split('').map(ch => getCharJoiningType(ch.codePointAt(0))))\r\n    // console.log(Array.from(joiningForms).map(f => formsToFeatures[f] || 'none'))\r\n    return joiningForms\r\n  }\r\n\r\n  function stringToGlyphs (font, str) {\r\n    const glyphIds = [];\r\n    for (let i = 0; i < str.length; i++) {\r\n      const cc = str.codePointAt(i);\r\n      if (cc > 0xffff) i++;\r\n      glyphIds.push(Typr.U.codeToGlyph(font, cc));\r\n    }\r\n\r\n    const gsub = font['GSUB'];\r\n    if (gsub) {\r\n      const {lookupList, featureList} = gsub;\r\n      let joiningForms;\r\n      const supportedFeatures = /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/;\r\n      const usedLookups = [];\r\n      featureList.forEach(feature => {\r\n        if (supportedFeatures.test(feature.tag)) {\r\n          for (let ti = 0; ti < feature.tab.length; ti++) {\r\n            if (usedLookups[feature.tab[ti]]) continue\r\n            usedLookups[feature.tab[ti]] = true;\r\n            const tab = lookupList[feature.tab[ti]];\r\n            const isJoiningFeature = /^(isol|init|fina|medi)$/.test(feature.tag);\r\n            if (isJoiningFeature && !joiningForms) { //lazy\r\n              joiningForms = detectJoiningForms(str);\r\n            }\r\n            for (let ci = 0; ci < glyphIds.length; ci++) {\r\n              if (!joiningForms || !isJoiningFeature || formsToFeatures[joiningForms[ci]] === feature.tag) {\r\n                Typr.U._applySubs(glyphIds, ci, tab, lookupList);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return glyphIds\r\n  }\r\n\r\n\r\n  function wrapFontObj(typrFont) {\r\n    const glyphMap = Object.create(null);\r\n\r\n    const fontObj = {\r\n      unitsPerEm: typrFont.head.unitsPerEm,\r\n      ascender: typrFont.hhea.ascender,\r\n      descender: typrFont.hhea.descender,\r\n      forEachGlyph(text, fontSize, letterSpacing, callback) {\r\n        let glyphX = 0;\r\n        const fontScale = 1 / fontObj.unitsPerEm * fontSize;\r\n\r\n        const glyphIndices = stringToGlyphs(typrFont, text);\r\n        let charIndex = 0;\r\n        let prevGlyphIndex = -1;\r\n        glyphIndices.forEach((glyphIndex, i) => {\r\n          // Typr returns a glyph index per string codepoint, with -1s in place of those that\r\n          // were omitted due to ligature substitution. So we can track original index in the\r\n          // string via simple increment, and skip everything else when seeing a -1.\r\n          if (glyphIndex !== -1) {\r\n            let glyphObj = glyphMap[glyphIndex];\r\n            if (!glyphObj) {\r\n              const {cmds, crds} = Typr.U.glyphToPath(typrFont, glyphIndex);\r\n\r\n              // Build path string\r\n              let path = '';\r\n              let crdsIdx = 0;\r\n              for (let i = 0, len = cmds.length; i < len; i++) {\r\n                const numArgs = cmdArgLengths[cmds[i]];\r\n                path += cmds[i];\r\n                for (let j = 1; j <= numArgs; j++) {\r\n                  path += (j > 1 ? ',' : '') + crds[crdsIdx++];\r\n                }\r\n              }\r\n\r\n              // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\r\n              // normalize the two, so it's simplest just to iterate ourselves.\r\n              let xMin, yMin, xMax, yMax;\r\n              if (crds.length) {\r\n                xMin = yMin = Infinity;\r\n                xMax = yMax = -Infinity;\r\n                for (let i = 0, len = crds.length; i < len; i += 2) {\r\n                  let x = crds[i];\r\n                  let y = crds[i + 1];\r\n                  if (x < xMin) xMin = x;\r\n                  if (y < yMin) yMin = y;\r\n                  if (x > xMax) xMax = x;\r\n                  if (y > yMax) yMax = y;\r\n                }\r\n              } else {\r\n                xMin = xMax = yMin = yMax = 0;\r\n              }\r\n\r\n              glyphObj = glyphMap[glyphIndex] = {\r\n                index: glyphIndex,\r\n                advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\r\n                xMin,\r\n                yMin,\r\n                xMax,\r\n                yMax,\r\n                path,\r\n                pathCommandCount: cmds.length,\r\n                // forEachPathCommand(callback) {\r\n                //   let argsIndex = 0\r\n                //   const argsArray = []\r\n                //   for (let i = 0, len = cmds.length; i < len; i++) {\r\n                //     const numArgs = cmdArgLengths[cmds[i]]\r\n                //     argsArray.length = 1 + numArgs\r\n                //     argsArray[0] = cmds[i]\r\n                //     for (let j = 1; j <= numArgs; j++) {\r\n                //       argsArray[j] = crds[argsIndex++]\r\n                //     }\r\n                //     callback.apply(null, argsArray)\r\n                //   }\r\n                // }\r\n              };\r\n            }\r\n\r\n            // Kerning\r\n            if (prevGlyphIndex !== -1) {\r\n              glyphX += Typr.U.getPairAdjustment(typrFont, prevGlyphIndex, glyphIndex) * fontScale;\r\n            }\r\n\r\n            callback.call(null, glyphObj, glyphX, charIndex);\r\n\r\n            if (glyphObj.advanceWidth) {\r\n              glyphX += glyphObj.advanceWidth * fontScale;\r\n            }\r\n            if (letterSpacing) {\r\n              glyphX += letterSpacing * fontSize;\r\n            }\r\n\r\n            prevGlyphIndex = glyphIndex;\r\n          }\r\n          charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\r\n        });\r\n        return glyphX\r\n      }\r\n    };\r\n\r\n    return fontObj\r\n  }\r\n\r\n  return function parse(buffer) {\r\n    // Look to see if we have a WOFF file and convert it if so:\r\n    const peek = new Uint8Array(buffer, 0, 4);\r\n    const tag = Typr._bin.readASCII(peek, 0, 4);\r\n    if (tag === 'wOFF') {\r\n      buffer = woff2otf(buffer);\r\n    } else if (tag === 'wOF2') {\r\n      throw new Error('woff2 fonts not supported')\r\n    }\r\n    return wrapFontObj(Typr.parse(buffer)[0])\r\n  }\r\n}\r\n\r\n\r\nconst workerModule = /*#__PURE__*/defineWorkerModule({\r\n  name: 'Typr Font Parser',\r\n  dependencies: [typrFactory, woff2otfFactory, parserFactory],\r\n  init(typrFactory, woff2otfFactory, parserFactory) {\r\n    const Typr = typrFactory();\r\n    const woff2otf = woff2otfFactory();\r\n    return parserFactory(Typr, woff2otf)\r\n  }\r\n});\r\n\r\nconst CONFIG = {\r\n  defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\r\n  sdfGlyphSize: 64,\r\n  sdfMargin: 1 / 16,\r\n  sdfExponent: 9,\r\n  textureWidth: 2048\r\n};\r\nconst tempColor = /*#__PURE__*/new Color();\r\nlet hasRequested = false;\r\n\r\nfunction now$1() {\r\n  return (self.performance || Date).now()\r\n}\r\n\r\n/**\r\n * Customizes the text builder configuration. This must be called prior to the first font processing\r\n * request, and applies to all fonts.\r\n *\r\n * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\r\n *                 requests, in case none is specified or the specifiede font fails to load or parse.\r\n *                 Defaults to \"Roboto Regular\" from Google Fonts.\r\n * @param {Number} config.sdfGlyphSize - The default size of each glyph's SDF (signed distance field)\r\n *                 texture used for rendering. Must be a power-of-two number, and applies to all fonts,\r\n *                 but note that this can also be overridden per call to `getTextRenderInfo()`.\r\n *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\r\n *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\r\n *                 to 64 which is generally a good balance of size and quality.\r\n * @param {Number} config.sdfExponent - The exponent used when encoding the SDF values. A higher exponent\r\n *                 shifts the encoded 8-bit values to achieve higher precision/accuracy at texels nearer\r\n *                 the glyph's path, with lower precision further away. Defaults to 9.\r\n * @param {Number} config.sdfMargin - How much space to reserve in the SDF as margin outside the glyph's\r\n *                 path, as a percentage of the SDF width. A larger margin increases the quality of\r\n *                 extruded glyph outlines, but decreases the precision available for the glyph itself.\r\n *                 Defaults to 1/16th of the glyph size.\r\n * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\r\n *                 2048 which is a safe maximum texture dimension according to the stats at\r\n *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\r\n *                 reasonably large number of glyphs (default glyph size of 64^2 and safe texture size of\r\n *                 2048^2, times 4 channels, allows for 4096 glyphs.) This can be increased if you need to\r\n *                 increase the glyph size and/or have an extraordinary number of glyphs.\r\n */\r\nfunction configureTextBuilder(config) {\r\n  if (hasRequested) {\r\n    console.warn('configureTextBuilder called after first font request; will be ignored.');\r\n  } else {\r\n    assign(CONFIG, config);\r\n  }\r\n}\r\n\r\n/**\r\n * Repository for all font SDF atlas textures and their glyph mappings. There is a separate atlas for\r\n * each sdfGlyphSize. Each atlas has a single Texture that holds all glyphs for all fonts.\r\n *\r\n *   {\r\n *     [sdfGlyphSize]: {\r\n *       glyphCount: number,\r\n *       sdfGlyphSize: number,\r\n *       sdfTexture: Texture,\r\n *       sdfCanvas: HTMLCanvasElement,\r\n *       contextLost: boolean,\r\n *       glyphsByFont: Map<fontURL, Map<glyphID, {path, atlasIndex, sdfViewBox}>>\r\n *     }\r\n *   }\r\n */\r\nconst atlases = Object.create(null);\r\n\r\n/**\r\n * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\r\n * @property {object} parameters - The normalized input arguments to the render call.\r\n * @property {Texture} sdfTexture - The SDF atlas texture.\r\n * @property {number} sdfGlyphSize - The size of each glyph's SDF; see `configureTextBuilder`.\r\n * @property {number} sdfExponent - The exponent used in encoding the SDF's values; see `configureTextBuilder`.\r\n * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\r\n * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\r\n * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\r\n * @property {Float32Array} [caretPositions] - A list of caret positions for all characters in the string; each is\r\n *           three elements: the starting X, the ending X, and the bottom Y for the caret.\r\n * @property {number} [caretHeight] - An appropriate height for all selection carets.\r\n * @property {number} ascender - The font's ascender metric.\r\n * @property {number} descender - The font's descender metric.\r\n * @property {number} lineHeight - The final computed lineHeight measurement.\r\n * @property {number} topBaseline - The y position of the top line's baseline.\r\n * @property {Array<number>} blockBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\r\n *           this can include extra vertical space beyond the visible glyphs due to lineHeight, and is\r\n *           equivalent to the dimensions of a block-level text element in CSS.\r\n * @property {Array<number>} visibleBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\r\n *           unlike `blockBounds` this is tightly wrapped to the visible glyph paths.\r\n * @property {Array<number>} totalBounds - DEPRECATED; use blockBounds instead.\r\n * @property {Array<number>} totalBlockSize - DEPRECATED; use blockBounds instead\r\n * @property {Array<object>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\r\n *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\r\n * @property {object} timings - Timing info for various parts of the rendering logic including SDF\r\n *           generation, typesetting, etc.\r\n * @frozen\r\n */\r\n\r\n/**\r\n * @callback getTextRenderInfo~callback\r\n * @param {TroikaTextRenderInfo} textRenderInfo\r\n */\r\n\r\n/**\r\n * Main entry point for requesting the data needed to render a text string with given font parameters.\r\n * This is an asynchronous call, performing most of the logic in a web worker thread.\r\n * @param {object} args\r\n * @param {getTextRenderInfo~callback} callback\r\n */\r\nfunction getTextRenderInfo(args, callback) {\r\n  hasRequested = true;\r\n  args = assign({}, args);\r\n  const totalStart = now$1();\r\n\r\n  // Apply default font here to avoid a 'null' atlas, and convert relative\r\n  // URLs to absolute so they can be resolved in the worker\r\n  args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL);\r\n\r\n  // Normalize text to a string\r\n  args.text = '' + args.text;\r\n\r\n  args.sdfGlyphSize = args.sdfGlyphSize || CONFIG.sdfGlyphSize;\r\n\r\n  // Normalize colors\r\n  if (args.colorRanges != null) {\r\n    let colors = {};\r\n    for (let key in args.colorRanges) {\r\n      if (args.colorRanges.hasOwnProperty(key)) {\r\n        let val = args.colorRanges[key];\r\n        if (typeof val !== 'number') {\r\n          val = tempColor.set(val).getHex();\r\n        }\r\n        colors[key] = val;\r\n      }\r\n    }\r\n    args.colorRanges = colors;\r\n  }\r\n\r\n  Object.freeze(args);\r\n\r\n  // Init the atlas if needed\r\n  const {textureWidth, sdfExponent} = CONFIG;\r\n  const {sdfGlyphSize} = args;\r\n  const glyphsPerRow = (textureWidth / sdfGlyphSize * 4);\r\n  let atlas = atlases[sdfGlyphSize];\r\n  if (!atlas) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = textureWidth;\r\n    canvas.height = sdfGlyphSize * 256 / glyphsPerRow; // start tall enough to fit 256 glyphs\r\n    atlas = atlases[sdfGlyphSize] = {\r\n      glyphCount: 0,\r\n      sdfGlyphSize,\r\n      sdfCanvas: canvas,\r\n      sdfTexture: new Texture(\r\n        canvas,\r\n        undefined,\r\n        undefined,\r\n        undefined,\r\n        LinearFilter,\r\n        LinearFilter\r\n      ),\r\n      contextLost: false,\r\n      glyphsByFont: new Map()\r\n    };\r\n    atlas.sdfTexture.generateMipmaps = false;\r\n    initContextLossHandling(atlas);\r\n  }\r\n\r\n  const {sdfTexture, sdfCanvas} = atlas;\r\n  let fontGlyphs = atlas.glyphsByFont.get(args.font);\r\n  if (!fontGlyphs) {\r\n    atlas.glyphsByFont.set(args.font, fontGlyphs = new Map());\r\n  }\r\n\r\n  // Issue request to the typesetting engine in the worker\r\n  typesetInWorker(args).then(result => {\r\n    const {glyphIds, glyphPositions, fontSize, unitsPerEm, timings} = result;\r\n    const neededSDFs = [];\r\n    const glyphBounds = new Float32Array(glyphIds.length * 4);\r\n    const fontSizeMult = fontSize / unitsPerEm;\r\n    let boundsIdx = 0;\r\n    let positionsIdx = 0;\r\n    const quadsStart = now$1();\r\n    glyphIds.forEach((glyphId, i) => {\r\n      let glyphInfo = fontGlyphs.get(glyphId);\r\n\r\n      // If this is a glyphId not seen before, add it to the atlas\r\n      if (!glyphInfo) {\r\n        const {path, pathBounds} = result.glyphData[glyphId];\r\n\r\n        // Margin around path edges in SDF, based on a percentage of the glyph's max dimension.\r\n        // Note we add an extra 0.5 px over the configured value because the outer 0.5 doesn't contain\r\n        // useful interpolated values and will be ignored anyway.\r\n        const fontUnitsMargin = Math.max(pathBounds[2] - pathBounds[0], pathBounds[3] - pathBounds[1])\r\n          / sdfGlyphSize * (CONFIG.sdfMargin * sdfGlyphSize + 0.5);\r\n\r\n        const atlasIndex = atlas.glyphCount++;\r\n        const sdfViewBox = [\r\n          pathBounds[0] - fontUnitsMargin,\r\n          pathBounds[1] - fontUnitsMargin,\r\n          pathBounds[2] + fontUnitsMargin,\r\n          pathBounds[3] + fontUnitsMargin,\r\n        ];\r\n        fontGlyphs.set(glyphId, (glyphInfo = { path, atlasIndex, sdfViewBox }));\r\n\r\n        // Collect those that need SDF generation\r\n        neededSDFs.push(glyphInfo);\r\n      }\r\n\r\n      // Calculate bounds for renderable quads\r\n      // TODO can we get this back off the main thread?\r\n      const {sdfViewBox} = glyphInfo;\r\n      const posX = glyphPositions[positionsIdx++];\r\n      const posY = glyphPositions[positionsIdx++];\r\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[0] * fontSizeMult;\r\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[1] * fontSizeMult;\r\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[2] * fontSizeMult;\r\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[3] * fontSizeMult;\r\n\r\n      // Convert glyphId to SDF index for the shader\r\n      glyphIds[i] = glyphInfo.atlasIndex;\r\n    });\r\n    timings.quads = (timings.quads || 0) + (now$1() - quadsStart);\r\n\r\n    const sdfStart = now$1();\r\n    timings.sdf = {};\r\n\r\n    // Grow the texture height by power of 2 if needed\r\n    const currentHeight = sdfCanvas.height;\r\n    const neededRows = Math.ceil(atlas.glyphCount / glyphsPerRow);\r\n    const neededHeight = Math.pow(2, Math.ceil(Math.log2(neededRows * sdfGlyphSize)));\r\n    if (neededHeight > currentHeight) {\r\n      // Since resizing the canvas clears its render buffer, it needs special handling to copy the old contents over\r\n      console.info(`Increasing SDF texture size ${currentHeight}->${neededHeight}`);\r\n      resizeWebGLCanvasWithoutClearing(sdfCanvas, textureWidth, neededHeight);\r\n      // As of Three r136 textures cannot be resized once they're allocated on the GPU, we must dispose to reallocate it\r\n      sdfTexture.dispose();\r\n    }\r\n\r\n    Thenable.all(neededSDFs.map(glyphInfo =>\r\n      generateGlyphSDF(glyphInfo, atlas, args.gpuAccelerateSDF).then(({timing}) => {\r\n        timings.sdf[glyphInfo.atlasIndex] = timing;\r\n      })\r\n    )).then(() => {\r\n      if (neededSDFs.length && !atlas.contextLost) {\r\n        safariPre15Workaround(atlas);\r\n        sdfTexture.needsUpdate = true;\r\n      }\r\n      timings.sdfTotal = now$1() - sdfStart;\r\n      timings.total = now$1() - totalStart;\r\n      // console.log(`SDF - ${timings.sdfTotal}, Total - ${timings.total - timings.fontLoad}`)\r\n\r\n      // Invoke callback with the text layout arrays and updated texture\r\n      callback(Object.freeze({\r\n        parameters: args,\r\n        sdfTexture,\r\n        sdfGlyphSize,\r\n        sdfExponent,\r\n        glyphBounds,\r\n        glyphAtlasIndices: glyphIds,\r\n        glyphColors: result.glyphColors,\r\n        caretPositions: result.caretPositions,\r\n        caretHeight: result.caretHeight,\r\n        chunkedBounds: result.chunkedBounds,\r\n        ascender: result.ascender,\r\n        descender: result.descender,\r\n        lineHeight: result.lineHeight,\r\n        topBaseline: result.topBaseline,\r\n        blockBounds: result.blockBounds,\r\n        visibleBounds: result.visibleBounds,\r\n        timings: result.timings,\r\n        get totalBounds() {\r\n          console.log('totalBounds deprecated, use blockBounds instead');\r\n          return result.blockBounds\r\n        },\r\n        get totalBlockSize() {\r\n          console.log('totalBlockSize deprecated, use blockBounds instead');\r\n          const [x0, y0, x1, y1] = result.blockBounds;\r\n          return [x1 - x0, y1 - y0]\r\n        }\r\n      }));\r\n    });\r\n  });\r\n\r\n  // While the typesetting request is being handled, go ahead and make sure the atlas canvas context is\r\n  // \"warmed up\"; the first request will be the longest due to shader program compilation so this gets\r\n  // a head start on that process before SDFs actually start getting processed.\r\n  Thenable.all([]).then(() => {\r\n    if (!atlas.contextLost) {\r\n      warmUpSDFCanvas(sdfCanvas);\r\n    }\r\n  });\r\n}\r\n\r\nfunction generateGlyphSDF({path, atlasIndex, sdfViewBox}, {sdfGlyphSize, sdfCanvas, contextLost}, useGPU) {\r\n  if (contextLost) {\r\n    // If the context is lost there's nothing we can do, just quit silently and let it\r\n    // get regenerated when the context is restored\r\n    return Promise.resolve({timing: -1})\r\n  }\r\n  const {textureWidth, sdfExponent} = CONFIG;\r\n  const maxDist = Math.max(sdfViewBox[2] - sdfViewBox[0], sdfViewBox[3] - sdfViewBox[1]);\r\n  const squareIndex = Math.floor(atlasIndex / 4);\r\n  const x = squareIndex % (textureWidth / sdfGlyphSize) * sdfGlyphSize;\r\n  const y = Math.floor(squareIndex / (textureWidth / sdfGlyphSize)) * sdfGlyphSize;\r\n  const channel = atlasIndex % 4;\r\n  return generateSDF(sdfGlyphSize, sdfGlyphSize, path, sdfViewBox, maxDist, sdfExponent, sdfCanvas, x, y, channel, useGPU)\r\n}\r\n\r\nfunction initContextLossHandling(atlas) {\r\n  const canvas = atlas.sdfCanvas;\r\n\r\n  /*\r\n  // Begin context loss simulation\r\n  if (!window.WebGLDebugUtils) {\r\n    let script = document.getElementById('WebGLDebugUtilsScript')\r\n    if (!script) {\r\n      script = document.createElement('script')\r\n      script.id = 'WebGLDebugUtils'\r\n      document.head.appendChild(script)\r\n      script.src = 'https://cdn.jsdelivr.net/gh/KhronosGroup/WebGLDeveloperTools@b42e702/src/debug/webgl-debug.js'\r\n    }\r\n    script.addEventListener('load', () => {\r\n      initContextLossHandling(atlas)\r\n    })\r\n    return\r\n  }\r\n  window.WebGLDebugUtils.makeLostContextSimulatingCanvas(canvas)\r\n  canvas.loseContextInNCalls(500)\r\n  canvas.addEventListener('webglcontextrestored', (event) => {\r\n    canvas.loseContextInNCalls(5000)\r\n  })\r\n  // End context loss simulation\r\n  */\r\n\r\n  canvas.addEventListener('webglcontextlost', (event) => {\r\n    console.log('Context Lost', event);\r\n    event.preventDefault();\r\n    atlas.contextLost = true;\r\n  });\r\n  canvas.addEventListener('webglcontextrestored', (event) => {\r\n    console.log('Context Restored', event);\r\n    atlas.contextLost = false;\r\n    // Regenerate all glyphs into the restored canvas:\r\n    const promises = [];\r\n    atlas.glyphsByFont.forEach(glyphMap => {\r\n      glyphMap.forEach(glyph => {\r\n        promises.push(generateGlyphSDF(glyph, atlas, true));\r\n      });\r\n    });\r\n    Thenable.all(promises).then(() => {\r\n      safariPre15Workaround(atlas);\r\n      atlas.sdfTexture.needsUpdate = true;\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\r\n * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\r\n * needed fonts and glyphs up front along with other assets.\r\n *\r\n * @param {object} options\r\n * @param {string} options.font - URL of the font file to preload. If not given, the default font will\r\n *        be loaded.\r\n * @param {string|string[]} options.characters - One or more character sequences for which to pre-\r\n *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\r\n *        to specify ligature sequences in addition to their individual characters to get all\r\n *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\r\n * @param {number} options.sdfGlyphSize - The size at which to prerender the SDF textures for the\r\n *        specified `characters`.\r\n * @param {function} callback - A function that will be called when the preloading is complete.\r\n */\r\nfunction preloadFont({font, characters, sdfGlyphSize}, callback) {\r\n  let text = Array.isArray(characters) ? characters.join('\\n') : '' + characters;\r\n  getTextRenderInfo({ font, sdfGlyphSize, text }, callback);\r\n}\r\n\r\n\r\n// Local assign impl so we don't have to import troika-core\r\nfunction assign(toObj, fromObj) {\r\n  for (let key in fromObj) {\r\n    if (fromObj.hasOwnProperty(key)) {\r\n      toObj[key] = fromObj[key];\r\n    }\r\n  }\r\n  return toObj\r\n}\r\n\r\n// Utility for making URLs absolute\r\nlet linkEl;\r\nfunction toAbsoluteURL(path) {\r\n  if (!linkEl) {\r\n    linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\r\n  }\r\n  linkEl.href = path;\r\n  return linkEl.href\r\n}\r\n\r\n/**\r\n * Safari < v15 seems unable to use the SDF webgl canvas as a texture. This applies a workaround\r\n * where it reads the pixels out of that canvas and uploads them as a data texture instead, at\r\n * a slight performance cost.\r\n */\r\nfunction safariPre15Workaround(atlas) {\r\n  // Use createImageBitmap support as a proxy for Safari<15, all other mainstream browsers\r\n  // have supported it for a long while so any false positives should be minimal.\r\n  if (typeof createImageBitmap !== 'function') {\r\n    console.info('Safari<15: applying SDF canvas workaround');\r\n    const {sdfCanvas, sdfTexture} = atlas;\r\n    const {width, height} = sdfCanvas;\r\n    const gl = atlas.sdfCanvas.getContext('webgl');\r\n    let pixels = sdfTexture.image.data;\r\n    if (!pixels || pixels.length !== width * height * 4) {\r\n      pixels = new Uint8Array(width * height * 4);\r\n      sdfTexture.image = {width, height, data: pixels};\r\n      sdfTexture.flipY = false;\r\n      sdfTexture.isDataTexture = true;\r\n    }\r\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n  }\r\n}\r\n\r\n\r\nconst typesetterWorkerModule = /*#__PURE__*/defineWorkerModule({\r\n  name: 'Typesetter',\r\n  dependencies: [\r\n    CONFIG,\r\n    workerModule,\r\n    createTypesetter,\r\n    bidiFactory\r\n  ],\r\n  init(config, fontParser, createTypesetter, bidiFactory) {\r\n    const {defaultFontURL} = config;\r\n    return createTypesetter(fontParser, bidiFactory(), { defaultFontURL })\r\n  }\r\n});\r\n\r\nconst typesetInWorker = /*#__PURE__*/defineWorkerModule({\r\n  name: 'Typesetter',\r\n  dependencies: [\r\n    typesetterWorkerModule,\r\n    ThenableWorkerModule\r\n  ],\r\n  init(typesetter, Thenable) {\r\n    return function(args) {\r\n      const thenable = new Thenable();\r\n      typesetter.typeset(args, thenable.resolve);\r\n      return thenable\r\n    }\r\n  },\r\n  getTransferables(result) {\r\n    // Mark array buffers as transferable to avoid cloning during postMessage\r\n    const transferables = [\r\n      result.glyphPositions.buffer,\r\n      result.glyphIds.buffer\r\n    ];\r\n    if (result.caretPositions) {\r\n      transferables.push(result.caretPositions.buffer);\r\n    }\r\n    if (result.glyphColors) {\r\n      transferables.push(result.glyphColors.buffer);\r\n    }\r\n    return transferables\r\n  }\r\n});\r\n\r\nfunction dumpSDFTextures() {\r\n  Object.keys(atlases).forEach(size => {\r\n    const canvas = atlases[size].sdfCanvas;\r\n    const {width, height} = canvas;\r\n    console.log(\"%c.\", `\r\n      background: url(${canvas.toDataURL()});\r\n      background-size: ${width}px ${height}px;\r\n      color: transparent;\r\n      font-size: 0;\r\n      line-height: ${height}px;\r\n      padding-left: ${width}px;\r\n    `);\r\n  });\r\n}\r\n\r\nconst GlyphsGeometry = /*#__PURE__*/(() => {\r\n\r\n  const templateGeometries = {};\r\n  function getTemplateGeometry(detail) {\r\n    let geom = templateGeometries[detail];\r\n    if (!geom) {\r\n      // Geometry is two planes back-to-back, which will always be rendered FrontSide only but\r\n      // appear as DoubleSide by default. FrontSide/BackSide are emulated using drawRange.\r\n      // We do it this way to avoid the performance hit of two draw calls for DoubleSide materials\r\n      // introduced by Three.js in r130 - see https://github.com/mrdoob/three.js/pull/21967\r\n      const front = new PlaneBufferGeometry(1, 1, detail, detail);\r\n      const back = front.clone();\r\n      const frontAttrs = front.attributes;\r\n      const backAttrs = back.attributes;\r\n      const combined = new BufferGeometry();\r\n      const vertCount = frontAttrs.uv.count;\r\n      for (let i = 0; i < vertCount; i++) {\r\n        backAttrs.position.array[i * 3] *= -1; // flip position x\r\n        backAttrs.normal.array[i * 3 + 2] *= -1; // flip normal z\r\n      }\r\n['position', 'normal', 'uv'].forEach(name => {\r\n        combined.setAttribute(name, new Float32BufferAttribute(\r\n          [...frontAttrs[name].array, ...backAttrs[name].array],\r\n          frontAttrs[name].itemSize)\r\n        );\r\n      });\r\n      combined.setIndex([...front.index.array, ...back.index.array.map(n => n + vertCount)]);\r\n      combined.translate(0.5, 0.5, 0);\r\n      geom = templateGeometries[detail] = combined;\r\n    }\r\n    return geom\r\n  }\r\n\r\n  const glyphBoundsAttrName = 'aTroikaGlyphBounds';\r\n  const glyphIndexAttrName = 'aTroikaGlyphIndex';\r\n  const glyphColorAttrName = 'aTroikaGlyphColor';\r\n\r\n  /**\r\n  @class GlyphsGeometry\r\n\r\n  A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\r\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\r\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\r\n\r\n    Where N = number of glyphs...\r\n\r\n    Instanced:\r\n    - position: 4 * 3\r\n    - index: 2 * 3\r\n    - normal: 4 * 3\r\n    - uv: 4 * 2\r\n    - glyph x/y bounds: N * 4\r\n    - glyph indices: N * 1\r\n    = 5N + 38\r\n\r\n    Non-instanced:\r\n    - position: N * 4 * 3\r\n    - index: N * 2 * 3\r\n    - normal: N * 4 * 3\r\n    - uv: N * 4 * 2\r\n    - glyph indices: N * 1\r\n    = 39N\r\n\r\n  A downside of this is the rare-but-possible lack of the instanced arrays extension,\r\n  which we could potentially work around with a fallback non-instanced implementation.\r\n\r\n  */\r\n  class GlyphsGeometry extends InstancedBufferGeometry {\r\n    constructor() {\r\n      super();\r\n\r\n      this.detail = 1;\r\n      this.curveRadius = 0;\r\n\r\n      // Define groups for rendering text outline as a separate pass; these will only\r\n      // be used when the `material` getter returns an array, i.e. outlineWidth > 0.\r\n      this.groups = [\r\n        {start: 0, count: Infinity, materialIndex: 0},\r\n        {start: 0, count: Infinity, materialIndex: 1}\r\n      ];\r\n\r\n      // Preallocate empty bounding objects\r\n      this.boundingSphere = new Sphere();\r\n      this.boundingBox = new Box3();\r\n    }\r\n\r\n    computeBoundingSphere () {\r\n      // No-op; we'll sync the boundingSphere proactively when needed.\r\n    }\r\n\r\n    computeBoundingBox() {\r\n      // No-op; we'll sync the boundingBox proactively when needed.\r\n    }\r\n\r\n    // Since our base geometry contains triangles for both front and back sides, we can emulate\r\n    // the \"side\" by restricting the draw range.\r\n    setSide(side) {\r\n      const verts = this.getIndex().count;\r\n      this.setDrawRange(side === BackSide ? verts / 2 : 0, side === DoubleSide ? verts : verts / 2);\r\n    }\r\n\r\n    set detail(detail) {\r\n      if (detail !== this._detail) {\r\n        this._detail = detail;\r\n        if (typeof detail !== 'number' || detail < 1) {\r\n          detail = 1;\r\n        }\r\n        let tpl = getTemplateGeometry(detail)\r\n        ;['position', 'normal', 'uv'].forEach(attr => {\r\n          this.attributes[attr] = tpl.attributes[attr].clone();\r\n        });\r\n        this.setIndex(tpl.getIndex().clone());\r\n      }\r\n    }\r\n    get detail() {\r\n      return this._detail\r\n    }\r\n\r\n    set curveRadius(r) {\r\n      if (r !== this._curveRadius) {\r\n        this._curveRadius = r;\r\n        this._updateBounds();\r\n      }\r\n    }\r\n    get curveRadius() {\r\n      return this._curveRadius\r\n    }\r\n\r\n    /**\r\n     * Update the geometry for a new set of glyphs.\r\n     * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\r\n     *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\r\n     * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\r\n     *        the SDF atlas texture.\r\n     * @param {Array} blockBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\r\n     * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\r\n     *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\r\n     *        used with `applyClipRect` to choose an optimized `instanceCount`.\r\n     * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\r\n     */\r\n    updateGlyphs(glyphBounds, glyphAtlasIndices, blockBounds, chunkedBounds, glyphColors) {\r\n      // Update the instance attributes\r\n      updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\r\n      updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\r\n      updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\r\n      this._blockBounds = blockBounds;\r\n      this._chunkedBounds = chunkedBounds;\r\n      setInstanceCount(this, glyphAtlasIndices.length);\r\n      this._updateBounds();\r\n    }\r\n\r\n    _updateBounds() {\r\n      const bounds = this._blockBounds;\r\n      if (bounds) {\r\n        const { curveRadius, boundingBox: bbox } = this;\r\n        if (curveRadius) {\r\n          const { PI, floor, min, max, sin, cos } = Math;\r\n          const halfPi = PI / 2;\r\n          const twoPi = PI * 2;\r\n          const absR = Math.abs(curveRadius);\r\n          const leftAngle = bounds[0] / absR;\r\n          const rightAngle = bounds[2] / absR;\r\n          const minX = floor((leftAngle + halfPi) / twoPi) !== floor((rightAngle + halfPi) / twoPi)\r\n            ? -absR : min(sin(leftAngle) * absR, sin(rightAngle) * absR);\r\n          const maxX = floor((leftAngle - halfPi) / twoPi) !== floor((rightAngle - halfPi) / twoPi)\r\n            ? absR : max(sin(leftAngle) * absR, sin(rightAngle) * absR);\r\n          const maxZ = floor((leftAngle + PI) / twoPi) !== floor((rightAngle + PI) / twoPi)\r\n            ? absR * 2 : max(absR - cos(leftAngle) * absR, absR - cos(rightAngle) * absR);\r\n          bbox.min.set(minX, bounds[1], curveRadius < 0 ? -maxZ : 0);\r\n          bbox.max.set(maxX, bounds[3], curveRadius < 0 ? 0 : maxZ);\r\n        } else {\r\n          bbox.min.set(bounds[0], bounds[1], 0);\r\n          bbox.max.set(bounds[2], bounds[3], 0);\r\n        }\r\n        bbox.getBoundingSphere(this.boundingSphere);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\r\n     * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\r\n     * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\r\n     * be clipped anyway.\r\n     *\r\n     * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\r\n     * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\r\n     * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\r\n     * but at the expense of much larger attribute buffers (see classdoc above.)\r\n     *\r\n     * @param {Vector4} clipRect\r\n     */\r\n    applyClipRect(clipRect) {\r\n      let count = this.getAttribute(glyphIndexAttrName).count;\r\n      let chunks = this._chunkedBounds;\r\n      if (chunks) {\r\n        for (let i = chunks.length; i--;) {\r\n          count = chunks[i].end;\r\n          let rect = chunks[i].rect;\r\n          // note: both rects are l-b-r-t\r\n          if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\r\n            break\r\n          }\r\n        }\r\n      }\r\n      setInstanceCount(this, count);\r\n    }\r\n  }\r\n\r\n  // Compat for pre r109:\r\n  if (!GlyphsGeometry.prototype.setAttribute) {\r\n    GlyphsGeometry.prototype.setAttribute = function(name, attribute) {\r\n      this.attributes[ name ] = attribute;\r\n      return this\r\n    };\r\n  }\r\n\r\n\r\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\r\n    const attr = geom.getAttribute(attrName);\r\n    if (newArray) {\r\n      // If length isn't changing, just update the attribute's array data\r\n      if (attr && attr.array.length === newArray.length) {\r\n        attr.array.set(newArray);\r\n        attr.needsUpdate = true;\r\n      } else {\r\n        geom.setAttribute(attrName, new InstancedBufferAttribute(newArray, itemSize));\r\n        // If the new attribute has a different size, we also have to (as of r117) manually clear the\r\n        // internal cached max instance count. See https://github.com/mrdoob/three.js/issues/19706\r\n        // It's unclear if this is a threejs bug or a truly unsupported scenario; discussion in\r\n        // that ticket is ambiguous as to whether replacing a BufferAttribute with one of a\r\n        // different size is supported, but https://github.com/mrdoob/three.js/pull/17418 strongly\r\n        // implies it should be supported. It's possible we need to\r\n        delete geom._maxInstanceCount; //for r117+, could be fragile\r\n        geom.dispose(); //for r118+, more robust feeling, but more heavy-handed than I'd like\r\n      }\r\n    } else if (attr) {\r\n      geom.deleteAttribute(attrName);\r\n    }\r\n  }\r\n\r\n  // Handle maxInstancedCount -> instanceCount rename that happened in three r117\r\n  function setInstanceCount(geom, count) {\r\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\r\n  }\r\n\r\n  return GlyphsGeometry\r\n})();\r\n\r\n// language=GLSL\r\nconst VERTEX_DEFS = `\r\nuniform vec2 uTroikaSDFTextureSize;\r\nuniform float uTroikaSDFGlyphSize;\r\nuniform vec4 uTroikaTotalBounds;\r\nuniform vec4 uTroikaClipRect;\r\nuniform mat3 uTroikaOrient;\r\nuniform bool uTroikaUseGlyphColors;\r\nuniform float uTroikaDistanceOffset;\r\nuniform float uTroikaBlurRadius;\r\nuniform vec2 uTroikaPositionOffset;\r\nuniform float uTroikaCurveRadius;\r\nattribute vec4 aTroikaGlyphBounds;\r\nattribute float aTroikaGlyphIndex;\r\nattribute vec3 aTroikaGlyphColor;\r\nvarying vec2 vTroikaGlyphUV;\r\nvarying vec4 vTroikaTextureUVBounds;\r\nvarying float vTroikaTextureChannel;\r\nvarying vec3 vTroikaGlyphColor;\r\nvarying vec2 vTroikaGlyphDimensions;\r\n`;\r\n\r\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\r\nconst VERTEX_TRANSFORM = `\r\nvec4 bounds = aTroikaGlyphBounds;\r\nbounds.xz += uTroikaPositionOffset.x;\r\nbounds.yw -= uTroikaPositionOffset.y;\r\n\r\nvec4 outlineBounds = vec4(\r\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\r\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\r\n);\r\nvec4 clippedBounds = vec4(\r\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\r\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\r\n);\r\n\r\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\r\n\r\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\r\n\r\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\r\n\r\nfloat rad = uTroikaCurveRadius;\r\nif (rad != 0.0) {\r\n  float angle = position.x / rad;\r\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\r\n  normal.xz = vec2(sin(angle), cos(angle));\r\n}\r\n  \r\nposition = uTroikaOrient * position;\r\nnormal = uTroikaOrient * normal;\r\n\r\nvTroikaGlyphUV = clippedXY.xy;\r\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\r\n\r\n${''/* NOTE: it seems important to calculate the glyph's bounding texture UVs here in the\r\n  vertex shader, rather than in the fragment shader, as the latter gives strange artifacts\r\n  on some glyphs (those in the leftmost texture column) on some systems. The exact reason\r\n  isn't understood but doing this here, then mix()-ing in the fragment shader, seems to work. */}\r\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\r\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\r\nvec2 txStartUV = txUvPerSquare * vec2(\r\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\r\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\r\n);\r\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\r\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\r\n`;\r\n\r\n// language=GLSL\r\nconst FRAGMENT_DEFS = `\r\nuniform sampler2D uTroikaSDFTexture;\r\nuniform vec2 uTroikaSDFTextureSize;\r\nuniform float uTroikaSDFGlyphSize;\r\nuniform float uTroikaSDFExponent;\r\nuniform float uTroikaDistanceOffset;\r\nuniform float uTroikaFillOpacity;\r\nuniform float uTroikaOutlineOpacity;\r\nuniform float uTroikaBlurRadius;\r\nuniform vec3 uTroikaStrokeColor;\r\nuniform float uTroikaStrokeWidth;\r\nuniform float uTroikaStrokeOpacity;\r\nuniform bool uTroikaSDFDebug;\r\nvarying vec2 vTroikaGlyphUV;\r\nvarying vec4 vTroikaTextureUVBounds;\r\nvarying float vTroikaTextureChannel;\r\nvarying vec2 vTroikaGlyphDimensions;\r\n\r\nfloat troikaSdfValueToSignedDistance(float alpha) {\r\n  // Inverse of exponential encoding in webgl-sdf-generator\r\n  ${''/* TODO - there's some slight inaccuracy here when dealing with interpolated alpha values; those\r\n    are linearly interpolated where the encoding is exponential. Look into improving this by rounding\r\n    to nearest 2 whole texels, decoding those exponential values, and linearly interpolating the result.\r\n  */}\r\n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\r\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\r\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\r\n  return signedDist;\r\n}\r\n\r\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\r\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\r\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\r\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\r\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\r\n}\r\n\r\nfloat troikaGlyphUvToDistance(vec2 uv) {\r\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\r\n}\r\n\r\nfloat troikaGetAADist() {\r\n  ${''/*\r\n    When the standard derivatives extension is available, we choose an antialiasing alpha threshold based\r\n    on the potential change in the SDF's alpha from this fragment to its neighbor. This strategy maximizes \r\n    readability and edge crispness at all sizes and screen resolutions.\r\n  */}\r\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\r\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\r\n  #else\r\n  return vTroikaGlyphDimensions.x / 64.0;\r\n  #endif\r\n}\r\n\r\nfloat troikaGetFragDistValue() {\r\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\r\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\r\n \r\n  // Extrapolate distance when outside bounds:\r\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \r\n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\r\n\r\n  ${''/* \r\n  // TODO more refined extrapolated distance by adjusting for angle of gradient at edge...\r\n  // This has potential but currently gives very jagged extensions, maybe due to precision issues?\r\n  float uvStep = 1.0 / uTroikaSDFGlyphSize;\r\n  vec2 neighbor1UV = clampedGlyphUV + (\r\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * sign(0.5 - vTroikaGlyphUV.y)) :\r\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * sign(0.5 - vTroikaGlyphUV.x), 0.0) :\r\n    vec2(0.0)\r\n  );\r\n  vec2 neighbor2UV = clampedGlyphUV + (\r\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * -sign(0.5 - vTroikaGlyphUV.y)) :\r\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * -sign(0.5 - vTroikaGlyphUV.x), 0.0) :\r\n    vec2(0.0)\r\n  );\r\n  float neighbor1Distance = troikaGlyphUvToDistance(neighbor1UV);\r\n  float neighbor2Distance = troikaGlyphUvToDistance(neighbor2UV);\r\n  float distToUnclamped = length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\r\n  float distToNeighbor = length((clampedGlyphUV - neighbor1UV) * vTroikaGlyphDimensions);\r\n  float gradientAngle1 = min(asin(abs(neighbor1Distance - distance) / distToNeighbor), PI / 2.0);\r\n  float gradientAngle2 = min(asin(abs(neighbor2Distance - distance) / distToNeighbor), PI / 2.0);\r\n  distance += (cos(gradientAngle1) + cos(gradientAngle2)) / 2.0 * distToUnclamped;\r\n  */}\r\n\r\n  return distance;\r\n}\r\n\r\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\r\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\r\n  float alpha = step(-distanceOffset, -distance);\r\n  #else\r\n\r\n  float alpha = smoothstep(\r\n    distanceOffset + aaDist,\r\n    distanceOffset - aaDist,\r\n    distance\r\n  );\r\n  #endif\r\n\r\n  return alpha;\r\n}\r\n`;\r\n\r\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\r\nconst FRAGMENT_TRANSFORM = `\r\nfloat aaDist = troikaGetAADist();\r\nfloat fragDistance = troikaGetFragDistValue();\r\nfloat edgeAlpha = uTroikaSDFDebug ?\r\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\r\n  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\r\n\r\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\r\nvec4 fillRGBA = gl_FragColor;\r\nfillRGBA.a *= uTroikaFillOpacity;\r\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\r\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\r\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\r\n  -uTroikaStrokeWidth - aaDist,\r\n  -uTroikaStrokeWidth + aaDist,\r\n  fragDistance\r\n));\r\ngl_FragColor.a *= edgeAlpha;\r\n#endif\r\n\r\nif (edgeAlpha == 0.0) {\r\n  discard;\r\n}\r\n`;\r\n\r\n\r\n/**\r\n * Create a material for rendering text, derived from a baseMaterial\r\n */\r\nfunction createTextDerivedMaterial(baseMaterial) {\r\n  const textMaterial = createDerivedMaterial(baseMaterial, {\r\n    chained: true,\r\n    extensions: {\r\n      derivatives: true\r\n    },\r\n    uniforms: {\r\n      uTroikaSDFTexture: {value: null},\r\n      uTroikaSDFTextureSize: {value: new Vector2()},\r\n      uTroikaSDFGlyphSize: {value: 0},\r\n      uTroikaSDFExponent: {value: 0},\r\n      uTroikaTotalBounds: {value: new Vector4(0,0,0,0)},\r\n      uTroikaClipRect: {value: new Vector4(0,0,0,0)},\r\n      uTroikaDistanceOffset: {value: 0},\r\n      uTroikaOutlineOpacity: {value: 0},\r\n      uTroikaFillOpacity: {value: 1},\r\n      uTroikaPositionOffset: {value: new Vector2()},\r\n      uTroikaCurveRadius: {value: 0},\r\n      uTroikaBlurRadius: {value: 0},\r\n      uTroikaStrokeWidth: {value: 0},\r\n      uTroikaStrokeColor: {value: new Color()},\r\n      uTroikaStrokeOpacity: {value: 1},\r\n      uTroikaOrient: {value: new Matrix3()},\r\n      uTroikaUseGlyphColors: {value: true},\r\n      uTroikaSDFDebug: {value: false}\r\n    },\r\n    vertexDefs: VERTEX_DEFS,\r\n    vertexTransform: VERTEX_TRANSFORM,\r\n    fragmentDefs: FRAGMENT_DEFS,\r\n    fragmentColorTransform: FRAGMENT_TRANSFORM,\r\n    customRewriter({vertexShader, fragmentShader}) {\r\n      let uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\r\n      if (uDiffuseRE.test(fragmentShader)) {\r\n        // Replace all instances of `diffuse` with our varying\r\n        fragmentShader = fragmentShader\r\n          .replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor')\r\n          .replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor');\r\n        // Make sure the vertex shader declares the uniform so we can grab it as a fallback\r\n        if (!uDiffuseRE.test(vertexShader)) {\r\n          vertexShader = vertexShader.replace(\r\n            voidMainRegExp,\r\n            'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n'\r\n          );\r\n        }\r\n      }\r\n      return { vertexShader, fragmentShader }\r\n    }\r\n  });\r\n\r\n  // Force transparency - TODO is this reasonable?\r\n  textMaterial.transparent = true;\r\n\r\n  Object.defineProperties(textMaterial, {\r\n    isTroikaTextMaterial: {value: true},\r\n\r\n    // WebGLShadowMap reverses the side of the shadow material by default, which fails\r\n    // for planes, so here we force the `shadowSide` to always match the main side.\r\n    shadowSide: {\r\n      get() {\r\n        return this.side\r\n      },\r\n      set() {\r\n        //no-op\r\n      }\r\n    }\r\n  });\r\n\r\n  return textMaterial\r\n}\r\n\r\nconst Text = /*#__PURE__*/(() => {\r\n\r\n  const defaultMaterial = new MeshBasicMaterial({\r\n    color: 0xffffff,\r\n    side: DoubleSide,\r\n    transparent: true\r\n  });\r\n  const defaultStrokeColor = 0x808080;\r\n\r\n  const tempMat4 = new Matrix4();\r\n  const tempVec3a = new Vector3();\r\n  const tempVec3b = new Vector3();\r\n  const tempArray = [];\r\n  const origin = new Vector3();\r\n  const defaultOrient = '+x+y';\r\n\r\n  function first(o) {\r\n    return Array.isArray(o) ? o[0] : o\r\n  }\r\n\r\n  let getFlatRaycastMesh = () => {\r\n    const mesh = new Mesh(\r\n      new PlaneBufferGeometry(1, 1),\r\n      defaultMaterial\r\n    );\r\n    getFlatRaycastMesh = () => mesh;\r\n    return mesh\r\n  };\r\n  let getCurvedRaycastMesh = () => {\r\n    const mesh = new Mesh(\r\n      new PlaneBufferGeometry(1, 1, 32, 1),\r\n      defaultMaterial\r\n    );\r\n    getCurvedRaycastMesh = () => mesh;\r\n    return mesh\r\n  };\r\n\r\n  const syncStartEvent = {type: 'syncstart'};\r\n  const syncCompleteEvent = {type: 'synccomplete'};\r\n\r\n  const SYNCABLE_PROPS = [\r\n    'font',\r\n    'fontSize',\r\n    'letterSpacing',\r\n    'lineHeight',\r\n    'maxWidth',\r\n    'overflowWrap',\r\n    'text',\r\n    'direction',\r\n    'textAlign',\r\n    'textIndent',\r\n    'whiteSpace',\r\n    'anchorX',\r\n    'anchorY',\r\n    'colorRanges',\r\n    'sdfGlyphSize'\r\n  ];\r\n\r\n  const COPYABLE_PROPS = SYNCABLE_PROPS.concat(\r\n    'material',\r\n    'color',\r\n    'depthOffset',\r\n    'clipRect',\r\n    'curveRadius',\r\n    'orientation',\r\n    'glyphGeometryDetail'\r\n  );\r\n\r\n\r\n\r\n  /**\r\n   * @class Text\r\n   *\r\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\r\n   * fields (SDF).\r\n   */\r\n  class Text extends Mesh {\r\n    constructor() {\r\n      const geometry = new GlyphsGeometry();\r\n      super(geometry, null);\r\n\r\n      // === Text layout properties: === //\r\n\r\n      /**\r\n       * @member {string} text\r\n       * The string of text to be rendered.\r\n       */\r\n      this.text = '';\r\n\r\n      /**\r\n       * @deprecated Use `anchorX` and `anchorY` instead\r\n       * @member {Array<number>} anchor\r\n       * Defines where in the text block should correspond to the mesh's local position, as a set\r\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\r\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\r\n       * block at the mesh's position.\r\n       */\r\n      //this.anchor = null\r\n\r\n      /**\r\n       * @member {number|string} anchorX\r\n       * Defines the horizontal position in the text block that should line up with the local origin.\r\n       * Can be specified as a numeric x position in local units, a string percentage of the total\r\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\r\n       * or 'right'.\r\n       */\r\n      this.anchorX = 0;\r\n\r\n      /**\r\n       * @member {number|string} anchorX\r\n       * Defines the vertical position in the text block that should line up with the local origin.\r\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\r\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\r\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\r\n       */\r\n      this.anchorY = 0;\r\n\r\n      /**\r\n       * @member {number} curveRadius\r\n       * Defines a cylindrical radius along which the text's plane will be curved. Positive numbers put\r\n       * the cylinder's centerline (oriented vertically) that distance in front of the text, for a concave\r\n       * curvature, while negative numbers put it behind the text for a convex curvature. The centerline\r\n       * will be aligned with the text's local origin; you can use `anchorX` to offset it.\r\n       *\r\n       * Since each glyph is by default rendered with a simple quad, each glyph remains a flat plane\r\n       * internally. You can use `glyphGeometryDetail` to add more vertices for curvature inside glyphs.\r\n       */\r\n      this.curveRadius = 0;\r\n\r\n      /**\r\n       * @member {string} direction\r\n       * Sets the base direction for the text. The default value of \"auto\" will choose a direction based\r\n       * on the text's content according to the bidi spec. A value of \"ltr\" or \"rtl\" will force the direction.\r\n       */\r\n      this.direction = 'auto';\r\n\r\n      /**\r\n       * @member {string} font\r\n       * URL of a custom font to be used. Font files can be in .ttf, .otf, or .woff (not .woff2) formats.\r\n       * Defaults to the Roboto font loaded from Google Fonts.\r\n       */\r\n      this.font = null; //will use default from TextBuilder\r\n\r\n      /**\r\n       * @member {number} fontSize\r\n       * The size at which to render the font in local units; corresponds to the em-box height\r\n       * of the chosen `font`.\r\n       */\r\n      this.fontSize = 0.1;\r\n\r\n      /**\r\n       * @member {number} letterSpacing\r\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\r\n       * numbers increase spacing and negative numbers decrease it.\r\n       */\r\n      this.letterSpacing = 0;\r\n\r\n      /**\r\n       * @member {number|string} lineHeight\r\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\r\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\r\n       */\r\n      this.lineHeight = 'normal';\r\n\r\n      /**\r\n       * @member {number} maxWidth\r\n       * The maximum width of the text block, above which text may start wrapping according to the\r\n       * `whiteSpace` and `overflowWrap` properties.\r\n       */\r\n      this.maxWidth = Infinity;\r\n\r\n      /**\r\n       * @member {string} overflowWrap\r\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\r\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\r\n       * Defaults to `'normal'`.\r\n       */\r\n      this.overflowWrap = 'normal';\r\n\r\n      /**\r\n       * @member {string} textAlign\r\n       * The horizontal alignment of each line of text within the overall text bounding box.\r\n       */\r\n      this.textAlign = 'left';\r\n\r\n      /**\r\n       * @member {number} textIndent\r\n       * Indentation for the first character of a line; see CSS `text-indent`.\r\n       */\r\n      this.textIndent = 0;\r\n\r\n      /**\r\n       * @member {string} whiteSpace\r\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\r\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\r\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\r\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\r\n       */\r\n      this.whiteSpace = 'normal';\r\n\r\n\r\n      // === Presentation properties: === //\r\n\r\n      /**\r\n       * @member {THREE.Material} material\r\n       * Defines a _base_ material to be used when rendering the text. This material will be\r\n       * automatically replaced with a material derived from it, that adds shader code to\r\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\r\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\r\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\r\n       *\r\n       * Also see the `color` shortcut property.\r\n       */\r\n      this.material = null;\r\n\r\n      /**\r\n       * @member {string|number|THREE.Color} color\r\n       * This is a shortcut for setting the `color` of the text's material. You can use this\r\n       * if you don't want to specify a whole custom `material`. Also, if you do use a custom\r\n       * `material`, this color will only be used for this particuar Text instance, even if\r\n       * that same material instance is shared across multiple Text objects.\r\n       */\r\n      this.color = null;\r\n\r\n      /**\r\n       * @member {object|null} colorRanges\r\n       * WARNING: This API is experimental and may change.\r\n       * This allows more fine-grained control of colors for individual or ranges of characters,\r\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\r\n       * define a starting character index for a range, and whose values are the color for each\r\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\r\n       * any of the strings accepted by `THREE.Color`.\r\n       */\r\n      this.colorRanges = null;\r\n\r\n      /**\r\n       * @member {number|string} outlineWidth\r\n       * WARNING: This API is experimental and may change.\r\n       * The width of an outline/halo to be drawn around each text glyph using the `outlineColor` and `outlineOpacity`.\r\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\r\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`, which means\r\n       * no outline will be drawn unless an `outlineOffsetX/Y` or `outlineBlur` is set.\r\n       */\r\n      this.outlineWidth = 0;\r\n\r\n      /**\r\n       * @member {string|number|THREE.Color} outlineColor\r\n       * WARNING: This API is experimental and may change.\r\n       * The color of the text outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\r\n       * Defaults to black.\r\n       */\r\n      this.outlineColor = 0x000000;\r\n\r\n      /**\r\n       * @member {number} outlineOpacity\r\n       * WARNING: This API is experimental and may change.\r\n       * The opacity of the outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\r\n       * Defaults to `1`.\r\n       */\r\n      this.outlineOpacity = 1;\r\n\r\n      /**\r\n       * @member {number|string} outlineBlur\r\n       * WARNING: This API is experimental and may change.\r\n       * A blur radius applied to the outer edge of the text's outline. If the `outlineWidth` is\r\n       * zero, the blur will be applied at the glyph edge, like CSS's `text-shadow` blur radius.\r\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\r\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`.\r\n       */\r\n      this.outlineBlur = 0;\r\n\r\n      /**\r\n       * @member {number|string} outlineOffsetX\r\n       * WARNING: This API is experimental and may change.\r\n       * A horizontal offset for the text outline.\r\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\r\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\r\n       */\r\n      this.outlineOffsetX = 0;\r\n\r\n      /**\r\n       * @member {number|string} outlineOffsetY\r\n       * WARNING: This API is experimental and may change.\r\n       * A vertical offset for the text outline.\r\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\r\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\r\n       */\r\n      this.outlineOffsetY = 0;\r\n\r\n      /**\r\n       * @member {number|string} strokeWidth\r\n       * WARNING: This API is experimental and may change.\r\n       * The width of an inner stroke drawn inside each text glyph using the `strokeColor` and `strokeOpacity`.\r\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\r\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\r\n       */\r\n      this.strokeWidth = 0;\r\n\r\n      /**\r\n       * @member {string|number|THREE.Color} strokeColor\r\n       * WARNING: This API is experimental and may change.\r\n       * The color of the text stroke, if `strokeWidth` is greater than zero. Defaults to gray.\r\n       */\r\n      this.strokeColor = defaultStrokeColor;\r\n\r\n      /**\r\n       * @member {number} strokeOpacity\r\n       * WARNING: This API is experimental and may change.\r\n       * The opacity of the stroke, if `strokeWidth` is greater than zero. Defaults to `1`.\r\n       */\r\n      this.strokeOpacity = 1;\r\n\r\n      /**\r\n       * @member {number} fillOpacity\r\n       * WARNING: This API is experimental and may change.\r\n       * The opacity of the glyph's fill from 0 to 1. This behaves like the material's `opacity` but allows\r\n       * giving the fill a different opacity than the `strokeOpacity`. A fillOpacity of `0` makes the\r\n       * interior of the glyph invisible, leaving just the `strokeWidth`. Defaults to `1`.\r\n       */\r\n      this.fillOpacity = 1;\r\n\r\n      /**\r\n       * @member {number} depthOffset\r\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\r\n       * which can be useful in preventing z-fighting when this text is laid on top of another\r\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\r\n       */\r\n      this.depthOffset = 0;\r\n\r\n      /**\r\n       * @member {Array<number>} clipRect\r\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\r\n       * pixels will be discarded. This can be used for example to clip overflowing text when\r\n       * `whiteSpace='nowrap'`.\r\n       */\r\n      this.clipRect = null;\r\n\r\n      /**\r\n       * @member {string} orientation\r\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\r\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\r\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\r\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\r\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\r\n       * top toward negative z and facing positive y.\r\n       */\r\n      this.orientation = defaultOrient;\r\n\r\n      /**\r\n       * @member {number} glyphGeometryDetail\r\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\r\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\r\n       * vertex shader effects, for example.\r\n       */\r\n      this.glyphGeometryDetail = 1;\r\n\r\n      /**\r\n       * @member {number|null} sdfGlyphSize\r\n       * The size of each glyph's SDF (signed distance field) used for rendering. This must be a\r\n       * power-of-two number. Defaults to 64 which is generally a good balance of size and quality\r\n       * for most fonts. Larger sizes can improve the quality of glyph rendering by increasing\r\n       * the sharpness of corners and preventing loss of very thin lines, at the expense of\r\n       * increased memory footprint and longer SDF generation time.\r\n       */\r\n      this.sdfGlyphSize = null;\r\n\r\n      /**\r\n       * @member {boolean} gpuAccelerateSDF\r\n       * When `true`, the SDF generation process will be GPU-accelerated with WebGL when possible,\r\n       * making it much faster especially for complex glyphs, and falling back to a JavaScript version\r\n       * executed in web workers when support isn't available. It should automatically detect support,\r\n       * but it's still somewhat experimental, so you can set it to `false` to force it to use the JS\r\n       * version if you encounter issues with it.\r\n       */\r\n      this.gpuAccelerateSDF = true;\r\n\r\n      this.debugSDF = false;\r\n    }\r\n\r\n    /**\r\n     * Updates the text rendering according to the current text-related configuration properties.\r\n     * This is an async process, so you can pass in a callback function to be executed when it\r\n     * finishes.\r\n     * @param {function} [callback]\r\n     */\r\n    sync(callback) {\r\n      if (this._needsSync) {\r\n        this._needsSync = false;\r\n\r\n        // If there's another sync still in progress, queue\r\n        if (this._isSyncing) {\r\n          (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\r\n        } else {\r\n          this._isSyncing = true;\r\n          this.dispatchEvent(syncStartEvent);\r\n\r\n          getTextRenderInfo({\r\n            text: this.text,\r\n            font: this.font,\r\n            fontSize: this.fontSize || 0.1,\r\n            letterSpacing: this.letterSpacing || 0,\r\n            lineHeight: this.lineHeight || 'normal',\r\n            maxWidth: this.maxWidth,\r\n            direction: this.direction || 'auto',\r\n            textAlign: this.textAlign,\r\n            textIndent: this.textIndent,\r\n            whiteSpace: this.whiteSpace,\r\n            overflowWrap: this.overflowWrap,\r\n            anchorX: this.anchorX,\r\n            anchorY: this.anchorY,\r\n            colorRanges: this.colorRanges,\r\n            includeCaretPositions: true, //TODO parameterize\r\n            sdfGlyphSize: this.sdfGlyphSize,\r\n            gpuAccelerateSDF: this.gpuAccelerateSDF,\r\n          }, textRenderInfo => {\r\n            this._isSyncing = false;\r\n\r\n            // Save result for later use in onBeforeRender\r\n            this._textRenderInfo = textRenderInfo;\r\n\r\n            // Update the geometry attributes\r\n            this.geometry.updateGlyphs(\r\n              textRenderInfo.glyphBounds,\r\n              textRenderInfo.glyphAtlasIndices,\r\n              textRenderInfo.blockBounds,\r\n              textRenderInfo.chunkedBounds,\r\n              textRenderInfo.glyphColors\r\n            );\r\n\r\n            // If we had extra sync requests queued up, kick it off\r\n            const queued = this._queuedSyncs;\r\n            if (queued) {\r\n              this._queuedSyncs = null;\r\n              this._needsSync = true;\r\n              this.sync(() => {\r\n                queued.forEach(fn => fn && fn());\r\n              });\r\n            }\r\n\r\n            this.dispatchEvent(syncCompleteEvent);\r\n            if (callback) {\r\n              callback();\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Initiate a sync if needed - note it won't complete until next frame at the\r\n     * earliest so if possible it's a good idea to call sync() manually as soon as\r\n     * all the properties have been set.\r\n     * @override\r\n     */\r\n    onBeforeRender(renderer, scene, camera, geometry, material, group) {\r\n      this.sync();\r\n\r\n      // This may not always be a text material, e.g. if there's a scene.overrideMaterial present\r\n      if (material.isTroikaTextMaterial) {\r\n        this._prepareForRender(material);\r\n      }\r\n\r\n      // We need to force the material to FrontSide to avoid the double-draw-call performance hit\r\n      // introduced in Three.js r130: https://github.com/mrdoob/three.js/pull/21967 - The sidedness\r\n      // is instead applied via drawRange in the GlyphsGeometry.\r\n      material._hadOwnSide = material.hasOwnProperty('side');\r\n      this.geometry.setSide(material._actualSide = material.side);\r\n      material.side = FrontSide;\r\n    }\r\n\r\n    onAfterRender(renderer, scene, camera, geometry, material, group) {\r\n      // Restore original material side\r\n      if (material._hadOwnSide) {\r\n        material.side = material._actualSide;\r\n      } else {\r\n        delete material.side; // back to inheriting from base material\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Shortcut to dispose the geometry specific to this instance.\r\n     * Note: we don't also dispose the derived material here because if anything else is\r\n     * sharing the same base material it will result in a pause next frame as the program\r\n     * is recompiled. Instead users can dispose the base material manually, like normal,\r\n     * and we'll also dispose the derived material at that time.\r\n     */\r\n    dispose() {\r\n      this.geometry.dispose();\r\n    }\r\n\r\n    /**\r\n     * @property {TroikaTextRenderInfo|null} textRenderInfo\r\n     * @readonly\r\n     * The current processed rendering data for this TextMesh, returned by the TextBuilder after\r\n     * a `sync()` call. This will be `null` initially, and may be stale for a short period until\r\n     * the asynchrous `sync()` process completes.\r\n     */\r\n    get textRenderInfo() {\r\n      return this._textRenderInfo || null\r\n    }\r\n\r\n    // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\r\n    // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\r\n    get material() {\r\n      let derivedMaterial = this._derivedMaterial;\r\n      const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultMaterial.clone());\r\n      if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\r\n        derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\r\n        // dispose the derived material when its base material is disposed:\r\n        baseMaterial.addEventListener('dispose', function onDispose() {\r\n          baseMaterial.removeEventListener('dispose', onDispose);\r\n          derivedMaterial.dispose();\r\n        });\r\n      }\r\n      // If text outline is configured, render it as a preliminary draw using Three's multi-material\r\n      // feature (see GlyphsGeometry which sets up `groups` for this purpose) Doing it with multi\r\n      // materials ensures the layers are always rendered consecutively in a consistent order.\r\n      // Each layer will trigger onBeforeRender with the appropriate material.\r\n      if (this.outlineWidth || this.outlineBlur || this.outlineOffsetX || this.outlineOffsetY) {\r\n        let outlineMaterial = derivedMaterial._outlineMtl;\r\n        if (!outlineMaterial) {\r\n          outlineMaterial = derivedMaterial._outlineMtl = Object.create(derivedMaterial, {\r\n            id: {value: derivedMaterial.id + 0.1}\r\n          });\r\n          outlineMaterial.isTextOutlineMaterial = true;\r\n          outlineMaterial.depthWrite = false;\r\n          outlineMaterial.map = null; //???\r\n          derivedMaterial.addEventListener('dispose', function onDispose() {\r\n            derivedMaterial.removeEventListener('dispose', onDispose);\r\n            outlineMaterial.dispose();\r\n          });\r\n        }\r\n        return [\r\n          outlineMaterial,\r\n          derivedMaterial\r\n        ]\r\n      } else {\r\n        return derivedMaterial\r\n      }\r\n    }\r\n    set material(baseMaterial) {\r\n      if (baseMaterial && baseMaterial.isTroikaTextMaterial) { //prevent double-derivation\r\n        this._derivedMaterial = baseMaterial;\r\n        this._baseMaterial = baseMaterial.baseMaterial;\r\n      } else {\r\n        this._baseMaterial = baseMaterial;\r\n      }\r\n    }\r\n\r\n    get glyphGeometryDetail() {\r\n      return this.geometry.detail\r\n    }\r\n    set glyphGeometryDetail(detail) {\r\n      this.geometry.detail = detail;\r\n    }\r\n\r\n    get curveRadius() {\r\n      return this.geometry.curveRadius\r\n    }\r\n    set curveRadius(r) {\r\n      this.geometry.curveRadius = r;\r\n    }\r\n\r\n    // Create and update material for shadows upon request:\r\n    get customDepthMaterial() {\r\n      return first(this.material).getDepthMaterial()\r\n    }\r\n    get customDistanceMaterial() {\r\n      return first(this.material).getDistanceMaterial()\r\n    }\r\n\r\n    _prepareForRender(material) {\r\n      const isOutline = material.isTextOutlineMaterial;\r\n      const uniforms = material.uniforms;\r\n      const textInfo = this.textRenderInfo;\r\n      if (textInfo) {\r\n        const {sdfTexture, blockBounds} = textInfo;\r\n        uniforms.uTroikaSDFTexture.value = sdfTexture;\r\n        uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\r\n        uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\r\n        uniforms.uTroikaSDFExponent.value = textInfo.sdfExponent;\r\n        uniforms.uTroikaTotalBounds.value.fromArray(blockBounds);\r\n        uniforms.uTroikaUseGlyphColors.value = !isOutline && !!textInfo.glyphColors;\r\n\r\n        let distanceOffset = 0;\r\n        let blurRadius = 0;\r\n        let strokeWidth = 0;\r\n        let fillOpacity;\r\n        let strokeOpacity;\r\n        let strokeColor;\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n\r\n        if (isOutline) {\r\n          let {outlineWidth, outlineOffsetX, outlineOffsetY, outlineBlur, outlineOpacity} = this;\r\n          distanceOffset = this._parsePercent(outlineWidth) || 0;\r\n          blurRadius = Math.max(0, this._parsePercent(outlineBlur) || 0);\r\n          fillOpacity = outlineOpacity;\r\n          offsetX = this._parsePercent(outlineOffsetX) || 0;\r\n          offsetY = this._parsePercent(outlineOffsetY) || 0;\r\n        } else {\r\n          strokeWidth = Math.max(0, this._parsePercent(this.strokeWidth) || 0);\r\n          if (strokeWidth) {\r\n            strokeColor = this.strokeColor;\r\n            uniforms.uTroikaStrokeColor.value.set(strokeColor == null ? defaultStrokeColor : strokeColor);\r\n            strokeOpacity = this.strokeOpacity;\r\n            if (strokeOpacity == null) strokeOpacity = 1;\r\n          }\r\n          fillOpacity = this.fillOpacity;\r\n        }\r\n\r\n        uniforms.uTroikaDistanceOffset.value = distanceOffset;\r\n        uniforms.uTroikaPositionOffset.value.set(offsetX, offsetY);\r\n        uniforms.uTroikaBlurRadius.value = blurRadius;\r\n        uniforms.uTroikaStrokeWidth.value = strokeWidth;\r\n        uniforms.uTroikaStrokeOpacity.value = strokeOpacity;\r\n        uniforms.uTroikaFillOpacity.value = fillOpacity == null ? 1 : fillOpacity;\r\n        uniforms.uTroikaCurveRadius.value = this.curveRadius || 0;\r\n\r\n        let clipRect = this.clipRect;\r\n        if (clipRect && Array.isArray(clipRect) && clipRect.length === 4) {\r\n          uniforms.uTroikaClipRect.value.fromArray(clipRect);\r\n        } else {\r\n          // no clipping - choose a finite rect that shouldn't ever be reached by overflowing glyphs or outlines\r\n          const pad = (this.fontSize || 0.1) * 100;\r\n          uniforms.uTroikaClipRect.value.set(\r\n            blockBounds[0] - pad,\r\n            blockBounds[1] - pad,\r\n            blockBounds[2] + pad,\r\n            blockBounds[3] + pad\r\n          );\r\n        }\r\n        this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\r\n      }\r\n      uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\r\n      material.polygonOffset = !!this.depthOffset;\r\n      material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\r\n\r\n      // Shortcut for setting material color via `color` prop on the mesh; this is\r\n      // applied only to the derived material to avoid mutating a shared base material.\r\n      const color = isOutline ? (this.outlineColor || 0) : this.color;\r\n\r\n      if (color == null) {\r\n        delete material.color; //inherit from base\r\n      } else {\r\n        const colorObj = material.hasOwnProperty('color') ? material.color : (material.color = new Color());\r\n        if (color !== colorObj._input || typeof color === 'object') {\r\n          colorObj.set(colorObj._input = color);\r\n        }\r\n      }\r\n\r\n      // base orientation\r\n      let orient = this.orientation || defaultOrient;\r\n      if (orient !== material._orientation) {\r\n        let rotMat = uniforms.uTroikaOrient.value;\r\n        orient = orient.replace(/[^-+xyz]/g, '');\r\n        let match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\r\n        if (match) {\r\n          let [, hSign, hAxis, vSign, vAxis] = match;\r\n          tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\r\n          tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\r\n          tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\r\n          rotMat.setFromMatrix4(tempMat4);\r\n        } else {\r\n          rotMat.identity();\r\n        }\r\n        material._orientation = orient;\r\n      }\r\n    }\r\n\r\n    _parsePercent(value) {\r\n      if (typeof value === 'string') {\r\n        let match = value.match(/^(-?[\\d.]+)%$/);\r\n        let pct = match ? parseFloat(match[1]) : NaN;\r\n        value = (isNaN(pct) ? 0 : pct / 100) * this.fontSize;\r\n      }\r\n      return value\r\n    }\r\n\r\n    /**\r\n     * Translate a point in local space to an x/y in the text plane.\r\n     */\r\n    localPositionToTextCoords(position, target = new Vector2()) {\r\n      target.copy(position); //simple non-curved case is 1:1\r\n      const r = this.curveRadius;\r\n      if (r) { //flatten the curve\r\n        target.x = Math.atan2(position.x, Math.abs(r) - Math.abs(position.z)) * Math.abs(r);\r\n      }\r\n      return target\r\n    }\r\n\r\n    /**\r\n     * Translate a point in world space to an x/y in the text plane.\r\n     */\r\n    worldPositionToTextCoords(position, target = new Vector2()) {\r\n      tempVec3a.copy(position);\r\n      return this.localPositionToTextCoords(this.worldToLocal(tempVec3a), target)\r\n    }\r\n\r\n    /**\r\n     * @override Custom raycasting to test against the whole text block's max rectangular bounds\r\n     * TODO is there any reason to make this more granular, like within individual line or glyph rects?\r\n     */\r\n    raycast(raycaster, intersects) {\r\n      const {textRenderInfo, curveRadius} = this;\r\n      if (textRenderInfo) {\r\n        const bounds = textRenderInfo.blockBounds;\r\n        const raycastMesh = curveRadius ? getCurvedRaycastMesh() : getFlatRaycastMesh();\r\n        const geom = raycastMesh.geometry;\r\n        const {position, uv} = geom.attributes;\r\n        for (let i = 0; i < uv.count; i++) {\r\n          let x = bounds[0] + (uv.getX(i) * (bounds[2] - bounds[0]));\r\n          const y = bounds[1] + (uv.getY(i) * (bounds[3] - bounds[1]));\r\n          let z = 0;\r\n          if (curveRadius) {\r\n            z = curveRadius - Math.cos(x / curveRadius) * curveRadius;\r\n            x = Math.sin(x / curveRadius) * curveRadius;\r\n          }\r\n          position.setXYZ(i, x, y, z);\r\n        }\r\n        geom.boundingSphere = this.geometry.boundingSphere;\r\n        geom.boundingBox = this.geometry.boundingBox;\r\n        raycastMesh.matrixWorld = this.matrixWorld;\r\n        raycastMesh.material.side = this.material.side;\r\n        tempArray.length = 0;\r\n        raycastMesh.raycast(raycaster, tempArray);\r\n        for (let i = 0; i < tempArray.length; i++) {\r\n          tempArray[i].object = this;\r\n          intersects.push(tempArray[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    copy(source) {\r\n      // Prevent copying the geometry reference so we don't end up sharing attributes between instances\r\n      const geom = this.geometry;\r\n      super.copy(source);\r\n      this.geometry = geom;\r\n\r\n      COPYABLE_PROPS.forEach(prop => {\r\n        this[prop] = source[prop];\r\n      });\r\n      return this\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this)\r\n    }\r\n  }\r\n\r\n\r\n  // Create setters for properties that affect text layout:\r\n  SYNCABLE_PROPS.forEach(prop => {\r\n    const privateKey = '_private_' + prop;\r\n    Object.defineProperty(Text.prototype, prop, {\r\n      get() {\r\n        return this[privateKey]\r\n      },\r\n      set(value) {\r\n        if (value !== this[privateKey]) {\r\n          this[privateKey] = value;\r\n          this._needsSync = true;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n\r\n  // Deprecation handler for `anchor` array:\r\n  let deprMsgShown = false;\r\n  Object.defineProperty(Text.prototype, 'anchor', {\r\n    get() {\r\n      return this._deprecated_anchor\r\n    },\r\n    set(val) {\r\n      this._deprecated_anchor = val;\r\n      if (!deprMsgShown) {\r\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\r\n        deprMsgShown = true;\r\n      }\r\n      if (Array.isArray(val)) {\r\n        this.anchorX = `${(+val[0] || 0) * 100}%`;\r\n        this.anchorY = `${(+val[1] || 0) * 100}%`;\r\n      } else {\r\n        this.anchorX = this.anchorY = 0;\r\n      }\r\n    }\r\n  });\r\n\r\n  return Text\r\n})();\r\n\r\n//=== Utility functions for dealing with carets and selection ranges ===//\r\n\r\n/**\r\n * @typedef {object} TextCaret\r\n * @property {number} x - x position of the caret\r\n * @property {number} y - y position of the caret's bottom\r\n * @property {number} height - height of the caret\r\n * @property {number} charIndex - the index in the original input string of this caret's target\r\n *   character; the caret will be for the position _before_ that character.\r\n */\r\n\r\n/**\r\n * Given a local x/y coordinate in the text block plane, find the nearest caret position.\r\n * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {TextCaret | null}\r\n */\r\nfunction getCaretAtPoint(textRenderInfo, x, y) {\r\n  let closestCaret = null;\r\n  const {caretHeight} = textRenderInfo;\r\n  const caretsByRow = groupCaretsByRow(textRenderInfo);\r\n\r\n  // Find nearest row by y first\r\n  let closestRowY = Infinity;\r\n  caretsByRow.forEach((carets, rowY) => {\r\n    if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\r\n      closestRowY = rowY;\r\n    }\r\n  });\r\n\r\n  // Then find closest caret by x within that row\r\n  caretsByRow.get(closestRowY).forEach(caret => {\r\n    if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\r\n      closestCaret = caret;\r\n    }\r\n  });\r\n  return closestCaret\r\n}\r\n\r\n\r\nconst _rectsCache = new WeakMap();\r\n\r\n/**\r\n * Given start and end character indexes, return a list of rectangles covering all the\r\n * characters within that selection.\r\n * @param {TroikaTextRenderInfo} textRenderInfo\r\n * @param {number} start - index of the first char in the selection\r\n * @param {number} end - index of the first char after the selection\r\n * @return {Array<{left, top, right, bottom}> | null}\r\n */\r\nfunction getSelectionRects(textRenderInfo, start, end) {\r\n  let rects;\r\n  if (textRenderInfo) {\r\n    // Check cache - textRenderInfo is frozen so it's safe to cache based on it\r\n    let prevResult = _rectsCache.get(textRenderInfo);\r\n    if (prevResult && prevResult.start === start && prevResult.end === end) {\r\n      return prevResult.rects\r\n    }\r\n\r\n    const {caretPositions, caretHeight} = textRenderInfo;\r\n\r\n    // Normalize\r\n    if (end < start) {\r\n      const s = start;\r\n      start = end;\r\n      end = s;\r\n    }\r\n    start = Math.max(start, 0);\r\n    end = Math.min(end, caretPositions.length + 1);\r\n\r\n    // Build list of rects, expanding the current rect for all characters in a run and starting\r\n    // a new rect whenever reaching a new line or a new bidi direction\r\n    rects = [];\r\n    let currentRect = null;\r\n    for (let i = start; i < end; i++) {\r\n      const x1 = caretPositions[i * 3];\r\n      const x2 = caretPositions[i * 3 + 1];\r\n      const left = Math.min(x1, x2);\r\n      const right = Math.max(x1, x2);\r\n      const bottom = caretPositions[i * 3 + 2];\r\n      if (!currentRect || bottom !== currentRect.bottom || left > currentRect.right || right < currentRect.left) {\r\n        currentRect = {\r\n          left: Infinity,\r\n          right: -Infinity,\r\n          bottom: bottom,\r\n          top: bottom + caretHeight\r\n        };\r\n        rects.push(currentRect);\r\n      }\r\n      currentRect.left = Math.min(left, currentRect.left);\r\n      currentRect.right = Math.max(right, currentRect.right);\r\n    }\r\n\r\n    // Merge any overlapping rects, e.g. those formed by adjacent bidi runs\r\n    rects.sort((a, b) => b.bottom - a.bottom || a.left - b.left);\r\n    for (let i = rects.length - 1; i-- > 0;) {\r\n      const rectA = rects[i];\r\n      const rectB = rects[i + 1];\r\n      if (rectA.bottom === rectB.bottom && rectA.left <= rectB.right && rectA.right >= rectB.left) {\r\n        rectB.left = Math.min(rectB.left, rectA.left);\r\n        rectB.right = Math.max(rectB.right, rectA.right);\r\n        rects.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    _rectsCache.set(textRenderInfo, {start, end, rects});\r\n  }\r\n  return rects\r\n}\r\n\r\nconst _caretsByRowCache = new WeakMap();\r\n\r\nfunction groupCaretsByRow(textRenderInfo) {\r\n  // textRenderInfo is frozen so it's safe to cache based on it\r\n  let caretsByRow = _caretsByRowCache.get(textRenderInfo);\r\n  if (!caretsByRow) {\r\n    const {caretPositions, caretHeight} = textRenderInfo;\r\n    caretsByRow = new Map();\r\n    for (let i = 0; i < caretPositions.length; i += 3) {\r\n      const rowY = caretPositions[i + 2];\r\n      let rowCarets = caretsByRow.get(rowY);\r\n      if (!rowCarets) {\r\n        caretsByRow.set(rowY, rowCarets = []);\r\n      }\r\n      rowCarets.push({\r\n        x: caretPositions[i],\r\n        y: rowY,\r\n        height: caretHeight,\r\n        charIndex: i / 3\r\n      });\r\n      // Add one more caret after the final char\r\n      if (i + 3 >= caretPositions.length) {\r\n        rowCarets.push({\r\n          x: caretPositions[i + 1],\r\n          y: rowY,\r\n          height: caretHeight,\r\n          charIndex: i / 3 + 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n  _caretsByRowCache.set(textRenderInfo, caretsByRow);\r\n  return caretsByRow\r\n}\r\n\r\nexport { GlyphsGeometry, Text, configureTextBuilder, createTextDerivedMaterial, dumpSDFTextures, getCaretAtPoint, getSelectionRects, preloadFont, typesetterWorkerModule };\r\n", "/**\r\n * Lightweight thenable implementation that is entirely self-contained within a single\r\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\r\n *\r\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\r\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\r\n *\r\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\r\n * have the same constructor signature and does not expose a `catch` method or the static\r\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\r\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\r\n * in a native-or-polyfilled Promise first.\r\n *\r\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\r\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\r\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\r\n * implementation I've found. And also, exercises like this are challenging and fun.)\r\n */\r\nfunction BespokeThenable() {\r\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\r\n  var queue = [];\r\n  var value;\r\n  var scheduled = 0;\r\n  var completeCalled = 0;\r\n\r\n  function then(onResolve, onReject) {\r\n    var nextThenable = BespokeThenable();\r\n\r\n    function handleNext() {\r\n      var cb = state > 0 ? onResolve : onReject;\r\n      if (isFn(cb)) {\r\n        try {\r\n          var result = cb(value);\r\n          if (result === nextThenable) {\r\n            recursiveError();\r\n          }\r\n          var resultThen = getThenableThen(result);\r\n          if (resultThen) {\r\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\r\n          } else {\r\n            nextThenable.resolve(result);\r\n          }\r\n        } catch (err) {\r\n          nextThenable.reject(err);\r\n        }\r\n      } else {\r\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\r\n      }\r\n    }\r\n\r\n    queue.push(handleNext);\r\n    if (state) {\r\n      scheduleQueueFlush();\r\n    }\r\n    return nextThenable\r\n  }\r\n\r\n  var resolve = oneTime(function (val) {\r\n    if (!completeCalled) {\r\n      complete(1, val);\r\n    }\r\n  });\r\n\r\n  var reject = oneTime(function (reason) {\r\n    if (!completeCalled) {\r\n      complete(-1, reason);\r\n    }\r\n  });\r\n\r\n  function complete(st, val) {\r\n    completeCalled++;\r\n    var ignoreThrow = 0;\r\n    try {\r\n      if (val === thenableObj) {\r\n        recursiveError();\r\n      }\r\n      var valThen = st > 0 && getThenableThen(val);\r\n      if (valThen) {\r\n        valThen.call(val, oneTime(function (v) {\r\n          ignoreThrow++;\r\n          complete(1, v);\r\n        }), oneTime(function (v) {\r\n          ignoreThrow++;\r\n          complete(-1, v);\r\n        }));\r\n      } else {\r\n        state = st;\r\n        value = val;\r\n        scheduleQueueFlush();\r\n      }\r\n    } catch(e) {\r\n      if (!state && !ignoreThrow) {\r\n        complete(-1, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  function scheduleQueueFlush() {\r\n    if (!scheduled) {\r\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\r\n      scheduled = 1;\r\n    }\r\n  }\r\n\r\n  function flushQueue() {\r\n    var q = queue;\r\n    scheduled = 0;\r\n    queue = [];\r\n    q.forEach(callIt);\r\n  }\r\n\r\n  function callIt(fn) {\r\n    fn();\r\n  }\r\n\r\n  function getThenableThen(val) {\r\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\r\n    return isFn(valThen) && valThen\r\n  }\r\n\r\n  function oneTime(fn) {\r\n    var called = 0;\r\n    return function() {\r\n      var args = [], len = arguments.length;\r\n      while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n      if (!called++) {\r\n        fn.apply(this, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  function recursiveError() {\r\n    throw new TypeError('Chaining cycle detected')\r\n  }\r\n\r\n  var isFn = function (v) { return typeof v === 'function'; };\r\n\r\n  var thenableObj = {\r\n    then: then,\r\n    resolve: resolve,\r\n    reject: reject\r\n  };\r\n  return thenableObj\r\n}\r\n\r\n\r\n/**\r\n * Thenable implementation that uses a native Promise under the covers. This implementation\r\n * is preferred if Promise is available, for better performance and dev tools integration.\r\n * @constructor\r\n */\r\nfunction NativePromiseThenable() {\r\n  var resolve, reject;\r\n  var promise = new Promise(function (res, rej) {\r\n    resolve = res;\r\n    reject = rej;\r\n  });\r\n  return {\r\n    then: promise.then.bind(promise),\r\n    resolve: resolve,\r\n    reject: reject\r\n  }\r\n}\r\n\r\n/**\r\n * Promise.all() impl:\r\n */\r\nBespokeThenable.all = NativePromiseThenable.all = function(items) {\r\n  var resultCount = 0;\r\n  var results = [];\r\n  var out = DefaultThenable();\r\n  if (items.length === 0) {\r\n    out.resolve([]);\r\n  } else {\r\n    items.forEach(function (item, i) {\r\n      var itemThenable = DefaultThenable();\r\n      itemThenable.resolve(item);\r\n      itemThenable.then(function (res) {\r\n        resultCount++;\r\n        results[i] = res;\r\n        if (resultCount === items.length) {\r\n          out.resolve(results);\r\n        }\r\n      }, out.reject);\r\n    });\r\n  }\r\n  return out\r\n};\r\n\r\n\r\n/**\r\n * Choose the best Thenable implementation and export it as the default.\r\n */\r\nvar DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\r\n\r\n/**\r\n * Main content for the worker that handles the loading and execution of\r\n * modules within it.\r\n */\r\nfunction workerBootstrap() {\r\n  var modules = Object.create(null);\r\n\r\n  // Handle messages for registering a module\r\n  function registerModule(ref, callback) {\r\n    var id = ref.id;\r\n    var name = ref.name;\r\n    var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\r\n    var init = ref.init; if ( init === void 0 ) init = function(){};\r\n    var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\r\n\r\n    // Only register once\r\n    if (modules[id]) { return }\r\n\r\n    try {\r\n      // If any dependencies are modules, ensure they're registered and grab their value\r\n      dependencies = dependencies.map(function (dep) {\r\n        if (dep && dep.isWorkerModule) {\r\n          registerModule(dep, function (depResult) {\r\n            if (depResult instanceof Error) { throw depResult }\r\n          });\r\n          dep = modules[dep.id].value;\r\n        }\r\n        return dep\r\n      });\r\n\r\n      // Rehydrate functions\r\n      init = rehydrate((\"<\" + name + \">.init\"), init);\r\n      if (getTransferables) {\r\n        getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\r\n      }\r\n\r\n      // Initialize the module and store its value\r\n      var value = null;\r\n      if (typeof init === 'function') {\r\n        value = init.apply(void 0, dependencies);\r\n      } else {\r\n        console.error('worker module init function failed to rehydrate');\r\n      }\r\n      modules[id] = {\r\n        id: id,\r\n        value: value,\r\n        getTransferables: getTransferables\r\n      };\r\n      callback(value);\r\n    } catch(err) {\r\n      if (!(err && err.noLog)) {\r\n        console.error(err);\r\n      }\r\n      callback(err);\r\n    }\r\n  }\r\n\r\n  // Handle messages for calling a registered module's result function\r\n  function callModule(ref, callback) {\r\n    var ref$1;\r\n\r\n    var id = ref.id;\r\n    var args = ref.args;\r\n    if (!modules[id] || typeof modules[id].value !== 'function') {\r\n      callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\r\n    }\r\n    try {\r\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\r\n      if (result && typeof result.then === 'function') {\r\n        result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\r\n      } else {\r\n        handleResult(result);\r\n      }\r\n    } catch(err) {\r\n      callback(err);\r\n    }\r\n    function handleResult(result) {\r\n      try {\r\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\r\n        if (!tx || !Array.isArray(tx) || !tx.length) {\r\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\r\n        }\r\n        callback(result, tx);\r\n      } catch(err) {\r\n        console.error(err);\r\n        callback(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  function rehydrate(name, str) {\r\n    var result = void 0;\r\n    self.troikaDefine = function (r) { return result = r; };\r\n    var url = URL.createObjectURL(\r\n      new Blob(\r\n        [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\r\n        {type: 'application/javascript'}\r\n      )\r\n    );\r\n    try {\r\n      importScripts(url);\r\n    } catch(err) {\r\n      console.error(err);\r\n    }\r\n    URL.revokeObjectURL(url);\r\n    delete self.troikaDefine;\r\n    return result\r\n  }\r\n\r\n  // Handler for all messages within the worker\r\n  self.addEventListener('message', function (e) {\r\n    var ref = e.data;\r\n    var messageId = ref.messageId;\r\n    var action = ref.action;\r\n    var data = ref.data;\r\n    try {\r\n      // Module registration\r\n      if (action === 'registerModule') {\r\n        registerModule(data, function (result) {\r\n          if (result instanceof Error) {\r\n            postMessage({\r\n              messageId: messageId,\r\n              success: false,\r\n              error: result.message\r\n            });\r\n          } else {\r\n            postMessage({\r\n              messageId: messageId,\r\n              success: true,\r\n              result: {isCallable: typeof result === 'function'}\r\n            });\r\n          }\r\n        });\r\n      }\r\n      // Invocation\r\n      if (action === 'callModule') {\r\n        callModule(data, function (result, transferables) {\r\n          if (result instanceof Error) {\r\n            postMessage({\r\n              messageId: messageId,\r\n              success: false,\r\n              error: result.message\r\n            });\r\n          } else {\r\n            postMessage({\r\n              messageId: messageId,\r\n              success: true,\r\n              result: result\r\n            }, transferables || undefined);\r\n          }\r\n        });\r\n      }\r\n    } catch(err) {\r\n      postMessage({\r\n        messageId: messageId,\r\n        success: false,\r\n        error: err.stack\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\r\n * thread, for when the execution environment doesn't support web workers or they\r\n * are disallowed due to e.g. CSP security restrictions.\r\n */\r\nfunction defineMainThreadModule(options) {\r\n  var moduleFunc = function() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return moduleFunc._getInitResult().then(function (initResult) {\r\n      if (typeof initResult === 'function') {\r\n        return initResult.apply(void 0, args)\r\n      } else {\r\n        throw new Error('Worker module function was called but `init` did not return a callable function')\r\n      }\r\n    })\r\n  };\r\n  moduleFunc._getInitResult = function() {\r\n    // We can ignore getTransferables in main thread. TODO workerId?\r\n    var dependencies = options.dependencies;\r\n    var init = options.init;\r\n\r\n    // Resolve dependencies\r\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\r\n    ) : [];\r\n\r\n    // Invoke init with the resolved dependencies\r\n    var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\r\n      return init.apply(null, deps)\r\n    });\r\n\r\n    // Cache the resolved promise for subsequent calls\r\n    moduleFunc._getInitResult = function () { return initThenable; };\r\n\r\n    return initThenable\r\n  };\r\n  return moduleFunc\r\n}\r\n\r\nvar supportsWorkers = function () {\r\n  var supported = false;\r\n\r\n  // Only attempt worker initialization in browsers; elsewhere it would just be\r\n  // noise e.g. loading into a Node environment for SSR.\r\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\r\n    try {\r\n      // TODO additional checks for things like importScripts within the worker?\r\n      //  Would need to be an async check.\r\n      var worker = new Worker(\r\n        URL.createObjectURL(new Blob([''], { type: 'application/javascript' }))\r\n      );\r\n      worker.terminate();\r\n      supported = true;\r\n    } catch (err) {\r\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ; else {\r\n        console.log(\r\n          (\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\")\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Cached result\r\n  supportsWorkers = function () { return supported; };\r\n  return supported\r\n};\r\n\r\nvar _workerModuleId = 0;\r\nvar _messageId = 0;\r\nvar _allowInitAsString = false;\r\nvar workers = Object.create(null);\r\nvar registeredModules = Object.create(null); //workerId -> Set<unregisterFn>\r\nvar openRequests = Object.create(null);\r\n\r\n\r\n/**\r\n * Define a module of code that will be executed with a web worker. This provides a simple\r\n * interface for moving chunks of logic off the main thread, and managing their dependencies\r\n * among one another.\r\n *\r\n * @param {object} options\r\n * @param {function} options.init\r\n * @param {array} [options.dependencies]\r\n * @param {function} [options.getTransferables]\r\n * @param {string} [options.name]\r\n * @param {string} [options.workerId]\r\n * @return {function(...[*]): {then}}\r\n */\r\nfunction defineWorkerModule(options) {\r\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\r\n    throw new Error('requires `options.init` function')\r\n  }\r\n  var dependencies = options.dependencies;\r\n  var init = options.init;\r\n  var getTransferables = options.getTransferables;\r\n  var workerId = options.workerId;\r\n\r\n  if (!supportsWorkers()) {\r\n    return defineMainThreadModule(options)\r\n  }\r\n\r\n  if (workerId == null) {\r\n    workerId = '#default';\r\n  }\r\n  var id = \"workerModule\" + (++_workerModuleId);\r\n  var name = options.name || id;\r\n  var registrationThenable = null;\r\n\r\n  dependencies = dependencies && dependencies.map(function (dep) {\r\n    // Wrap raw functions as worker modules with no dependencies\r\n    if (typeof dep === 'function' && !dep.workerModuleData) {\r\n      _allowInitAsString = true;\r\n      dep = defineWorkerModule({\r\n        workerId: workerId,\r\n        name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\r\n        init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\r\n      });\r\n      _allowInitAsString = false;\r\n    }\r\n    // Grab postable data for worker modules\r\n    if (dep && dep.workerModuleData) {\r\n      dep = dep.workerModuleData;\r\n    }\r\n    return dep\r\n  });\r\n\r\n  function moduleFunc() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    // Register this module if needed\r\n    if (!registrationThenable) {\r\n      registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\r\n      var unregister = function () {\r\n        registrationThenable = null;\r\n        registeredModules[workerId].delete(unregister);\r\n      }\r\n      ;(registeredModules[workerId] || (registeredModules[workerId] = new Set())).add(unregister);\r\n    }\r\n\r\n    // Invoke the module, returning a thenable\r\n    return registrationThenable.then(function (ref) {\r\n      var isCallable = ref.isCallable;\r\n\r\n      if (isCallable) {\r\n        return callWorker(workerId,'callModule', {id: id, args: args})\r\n      } else {\r\n        throw new Error('Worker module function was called but `init` did not return a callable function')\r\n      }\r\n    })\r\n  }\r\n  moduleFunc.workerModuleData = {\r\n    isWorkerModule: true,\r\n    id: id,\r\n    name: name,\r\n    dependencies: dependencies,\r\n    init: stringifyFunction(init),\r\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\r\n  };\r\n  return moduleFunc\r\n}\r\n\r\n/**\r\n * Terminate an active Worker by a workerId that was passed to defineWorkerModule.\r\n * This only terminates the Worker itself; the worker module will remain available\r\n * and if you call it again its Worker will be respawned.\r\n * @param {string} workerId\r\n */\r\nfunction terminateWorker(workerId) {\r\n  // Unregister all modules that were registered in that worker\r\n  if (registeredModules[workerId]) {\r\n    registeredModules[workerId].forEach(function (unregister) {\r\n      unregister();\r\n    });\r\n  }\r\n  // Terminate the Worker object\r\n  if (workers[workerId]) {\r\n    workers[workerId].terminate();\r\n    delete workers[workerId];\r\n  }\r\n}\r\n\r\n/**\r\n * Stringifies a function into a form that can be deserialized in the worker\r\n * @param fn\r\n */\r\nfunction stringifyFunction(fn) {\r\n  var str = fn.toString();\r\n  // If it was defined in object method/property format, it needs to be modified\r\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\r\n    str = 'function ' + str;\r\n  }\r\n  return str\r\n}\r\n\r\n\r\nfunction getWorker(workerId) {\r\n  var worker = workers[workerId];\r\n  if (!worker) {\r\n    // Bootstrap the worker's content\r\n    var bootstrap = stringifyFunction(workerBootstrap);\r\n\r\n    // Create the worker from the bootstrap function content\r\n    worker = workers[workerId] = new Worker(\r\n      URL.createObjectURL(\r\n        new Blob(\r\n          [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\r\n          {type: 'application/javascript'}\r\n        )\r\n      )\r\n    );\r\n\r\n    // Single handler for response messages from the worker\r\n    worker.onmessage = function (e) {\r\n      var response = e.data;\r\n      var msgId = response.messageId;\r\n      var callback = openRequests[msgId];\r\n      if (!callback) {\r\n        throw new Error('WorkerModule response with empty or unknown messageId')\r\n      }\r\n      delete openRequests[msgId];\r\n      callback(response);\r\n    };\r\n  }\r\n  return worker\r\n}\r\n\r\n// Issue a call to the worker with a callback to handle the response\r\nfunction callWorker(workerId, action, data) {\r\n  var thenable = DefaultThenable();\r\n  var messageId = ++_messageId;\r\n  openRequests[messageId] = function (response) {\r\n    if (response.success) {\r\n      thenable.resolve(response.result);\r\n    } else {\r\n      thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\r\n    }\r\n  };\r\n  getWorker(workerId).postMessage({\r\n    messageId: messageId,\r\n    action: action,\r\n    data: data\r\n  });\r\n  return thenable\r\n}\r\n\r\n/**\r\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\r\n * module needs Thenable as a dependency, it's better to pass this module rather than\r\n * the raw function in its `dependencies` array so it only gets registered once.\r\n */\r\nvar ThenableWorkerModule = /*#__PURE__*/defineWorkerModule({\r\n  name: 'Thenable',\r\n  dependencies: [DefaultThenable],\r\n  init: function(Thenable) {\r\n    return Thenable\r\n  }\r\n});\r\n\r\nexport { DefaultThenable as Thenable, ThenableWorkerModule, defineWorkerModule, stringifyFunction, terminateWorker };\r\n", "function SDFGenerator() {\r\nvar exports = (function (exports) {\r\n\r\n  /**\r\n   * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\r\n   */\r\n  function pointOnQuadraticBezier (x0, y0, x1, y1, x2, y2, t, pointOut) {\r\n    var t2 = 1 - t;\r\n    pointOut.x = t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2;\r\n    pointOut.y = t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2;\r\n  }\r\n\r\n  /**\r\n   * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\r\n   */\r\n  function pointOnCubicBezier (x0, y0, x1, y1, x2, y2, x3, y3, t, pointOut) {\r\n    var t2 = 1 - t;\r\n    pointOut.x = t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3;\r\n    pointOut.y = t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3;\r\n  }\r\n\r\n  /**\r\n   * Parse a path string into its constituent line/curve commands, invoking a callback for each.\r\n   * @param {string} pathString - An SVG-like path string to parse; should only contain commands: M/L/Q/C/Z\r\n   * @param {function(\r\n   *   command: 'L'|'Q'|'C',\r\n   *   startX: number,\r\n   *   startY: number,\r\n   *   endX: number,\r\n   *   endY: number,\r\n   *   ctrl1X?: number,\r\n   *   ctrl1Y?: number,\r\n   *   ctrl2X?: number,\r\n   *   ctrl2Y?: number\r\n   * )} commandCallback - A callback function that will be called once for each parsed path command, passing the\r\n   *                      command identifier (only L/Q/C commands) and its numeric arguments.\r\n   */\r\n  function forEachPathCommand(pathString, commandCallback) {\r\n    var segmentRE = /([MLQCZ])([^MLQCZ]*)/g;\r\n    var match, firstX, firstY, prevX, prevY;\r\n    while ((match = segmentRE.exec(pathString))) {\r\n      var args = match[2]\r\n        .replace(/^\\s*|\\s*$/g, '')\r\n        .split(/[,\\s]+/)\r\n        .map(function (v) { return parseFloat(v); });\r\n      switch (match[1]) {\r\n        case 'M':\r\n          prevX = firstX = args[0];\r\n          prevY = firstY = args[1];\r\n          break\r\n        case 'L':\r\n          if (args[0] !== prevX || args[1] !== prevY) { // yup, some fonts have zero-length line commands\r\n            commandCallback('L', prevX, prevY, (prevX = args[0]), (prevY = args[1]));\r\n          }\r\n          break\r\n        case 'Q': {\r\n          commandCallback('Q', prevX, prevY, (prevX = args[2]), (prevY = args[3]), args[0], args[1]);\r\n          break\r\n        }\r\n        case 'C': {\r\n          commandCallback('C', prevX, prevY, (prevX = args[4]), (prevY = args[5]), args[0], args[1], args[2], args[3]);\r\n          break\r\n        }\r\n        case 'Z':\r\n          if (prevX !== firstX || prevY !== firstY) {\r\n            commandCallback('L', prevX, prevY, firstX, firstY);\r\n          }\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert a path string to a series of straight line segments\r\n   * @param {string} pathString - An SVG-like path string to parse; should only contain commands: M/L/Q/C/Z\r\n   * @param {function(x1:number, y1:number, x2:number, y2:number)} segmentCallback - A callback\r\n   *        function that will be called once for every line segment\r\n   * @param {number} [curvePoints] - How many straight line segments to use when approximating a\r\n   *        bezier curve in the path. Defaults to 16.\r\n   */\r\n  function pathToLineSegments (pathString, segmentCallback, curvePoints) {\r\n    if ( curvePoints === void 0 ) curvePoints = 16;\r\n\r\n    var tempPoint = { x: 0, y: 0 };\r\n    forEachPathCommand(pathString, function (command, startX, startY, endX, endY, ctrl1X, ctrl1Y, ctrl2X, ctrl2Y) {\r\n      switch (command) {\r\n        case 'L':\r\n          segmentCallback(startX, startY, endX, endY);\r\n          break\r\n        case 'Q': {\r\n          var prevCurveX = startX;\r\n          var prevCurveY = startY;\r\n          for (var i = 1; i < curvePoints; i++) {\r\n            pointOnQuadraticBezier(\r\n              startX, startY,\r\n              ctrl1X, ctrl1Y,\r\n              endX, endY,\r\n              i / (curvePoints - 1),\r\n              tempPoint\r\n            );\r\n            segmentCallback(prevCurveX, prevCurveY, tempPoint.x, tempPoint.y);\r\n            prevCurveX = tempPoint.x;\r\n            prevCurveY = tempPoint.y;\r\n          }\r\n          break\r\n        }\r\n        case 'C': {\r\n          var prevCurveX$1 = startX;\r\n          var prevCurveY$1 = startY;\r\n          for (var i$1 = 1; i$1 < curvePoints; i$1++) {\r\n            pointOnCubicBezier(\r\n              startX, startY,\r\n              ctrl1X, ctrl1Y,\r\n              ctrl2X, ctrl2Y,\r\n              endX, endY,\r\n              i$1 / (curvePoints - 1),\r\n              tempPoint\r\n            );\r\n            segmentCallback(prevCurveX$1, prevCurveY$1, tempPoint.x, tempPoint.y);\r\n            prevCurveX$1 = tempPoint.x;\r\n            prevCurveY$1 = tempPoint.y;\r\n          }\r\n          break\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  var viewportQuadVertex = \"precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}\";\r\n\r\n  var copyTexFragment = \"precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}\";\r\n\r\n  var cache = new WeakMap();\r\n\r\n  var glContextParams = {\r\n    premultipliedAlpha: false,\r\n    preserveDrawingBuffer: true,\r\n    antialias: false,\r\n    depth: false,\r\n  };\r\n\r\n  /**\r\n   * This is a little helper library for WebGL. It assists with state management for a GL context.\r\n   * It's pretty tightly wrapped to the needs of this package, not very general-purpose.\r\n   *\r\n   * @param { WebGLRenderingContext | HTMLCanvasElement | OffscreenCanvas } glOrCanvas - the GL context to wrap\r\n   * @param { ({gl, getExtension, withProgram, withTexture, withTextureFramebuffer, handleContextLoss}) => void } callback\r\n   */\r\n  function withWebGLContext (glOrCanvas, callback) {\r\n    var gl = glOrCanvas.getContext ? glOrCanvas.getContext('webgl', glContextParams) : glOrCanvas;\r\n    var wrapper = cache.get(gl);\r\n    if (!wrapper) {\r\n      var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\r\n      var extensions = {};\r\n      var programs = {};\r\n      var textures = {};\r\n      var textureUnit = -1;\r\n      var framebufferStack = [];\r\n\r\n      gl.canvas.addEventListener('webglcontextlost', function (e) {\r\n        handleContextLoss();\r\n        e.preventDefault();\r\n      }, false);\r\n\r\n      function getExtension (name) {\r\n        var ext = extensions[name];\r\n        if (!ext) {\r\n          ext = extensions[name] = gl.getExtension(name);\r\n          if (!ext) {\r\n            throw new Error((name + \" not supported\"))\r\n          }\r\n        }\r\n        return ext\r\n      }\r\n\r\n      function compileShader (src, type) {\r\n        var shader = gl.createShader(type);\r\n        gl.shaderSource(shader, src);\r\n        gl.compileShader(shader);\r\n        // const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\r\n        // if (!status && !gl.isContextLost()) {\r\n        //   throw new Error(gl.getShaderInfoLog(shader).trim())\r\n        // }\r\n        return shader\r\n      }\r\n\r\n      function withProgram (name, vert, frag, func) {\r\n        if (!programs[name]) {\r\n          var attributes = {};\r\n          var uniforms = {};\r\n          var program = gl.createProgram();\r\n          gl.attachShader(program, compileShader(vert, gl.VERTEX_SHADER));\r\n          gl.attachShader(program, compileShader(frag, gl.FRAGMENT_SHADER));\r\n          gl.linkProgram(program);\r\n\r\n          programs[name] = {\r\n            program: program,\r\n            transaction: function transaction (func) {\r\n              gl.useProgram(program);\r\n              func({\r\n                setUniform: function setUniform (type, name) {\r\n                  var values = [], len = arguments.length - 2;\r\n                  while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];\r\n\r\n                  var uniformLoc = uniforms[name] || (uniforms[name] = gl.getUniformLocation(program, name));\r\n                  gl[(\"uniform\" + type)].apply(gl, [ uniformLoc ].concat( values ));\r\n                },\r\n\r\n                setAttribute: function setAttribute (name, size, usage, instancingDivisor, data) {\r\n                  var attr = attributes[name];\r\n                  if (!attr) {\r\n                    attr = attributes[name] = {\r\n                      buf: gl.createBuffer(), // TODO should we destroy our buffers?\r\n                      loc: gl.getAttribLocation(program, name),\r\n                      data: null\r\n                    };\r\n                  }\r\n                  gl.bindBuffer(gl.ARRAY_BUFFER, attr.buf);\r\n                  gl.vertexAttribPointer(attr.loc, size, gl.FLOAT, false, 0, 0);\r\n                  gl.enableVertexAttribArray(attr.loc);\r\n                  if (isWebGL2) {\r\n                    gl.vertexAttribDivisor(attr.loc, instancingDivisor);\r\n                  } else {\r\n                    getExtension('ANGLE_instanced_arrays').vertexAttribDivisorANGLE(attr.loc, instancingDivisor);\r\n                  }\r\n                  if (data !== attr.data) {\r\n                    gl.bufferData(gl.ARRAY_BUFFER, data, usage);\r\n                    attr.data = data;\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          };\r\n        }\r\n\r\n        programs[name].transaction(func);\r\n      }\r\n\r\n      function withTexture (name, func) {\r\n        textureUnit++;\r\n        try {\r\n          gl.activeTexture(gl.TEXTURE0 + textureUnit);\r\n          var texture = textures[name];\r\n          if (!texture) {\r\n            texture = textures[name] = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n          }\r\n          gl.bindTexture(gl.TEXTURE_2D, texture);\r\n          func(texture, textureUnit);\r\n        } finally {\r\n          textureUnit--;\r\n        }\r\n      }\r\n\r\n      function withTextureFramebuffer (texture, textureUnit, func) {\r\n        var framebuffer = gl.createFramebuffer();\r\n        framebufferStack.push(framebuffer);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        gl.activeTexture(gl.TEXTURE0 + textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n        try {\r\n          func(framebuffer);\r\n        } finally {\r\n          gl.deleteFramebuffer(framebuffer);\r\n          gl.bindFramebuffer(gl.FRAMEBUFFER, framebufferStack[--framebufferStack.length - 1] || null);\r\n        }\r\n      }\r\n\r\n      function handleContextLoss () {\r\n        extensions = {};\r\n        programs = {};\r\n        textures = {};\r\n        textureUnit = -1;\r\n        framebufferStack.length = 0;\r\n      }\r\n\r\n      cache.set(gl, wrapper = {\r\n        gl: gl,\r\n        isWebGL2: isWebGL2,\r\n        getExtension: getExtension,\r\n        withProgram: withProgram,\r\n        withTexture: withTexture,\r\n        withTextureFramebuffer: withTextureFramebuffer,\r\n        handleContextLoss: handleContextLoss,\r\n      });\r\n    }\r\n    callback(wrapper);\r\n  }\r\n\r\n\r\n  function renderImageData(glOrCanvas, imageData, x, y, width, height, channels, framebuffer) {\r\n    if ( channels === void 0 ) channels = 15;\r\n    if ( framebuffer === void 0 ) framebuffer = null;\r\n\r\n    withWebGLContext(glOrCanvas, function (ref) {\r\n      var gl = ref.gl;\r\n      var withProgram = ref.withProgram;\r\n      var withTexture = ref.withTexture;\r\n\r\n      withTexture('copy', function (tex, texUnit) {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\r\n        withProgram('copy', viewportQuadVertex, copyTexFragment, function (ref) {\r\n          var setUniform = ref.setUniform;\r\n          var setAttribute = ref.setAttribute;\r\n\r\n          setAttribute('aUV', 2, gl.STATIC_DRAW, 0, new Float32Array([0, 0, 2, 0, 0, 2]));\r\n          setUniform('1i', 'image', texUnit);\r\n          gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer || null);\r\n          gl.disable(gl.BLEND);\r\n          gl.colorMask(channels & 8, channels & 4, channels & 2, channels & 1);\r\n          gl.viewport(x, y, width, height);\r\n          gl.scissor(x, y, width, height);\r\n          gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resizing a canvas clears its contents; this utility copies the previous contents over.\r\n   * @param canvas\r\n   * @param newWidth\r\n   * @param newHeight\r\n   */\r\n  function resizeWebGLCanvasWithoutClearing(canvas, newWidth, newHeight) {\r\n    var width = canvas.width;\r\n    var height = canvas.height;\r\n    withWebGLContext(canvas, function (ref) {\r\n      var gl = ref.gl;\r\n\r\n      var data = new Uint8Array(width * height * 4);\r\n      gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n      canvas.width = newWidth;\r\n      canvas.height = newHeight;\r\n      renderImageData(gl, data, 0, 0, width, height);\r\n    });\r\n  }\r\n\r\n  var webglUtils = /*#__PURE__*/Object.freeze({\r\n    __proto__: null,\r\n    withWebGLContext: withWebGLContext,\r\n    renderImageData: renderImageData,\r\n    resizeWebGLCanvasWithoutClearing: resizeWebGLCanvasWithoutClearing\r\n  });\r\n\r\n  function generate$2 (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent) {\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n\r\n    var textureData = new Uint8Array(sdfWidth * sdfHeight);\r\n\r\n    var viewBoxWidth = viewBox[2] - viewBox[0];\r\n    var viewBoxHeight = viewBox[3] - viewBox[1];\r\n\r\n    // Decompose all paths into straight line segments and add them to an index\r\n    var segments = [];\r\n    pathToLineSegments(path, function (x1, y1, x2, y2) {\r\n      segments.push({\r\n        x1: x1, y1: y1, x2: x2, y2: y2,\r\n        minX: Math.min(x1, x2),\r\n        minY: Math.min(y1, y2),\r\n        maxX: Math.max(x1, x2),\r\n        maxY: Math.max(y1, y2)\r\n      });\r\n    });\r\n\r\n    // Sort segments by maxX, this will let us short-circuit some loops below\r\n    segments.sort(function (a, b) { return a.maxX - b.maxX; });\r\n\r\n    // For each target SDF texel, find the distance from its center to its nearest line segment,\r\n    // map that distance to an alpha value, and write that alpha to the texel\r\n    for (var sdfX = 0; sdfX < sdfWidth; sdfX++) {\r\n      for (var sdfY = 0; sdfY < sdfHeight; sdfY++) {\r\n        var signedDist = findNearestSignedDistance(\r\n          viewBox[0] + viewBoxWidth * (sdfX + 0.5) / sdfWidth,\r\n          viewBox[1] + viewBoxHeight * (sdfY + 0.5) / sdfHeight\r\n        );\r\n\r\n        // Use an exponential scale to ensure the texels very near the glyph path have adequate\r\n        // precision, while allowing the distance field to cover the entire texture, given that\r\n        // there are only 8 bits available. Formula visualized: https://www.desmos.com/calculator/uiaq5aqiam\r\n        var alpha = Math.pow((1 - Math.abs(signedDist) / maxDistance), sdfExponent) / 2;\r\n        if (signedDist < 0) {\r\n          alpha = 1 - alpha;\r\n        }\r\n\r\n        alpha = Math.max(0, Math.min(255, Math.round(alpha * 255))); //clamp\r\n        textureData[sdfY * sdfWidth + sdfX] = alpha;\r\n      }\r\n    }\r\n\r\n    return textureData\r\n\r\n    /**\r\n     * For a given x/y, search the index for the closest line segment and return\r\n     * its signed distance. Negative = inside, positive = outside, zero = on edge\r\n     * @param x\r\n     * @param y\r\n     * @returns {number}\r\n     */\r\n    function findNearestSignedDistance (x, y) {\r\n      var closestDistSq = Infinity;\r\n      var closestDist = Infinity;\r\n\r\n      for (var i = segments.length; i--;) {\r\n        var seg = segments[i];\r\n        if (seg.maxX + closestDist <= x) { break } //sorting by maxX means no more can be closer, so we can short-circuit\r\n        if (x + closestDist > seg.minX && y - closestDist < seg.maxY && y + closestDist > seg.minY) {\r\n          var distSq = absSquareDistanceToLineSegment(x, y, seg.x1, seg.y1, seg.x2, seg.y2);\r\n          if (distSq < closestDistSq) {\r\n            closestDistSq = distSq;\r\n            closestDist = Math.sqrt(closestDistSq);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Flip to negative distance if inside the poly\r\n      if (isPointInPoly(x, y)) {\r\n        closestDist = -closestDist;\r\n      }\r\n      return closestDist\r\n    }\r\n\r\n    /**\r\n     * Determine whether the given point lies inside or outside the glyph. Uses a simple\r\n     * winding-number ray casting algorithm using a ray pointing east from the point.\r\n     */\r\n    function isPointInPoly (x, y) {\r\n      var winding = 0;\r\n      for (var i = segments.length; i--;) {\r\n        var seg = segments[i];\r\n        if (seg.maxX <= x) { break } //sorting by maxX means no more can cross, so we can short-circuit\r\n        var intersects = ((seg.y1 > y) !== (seg.y2 > y)) && (x < (seg.x2 - seg.x1) * (y - seg.y1) / (seg.y2 - seg.y1) + seg.x1);\r\n        if (intersects) {\r\n          winding += seg.y1 < seg.y2 ? 1 : -1;\r\n        }\r\n      }\r\n      return winding !== 0\r\n    }\r\n  }\r\n\r\n  function generateIntoCanvas$2(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, x, y, channel) {\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n    if ( x === void 0 ) x = 0;\r\n    if ( y === void 0 ) y = 0;\r\n    if ( channel === void 0 ) channel = 0;\r\n\r\n    generateIntoFramebuffer$1(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, null, x, y, channel);\r\n  }\r\n\r\n  function generateIntoFramebuffer$1 (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, glOrCanvas, framebuffer, x, y, channel) {\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n    if ( x === void 0 ) x = 0;\r\n    if ( y === void 0 ) y = 0;\r\n    if ( channel === void 0 ) channel = 0;\r\n\r\n    var data = generate$2(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent);\r\n    // Expand single-channel data to rbga\r\n    var rgbaData = new Uint8Array(data.length * 4);\r\n    for (var i = 0; i < data.length; i++) {\r\n      rgbaData[i * 4 + channel] = data[i];\r\n    }\r\n    renderImageData(glOrCanvas, rgbaData, x, y, sdfWidth, sdfHeight, 1 << (3 - channel), framebuffer);\r\n  }\r\n\r\n  /**\r\n   * Find the absolute distance from a point to a line segment at closest approach\r\n   */\r\n  function absSquareDistanceToLineSegment (x, y, lineX0, lineY0, lineX1, lineY1) {\r\n    var ldx = lineX1 - lineX0;\r\n    var ldy = lineY1 - lineY0;\r\n    var lengthSq = ldx * ldx + ldy * ldy;\r\n    var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\r\n    var dx = x - (lineX0 + t * ldx);\r\n    var dy = y - (lineY0 + t * ldy);\r\n    return dx * dx + dy * dy\r\n  }\r\n\r\n  var javascript = /*#__PURE__*/Object.freeze({\r\n    __proto__: null,\r\n    generate: generate$2,\r\n    generateIntoCanvas: generateIntoCanvas$2,\r\n    generateIntoFramebuffer: generateIntoFramebuffer$1\r\n  });\r\n\r\n  var mainVertex = \"precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}\";\r\n\r\n  var mainFragment = \"precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}\";\r\n\r\n  var postFragment = \"precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}\";\r\n\r\n  // Single triangle covering viewport\r\n  var viewportUVs = new Float32Array([0, 0, 2, 0, 0, 2]);\r\n\r\n  var implicitContext = null;\r\n  var isTestingSupport = false;\r\n  var NULL_OBJECT = {};\r\n  var supportByCanvas = new WeakMap(); // canvas -> bool\r\n\r\n  function validateSupport (glOrCanvas) {\r\n    if (!isTestingSupport && !isSupported(glOrCanvas)) {\r\n      throw new Error('WebGL generation not supported')\r\n    }\r\n  }\r\n\r\n  function generate$1 (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, glOrCanvas) {\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n    if ( glOrCanvas === void 0 ) glOrCanvas = null;\r\n\r\n    if (!glOrCanvas) {\r\n      glOrCanvas = implicitContext;\r\n      if (!glOrCanvas) {\r\n        var canvas = typeof OffscreenCanvas === 'function'\r\n          ? new OffscreenCanvas(1, 1)\r\n          : typeof document !== 'undefined'\r\n            ? document.createElement('canvas')\r\n            : null;\r\n        if (!canvas) {\r\n          throw new Error('OffscreenCanvas or DOM canvas not supported')\r\n        }\r\n        glOrCanvas = implicitContext = canvas.getContext('webgl', { depth: false });\r\n      }\r\n    }\r\n\r\n    validateSupport(glOrCanvas);\r\n\r\n    var rgbaData = new Uint8Array(sdfWidth * sdfHeight * 4); //not Uint8ClampedArray, cuz Safari\r\n\r\n    // Render into a background texture framebuffer\r\n    withWebGLContext(glOrCanvas, function (ref) {\r\n      var gl = ref.gl;\r\n      var withTexture = ref.withTexture;\r\n      var withTextureFramebuffer = ref.withTextureFramebuffer;\r\n\r\n      withTexture('readable', function (texture, textureUnit) {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, sdfWidth, sdfHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        withTextureFramebuffer(texture, textureUnit, function (framebuffer) {\r\n          generateIntoFramebuffer(\r\n            sdfWidth,\r\n            sdfHeight,\r\n            path,\r\n            viewBox,\r\n            maxDistance,\r\n            sdfExponent,\r\n            gl,\r\n            framebuffer,\r\n            0,\r\n            0,\r\n            0 // red channel\r\n          );\r\n          gl.readPixels(0, 0, sdfWidth, sdfHeight, gl.RGBA, gl.UNSIGNED_BYTE, rgbaData);\r\n        });\r\n      });\r\n    });\r\n\r\n    // Throw away all but the red channel\r\n    var data = new Uint8Array(sdfWidth * sdfHeight);\r\n    for (var i = 0, j = 0; i < rgbaData.length; i += 4) {\r\n      data[j++] = rgbaData[i];\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  function generateIntoCanvas$1(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, x, y, channel) {\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n    if ( x === void 0 ) x = 0;\r\n    if ( y === void 0 ) y = 0;\r\n    if ( channel === void 0 ) channel = 0;\r\n\r\n    generateIntoFramebuffer(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, null, x, y, channel);\r\n  }\r\n\r\n  function generateIntoFramebuffer (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, glOrCanvas, framebuffer, x, y, channel) {\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n    if ( x === void 0 ) x = 0;\r\n    if ( y === void 0 ) y = 0;\r\n    if ( channel === void 0 ) channel = 0;\r\n\r\n    // Verify support\r\n    validateSupport(glOrCanvas);\r\n\r\n    // Compute path segments\r\n    var lineSegmentCoords = [];\r\n    pathToLineSegments(path, function (x1, y1, x2, y2) {\r\n      lineSegmentCoords.push(x1, y1, x2, y2);\r\n    });\r\n    lineSegmentCoords = new Float32Array(lineSegmentCoords);\r\n\r\n    withWebGLContext(glOrCanvas, function (ref) {\r\n      var gl = ref.gl;\r\n      var isWebGL2 = ref.isWebGL2;\r\n      var getExtension = ref.getExtension;\r\n      var withProgram = ref.withProgram;\r\n      var withTexture = ref.withTexture;\r\n      var withTextureFramebuffer = ref.withTextureFramebuffer;\r\n      var handleContextLoss = ref.handleContextLoss;\r\n\r\n      withTexture('rawDistances', function (intermediateTexture, intermediateTextureUnit) {\r\n        if (sdfWidth !== intermediateTexture._lastWidth || sdfHeight !== intermediateTexture._lastHeight) {\r\n          gl.texImage2D(\r\n            gl.TEXTURE_2D, 0, gl.RGBA,\r\n            intermediateTexture._lastWidth = sdfWidth,\r\n            intermediateTexture._lastHeight = sdfHeight,\r\n            0, gl.RGBA, gl.UNSIGNED_BYTE, null\r\n          );\r\n        }\r\n\r\n        // Unsigned distance pass\r\n        withProgram('main', mainVertex, mainFragment, function (ref) {\r\n          var setAttribute = ref.setAttribute;\r\n          var setUniform = ref.setUniform;\r\n\r\n          // Init extensions\r\n          var instancingExtension = !isWebGL2 && getExtension('ANGLE_instanced_arrays');\r\n          var blendMinMaxExtension = !isWebGL2 && getExtension('EXT_blend_minmax');\r\n\r\n          // Init/update attributes\r\n          setAttribute('aUV', 2, gl.STATIC_DRAW, 0, viewportUVs);\r\n          setAttribute('aLineSegment', 4, gl.DYNAMIC_DRAW, 1, lineSegmentCoords);\r\n\r\n          // Init/update uniforms\r\n          setUniform.apply(void 0, [ '4f', 'uGlyphBounds' ].concat( viewBox ));\r\n          setUniform('1f', 'uMaxDistance', maxDistance);\r\n          setUniform('1f', 'uExponent', sdfExponent);\r\n\r\n          // Render initial unsigned distance / winding number info to a texture\r\n          withTextureFramebuffer(intermediateTexture, intermediateTextureUnit, function (framebuffer) {\r\n            gl.enable(gl.BLEND);\r\n            gl.colorMask(true, true, true, true);\r\n            gl.viewport(0, 0, sdfWidth, sdfHeight);\r\n            gl.scissor(0, 0, sdfWidth, sdfHeight);\r\n            gl.blendFunc(gl.ONE, gl.ONE);\r\n            // Red+Green channels are incremented (FUNC_ADD) for segment-ray crossings to give a \"winding number\".\r\n            // Alpha holds the closest (MAX) unsigned distance.\r\n            gl.blendEquationSeparate(gl.FUNC_ADD, isWebGL2 ? gl.MAX : blendMinMaxExtension.MAX_EXT);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n            if (isWebGL2) {\r\n              gl.drawArraysInstanced(gl.TRIANGLES, 0, 3, lineSegmentCoords.length / 4);\r\n            } else {\r\n              instancingExtension.drawArraysInstancedANGLE(gl.TRIANGLES, 0, 3, lineSegmentCoords.length / 4);\r\n            }\r\n            // Debug\r\n            // const debug = new Uint8Array(sdfWidth * sdfHeight * 4)\r\n            // gl.readPixels(0, 0, sdfWidth, sdfHeight, gl.RGBA, gl.UNSIGNED_BYTE, debug)\r\n            // console.log('intermediate texture data: ', debug)\r\n          });\r\n        });\r\n\r\n        // Use the data stored in the texture to apply inside/outside and write to the output framebuffer rect+channel.\r\n        withProgram('post', viewportQuadVertex, postFragment, function (program) {\r\n          program.setAttribute('aUV', 2, gl.STATIC_DRAW, 0, viewportUVs);\r\n          program.setUniform('1i', 'tex', intermediateTextureUnit);\r\n          gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n          gl.disable(gl.BLEND);\r\n          gl.colorMask(channel === 0, channel === 1, channel === 2, channel === 3);\r\n          gl.viewport(x, y, sdfWidth, sdfHeight);\r\n          gl.scissor(x, y, sdfWidth, sdfHeight);\r\n          gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n        });\r\n      });\r\n\r\n      // Handle context loss occurring during any of the above calls\r\n      if (gl.isContextLost()) {\r\n        handleContextLoss();\r\n        throw new Error('webgl context lost')\r\n      }\r\n    });\r\n  }\r\n\r\n  function isSupported (glOrCanvas) {\r\n    var key = (!glOrCanvas || glOrCanvas === implicitContext) ? NULL_OBJECT : (glOrCanvas.canvas || glOrCanvas);\r\n    var supported = supportByCanvas.get(key);\r\n    if (supported === undefined) {\r\n      isTestingSupport = true;\r\n      var failReason = null;\r\n      try {\r\n        // Since we can't detect all failure modes up front, let's just do a trial run of a\r\n        // simple path and compare what we get back to the correct expected result. This will\r\n        // also serve to prime the shader compilation.\r\n        var expectedResult = [\r\n          97, 106, 97, 61,\r\n          99, 137, 118, 80,\r\n          80, 118, 137, 99,\r\n          61, 97, 106, 97\r\n        ];\r\n        var testResult = generate$1(\r\n          4,\r\n          4,\r\n          'M8,8L16,8L24,24L16,24Z',\r\n          [0, 0, 32, 32],\r\n          24,\r\n          1,\r\n          glOrCanvas\r\n        );\r\n        supported = testResult && expectedResult.length === testResult.length &&\r\n          testResult.every(function (val, i) { return val === expectedResult[i]; });\r\n        if (!supported) {\r\n          failReason = 'bad trial run results';\r\n          console.info(expectedResult, testResult);\r\n        }\r\n      } catch (err) {\r\n        // TODO if it threw due to webgl context loss, should we maybe leave isSupported as null and try again later?\r\n        supported = false;\r\n        failReason = err.message;\r\n      }\r\n      if (failReason) {\r\n        console.warn('WebGL SDF generation not supported:', failReason);\r\n      }\r\n      isTestingSupport = false;\r\n      supportByCanvas.set(key, supported);\r\n    }\r\n    return supported\r\n  }\r\n\r\n  var webgl = /*#__PURE__*/Object.freeze({\r\n    __proto__: null,\r\n    generate: generate$1,\r\n    generateIntoCanvas: generateIntoCanvas$1,\r\n    generateIntoFramebuffer: generateIntoFramebuffer,\r\n    isSupported: isSupported\r\n  });\r\n\r\n  /**\r\n   * Generate an SDF texture image for a 2D path.\r\n   *\r\n   * @param {number} sdfWidth - width of the SDF output image in pixels.\r\n   * @param {number} sdfHeight - height of the SDF output image in pixels.\r\n   * @param {string} path - an SVG-like path string describing the glyph; should only contain commands: M/L/Q/C/Z.\r\n   * @param {number[]} viewBox - [minX, minY, maxX, maxY] in font units aligning with the texture's edges.\r\n   * @param {number} maxDistance - the maximum distance from the glyph path in font units that will be encoded; defaults\r\n   *        to half the maximum viewBox dimension.\r\n   * @param {number} [sdfExponent] - specifies an exponent for encoding the SDF's distance values; higher exponents\r\n   *        will give greater precision nearer the glyph's path.\r\n   * @return {Uint8Array}\r\n   */\r\n  function generate(\r\n    sdfWidth,\r\n    sdfHeight,\r\n    path,\r\n    viewBox,\r\n    maxDistance,\r\n    sdfExponent\r\n  ) {\r\n    if ( maxDistance === void 0 ) maxDistance = Math.max(viewBox[2] - viewBox[0], viewBox[3] - viewBox[1]) / 2;\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n\r\n    try {\r\n      return generate$1.apply(webgl, arguments)\r\n    } catch(e) {\r\n      console.info('WebGL SDF generation failed, falling back to JS', e);\r\n      return generate$2.apply(javascript, arguments)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate an SDF texture image for a 2D path, inserting the result into a WebGL `canvas` at a given x/y position\r\n   * and color channel. This is generally much faster than calling `generate` because it does not require reading pixels\r\n   * back from the GPU->CPU -- the `canvas` can be used directly as a WebGL texture image, so it all stays on the GPU.\r\n   *\r\n   * @param {number} sdfWidth - width of the SDF output image in pixels.\r\n   * @param {number} sdfHeight - height of the SDF output image in pixels.\r\n   * @param {string} path - an SVG-like path string describing the glyph; should only contain commands: M/L/Q/C/Z.\r\n   * @param {number[]} viewBox - [minX, minY, maxX, maxY] in font units aligning with the texture's edges.\r\n   * @param {number} maxDistance - the maximum distance from the glyph path in font units that will be encoded; defaults\r\n   *        to half the maximum viewBox dimension.\r\n   * @param {number} [sdfExponent] - specifies an exponent for encoding the SDF's distance values; higher exponents\r\n   *        will give greater precision nearer the glyph's path.\r\n   * @param {HTMLCanvasElement|OffscreenCanvas} canvas - a WebGL-enabled canvas into which the SDF will be rendered.\r\n   *        Only the relevant rect/channel will be modified, the rest will be preserved. To avoid unpredictable results\r\n   *        due to shared GL context state, this canvas should be dedicated to use by this library alone.\r\n   * @param {number} x - the x position at which to render the SDF.\r\n   * @param {number} y - the y position at which to render the SDF.\r\n   * @param {number} channel - the color channel index (0-4) into which the SDF will be rendered.\r\n   * @return {Uint8Array}\r\n   */\r\n  function generateIntoCanvas(\r\n    sdfWidth,\r\n    sdfHeight,\r\n    path,\r\n    viewBox,\r\n    maxDistance,\r\n    sdfExponent,\r\n    canvas,\r\n    x,\r\n    y,\r\n    channel\r\n  ) {\r\n    if ( maxDistance === void 0 ) maxDistance = Math.max(viewBox[2] - viewBox[0], viewBox[3] - viewBox[1]) / 2;\r\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\r\n    if ( x === void 0 ) x = 0;\r\n    if ( y === void 0 ) y = 0;\r\n    if ( channel === void 0 ) channel = 0;\r\n\r\n    try {\r\n      return generateIntoCanvas$1.apply(webgl, arguments)\r\n    } catch(e) {\r\n      console.info('WebGL SDF generation failed, falling back to JS', e);\r\n      return generateIntoCanvas$2.apply(javascript, arguments)\r\n    }\r\n  }\r\n\r\n  exports.forEachPathCommand = forEachPathCommand;\r\n  exports.generate = generate;\r\n  exports.generateIntoCanvas = generateIntoCanvas;\r\n  exports.javascript = javascript;\r\n  exports.pathToLineSegments = pathToLineSegments;\r\n  exports.webgl = webgl;\r\n  exports.webglUtils = webglUtils;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n  return exports;\r\n\r\n}({}));\r\nreturn exports\r\n}\r\n\r\nexport { SDFGenerator as default };\r\n", "function bidiFactory() {\r\nvar bidi = (function (exports) {\r\n\r\n  // Bidi character types data, auto generated\r\n  var DATA = {\r\n    \"R\": \"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73\",\r\n    \"EN\": \"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9\",\r\n    \"ES\": \"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2\",\r\n    \"ET\": \"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj\",\r\n    \"AN\": \"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u\",\r\n    \"CS\": \"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b\",\r\n    \"B\": \"a,3,f+2,2v,690\",\r\n    \"S\": \"9,2,k\",\r\n    \"WS\": \"c,k,4f4,1vk+a,u,1j,335\",\r\n    \"ON\": \"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i\",\r\n    \"BN\": \"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1\",\r\n    \"NSM\": \"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n\",\r\n    \"AL\": \"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d\",\r\n    \"LRO\": \"6ct\",\r\n    \"RLO\": \"6cu\",\r\n    \"LRE\": \"6cq\",\r\n    \"RLE\": \"6cr\",\r\n    \"PDF\": \"6cs\",\r\n    \"LRI\": \"6ee\",\r\n    \"RLI\": \"6ef\",\r\n    \"FSI\": \"6eg\",\r\n    \"PDI\": \"6eh\"\r\n  };\r\n\r\n  var TYPES = {};\r\n  var TYPES_TO_NAMES = {};\r\n  TYPES.L = 1; //L is the default\r\n  TYPES_TO_NAMES[1] = 'L';\r\n  Object.keys(DATA).forEach(function (type, i) {\r\n    TYPES[type] = 1 << (i + 1);\r\n    TYPES_TO_NAMES[TYPES[type]] = type;\r\n  });\r\n  Object.freeze(TYPES);\r\n\r\n  var ISOLATE_INIT_TYPES = TYPES.LRI | TYPES.RLI | TYPES.FSI;\r\n  var STRONG_TYPES = TYPES.L | TYPES.R | TYPES.AL;\r\n  var NEUTRAL_ISOLATE_TYPES = TYPES.B | TYPES.S | TYPES.WS | TYPES.ON | TYPES.FSI | TYPES.LRI | TYPES.RLI | TYPES.PDI;\r\n  var BN_LIKE_TYPES = TYPES.BN | TYPES.RLE | TYPES.LRE | TYPES.RLO | TYPES.LRO | TYPES.PDF;\r\n  var TRAILING_TYPES = TYPES.S | TYPES.WS | TYPES.B | ISOLATE_INIT_TYPES | TYPES.PDI | BN_LIKE_TYPES;\r\n\r\n  var map = null;\r\n\r\n  function parseData () {\r\n    if (!map) {\r\n      //const start = performance.now()\r\n      map = new Map();\r\n      var loop = function ( type ) {\r\n        if (DATA.hasOwnProperty(type)) {\r\n          var lastCode = 0;\r\n          DATA[type].split(',').forEach(function (range) {\r\n            var ref = range.split('+');\r\n            var skip = ref[0];\r\n            var step = ref[1];\r\n            skip = parseInt(skip, 36);\r\n            step = step ? parseInt(step, 36) : 0;\r\n            map.set(lastCode += skip, TYPES[type]);\r\n            for (var i = 0; i < step; i++) {\r\n              map.set(++lastCode, TYPES[type]);\r\n            }\r\n          });\r\n        }\r\n      };\r\n\r\n      for (var type in DATA) loop( type );\r\n      //console.log(`char types parsed in ${performance.now() - start}ms`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} char\r\n   * @return {number}\r\n   */\r\n  function getBidiCharType (char) {\r\n    parseData();\r\n    return map.get(char.codePointAt(0)) || TYPES.L\r\n  }\r\n\r\n  function getBidiCharTypeName(char) {\r\n    return TYPES_TO_NAMES[getBidiCharType(char)]\r\n  }\r\n\r\n  // Bidi bracket pairs data, auto generated\r\n  var data$1 = {\r\n    \"pairs\": \"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1\",\r\n    \"canonical\": \"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye\"\r\n  };\r\n\r\n  /**\r\n   * Parses an string that holds encoded codepoint mappings, e.g. for bracket pairs or\r\n   * mirroring characters, as encoded by scripts/generateBidiData.js. Returns an object\r\n   * holding the `map`, and optionally a `reverseMap` if `includeReverse:true`.\r\n   * @param {string} encodedString\r\n   * @param {boolean} includeReverse - true if you want reverseMap in the output\r\n   * @return {{map: Map<number, number>, reverseMap?: Map<number, number>}}\r\n   */\r\n  function parseCharacterMap (encodedString, includeReverse) {\r\n    var radix = 36;\r\n    var lastCode = 0;\r\n    var map = new Map();\r\n    var reverseMap = includeReverse && new Map();\r\n    var prevPair;\r\n    encodedString.split(',').forEach(function visit(entry) {\r\n      if (entry.indexOf('+') !== -1) {\r\n        for (var i = +entry; i--;) {\r\n          visit(prevPair);\r\n        }\r\n      } else {\r\n        prevPair = entry;\r\n        var ref = entry.split('>');\r\n        var a = ref[0];\r\n        var b = ref[1];\r\n        a = String.fromCodePoint(lastCode += parseInt(a, radix));\r\n        b = String.fromCodePoint(lastCode += parseInt(b, radix));\r\n        map.set(a, b);\r\n        includeReverse && reverseMap.set(b, a);\r\n      }\r\n    });\r\n    return { map: map, reverseMap: reverseMap }\r\n  }\r\n\r\n  var openToClose, closeToOpen, canonical;\r\n\r\n  function parse$1 () {\r\n    if (!openToClose) {\r\n      //const start = performance.now()\r\n      var ref = parseCharacterMap(data$1.pairs, true);\r\n      var map = ref.map;\r\n      var reverseMap = ref.reverseMap;\r\n      openToClose = map;\r\n      closeToOpen = reverseMap;\r\n      canonical = parseCharacterMap(data$1.canonical, false).map;\r\n      //console.log(`brackets parsed in ${performance.now() - start}ms`)\r\n    }\r\n  }\r\n\r\n  function openingToClosingBracket (char) {\r\n    parse$1();\r\n    return openToClose.get(char) || null\r\n  }\r\n\r\n  function closingToOpeningBracket (char) {\r\n    parse$1();\r\n    return closeToOpen.get(char) || null\r\n  }\r\n\r\n  function getCanonicalBracket (char) {\r\n    parse$1();\r\n    return canonical.get(char) || null\r\n  }\r\n\r\n  // Local type aliases\r\n  var TYPE_L = TYPES.L;\r\n  var TYPE_R = TYPES.R;\r\n  var TYPE_EN = TYPES.EN;\r\n  var TYPE_ES = TYPES.ES;\r\n  var TYPE_ET = TYPES.ET;\r\n  var TYPE_AN = TYPES.AN;\r\n  var TYPE_CS = TYPES.CS;\r\n  var TYPE_B = TYPES.B;\r\n  var TYPE_S = TYPES.S;\r\n  var TYPE_ON = TYPES.ON;\r\n  var TYPE_BN = TYPES.BN;\r\n  var TYPE_NSM = TYPES.NSM;\r\n  var TYPE_AL = TYPES.AL;\r\n  var TYPE_LRO = TYPES.LRO;\r\n  var TYPE_RLO = TYPES.RLO;\r\n  var TYPE_LRE = TYPES.LRE;\r\n  var TYPE_RLE = TYPES.RLE;\r\n  var TYPE_PDF = TYPES.PDF;\r\n  var TYPE_LRI = TYPES.LRI;\r\n  var TYPE_RLI = TYPES.RLI;\r\n  var TYPE_FSI = TYPES.FSI;\r\n  var TYPE_PDI = TYPES.PDI;\r\n\r\n  /**\r\n   * @typedef {object} GetEmbeddingLevelsResult\r\n   * @property {{start, end, level}[]} paragraphs\r\n   * @property {Uint8Array} levels\r\n   */\r\n\r\n  /**\r\n   * This function applies the Bidirectional Algorithm to a string, returning the resolved embedding levels\r\n   * in a single Uint8Array plus a list of objects holding each paragraph's start and end indices and resolved\r\n   * base embedding level.\r\n   *\r\n   * @param {string} string - The input string\r\n   * @param {\"ltr\"|\"rtl\"|\"auto\"} [baseDirection] - Use \"ltr\" or \"rtl\" to force a base paragraph direction,\r\n   *        otherwise a direction will be chosen automatically from each paragraph's contents.\r\n   * @return {GetEmbeddingLevelsResult}\r\n   */\r\n  function getEmbeddingLevels (string, baseDirection) {\r\n    var MAX_DEPTH = 125;\r\n\r\n    // Start by mapping all characters to their unicode type, as a bitmask integer\r\n    var charTypes = new Uint32Array(string.length);\r\n    for (var i = 0; i < string.length; i++) {\r\n      charTypes[i] = getBidiCharType(string[i]);\r\n    }\r\n\r\n    var charTypeCounts = new Map(); //will be cleared at start of each paragraph\r\n    function changeCharType(i, type) {\r\n      var oldType = charTypes[i];\r\n      charTypes[i] = type;\r\n      charTypeCounts.set(oldType, charTypeCounts.get(oldType) - 1);\r\n      if (oldType & NEUTRAL_ISOLATE_TYPES) {\r\n        charTypeCounts.set(NEUTRAL_ISOLATE_TYPES, charTypeCounts.get(NEUTRAL_ISOLATE_TYPES) - 1);\r\n      }\r\n      charTypeCounts.set(type, (charTypeCounts.get(type) || 0) + 1);\r\n      if (type & NEUTRAL_ISOLATE_TYPES) {\r\n        charTypeCounts.set(NEUTRAL_ISOLATE_TYPES, (charTypeCounts.get(NEUTRAL_ISOLATE_TYPES) || 0) + 1);\r\n      }\r\n    }\r\n\r\n    var embedLevels = new Uint8Array(string.length);\r\n    var isolationPairs = new Map(); //init->pdi and pdi->init\r\n\r\n    // === 3.3.1 The Paragraph Level ===\r\n    // 3.3.1 P1: Split the text into paragraphs\r\n    var paragraphs = []; // [{start, end, level}, ...]\r\n    var paragraph = null;\r\n    for (var i$1 = 0; i$1 < string.length; i$1++) {\r\n      if (!paragraph) {\r\n        paragraphs.push(paragraph = {\r\n          start: i$1,\r\n          end: string.length - 1,\r\n          // 3.3.1 P2-P3: Determine the paragraph level\r\n          level: baseDirection === 'rtl' ? 1 : baseDirection === 'ltr' ? 0 : determineAutoEmbedLevel(i$1, false)\r\n        });\r\n      }\r\n      if (charTypes[i$1] & TYPE_B) {\r\n        paragraph.end = i$1;\r\n        paragraph = null;\r\n      }\r\n    }\r\n\r\n    var FORMATTING_TYPES = TYPE_RLE | TYPE_LRE | TYPE_RLO | TYPE_LRO | ISOLATE_INIT_TYPES | TYPE_PDI | TYPE_PDF | TYPE_B;\r\n    var nextEven = function (n) { return n + ((n & 1) ? 1 : 2); };\r\n    var nextOdd = function (n) { return n + ((n & 1) ? 2 : 1); };\r\n\r\n    // Everything from here on will operate per paragraph.\r\n    for (var paraIdx = 0; paraIdx < paragraphs.length; paraIdx++) {\r\n      paragraph = paragraphs[paraIdx];\r\n      var statusStack = [{\r\n        _level: paragraph.level,\r\n        _override: 0, //0=neutral, 1=L, 2=R\r\n        _isolate: 0 //bool\r\n      }];\r\n      var stackTop = (void 0);\r\n      var overflowIsolateCount = 0;\r\n      var overflowEmbeddingCount = 0;\r\n      var validIsolateCount = 0;\r\n      charTypeCounts.clear();\r\n\r\n      // === 3.3.2 Explicit Levels and Directions ===\r\n      for (var i$2 = paragraph.start; i$2 <= paragraph.end; i$2++) {\r\n        var charType = charTypes[i$2];\r\n        stackTop = statusStack[statusStack.length - 1];\r\n\r\n        // Set initial counts\r\n        charTypeCounts.set(charType, (charTypeCounts.get(charType) || 0) + 1);\r\n        if (charType & NEUTRAL_ISOLATE_TYPES) {\r\n          charTypeCounts.set(NEUTRAL_ISOLATE_TYPES, (charTypeCounts.get(NEUTRAL_ISOLATE_TYPES) || 0) + 1);\r\n        }\r\n\r\n        // Explicit Embeddings: 3.3.2 X2 - X3\r\n        if (charType & FORMATTING_TYPES) { //prefilter all formatters\r\n          if (charType & (TYPE_RLE | TYPE_LRE)) {\r\n            embedLevels[i$2] = stackTop._level; // 5.2\r\n            var level = (charType === TYPE_RLE ? nextOdd : nextEven)(stackTop._level);\r\n            if (level <= MAX_DEPTH && !overflowIsolateCount && !overflowEmbeddingCount) {\r\n              statusStack.push({\r\n                _level: level,\r\n                _override: 0,\r\n                _isolate: 0\r\n              });\r\n            } else if (!overflowIsolateCount) {\r\n              overflowEmbeddingCount++;\r\n            }\r\n          }\r\n\r\n          // Explicit Overrides: 3.3.2 X4 - X5\r\n          else if (charType & (TYPE_RLO | TYPE_LRO)) {\r\n            embedLevels[i$2] = stackTop._level; // 5.2\r\n            var level$1 = (charType === TYPE_RLO ? nextOdd : nextEven)(stackTop._level);\r\n            if (level$1 <= MAX_DEPTH && !overflowIsolateCount && !overflowEmbeddingCount) {\r\n              statusStack.push({\r\n                _level: level$1,\r\n                _override: (charType & TYPE_RLO) ? TYPE_R : TYPE_L,\r\n                _isolate: 0\r\n              });\r\n            } else if (!overflowIsolateCount) {\r\n              overflowEmbeddingCount++;\r\n            }\r\n          }\r\n\r\n          // Isolates: 3.3.2 X5a - X5c\r\n          else if (charType & ISOLATE_INIT_TYPES) {\r\n            // X5c - FSI becomes either RLI or LRI\r\n            if (charType & TYPE_FSI) {\r\n              charType = determineAutoEmbedLevel(i$2 + 1, true) === 1 ? TYPE_RLI : TYPE_LRI;\r\n            }\r\n\r\n            embedLevels[i$2] = stackTop._level;\r\n            if (stackTop._override) {\r\n              changeCharType(i$2, stackTop._override);\r\n            }\r\n            var level$2 = (charType === TYPE_RLI ? nextOdd : nextEven)(stackTop._level);\r\n            if (level$2 <= MAX_DEPTH && overflowIsolateCount === 0 && overflowEmbeddingCount === 0) {\r\n              validIsolateCount++;\r\n              statusStack.push({\r\n                _level: level$2,\r\n                _override: 0,\r\n                _isolate: 1,\r\n                _isolInitIndex: i$2\r\n              });\r\n            } else {\r\n              overflowIsolateCount++;\r\n            }\r\n          }\r\n\r\n          // Terminating Isolates: 3.3.2 X6a\r\n          else if (charType & TYPE_PDI) {\r\n            if (overflowIsolateCount > 0) {\r\n              overflowIsolateCount--;\r\n            } else if (validIsolateCount > 0) {\r\n              overflowEmbeddingCount = 0;\r\n              while (!statusStack[statusStack.length - 1]._isolate) {\r\n                statusStack.pop();\r\n              }\r\n              // Add to isolation pairs bidirectional mapping:\r\n              var isolInitIndex = statusStack[statusStack.length - 1]._isolInitIndex;\r\n              if (isolInitIndex != null) {\r\n                isolationPairs.set(isolInitIndex, i$2);\r\n                isolationPairs.set(i$2, isolInitIndex);\r\n              }\r\n              statusStack.pop();\r\n              validIsolateCount--;\r\n            }\r\n            stackTop = statusStack[statusStack.length - 1];\r\n            embedLevels[i$2] = stackTop._level;\r\n            if (stackTop._override) {\r\n              changeCharType(i$2, stackTop._override);\r\n            }\r\n          }\r\n\r\n\r\n          // Terminating Embeddings and Overrides: 3.3.2 X7\r\n          else if (charType & TYPE_PDF) {\r\n            if (overflowIsolateCount === 0) {\r\n              if (overflowEmbeddingCount > 0) {\r\n                overflowEmbeddingCount--;\r\n              } else if (!stackTop._isolate && statusStack.length > 1) {\r\n                statusStack.pop();\r\n                stackTop = statusStack[statusStack.length - 1];\r\n              }\r\n            }\r\n            embedLevels[i$2] = stackTop._level; // 5.2\r\n          }\r\n\r\n          // End of Paragraph: 3.3.2 X8\r\n          else if (charType & TYPE_B) {\r\n            embedLevels[i$2] = paragraph.level;\r\n          }\r\n        }\r\n\r\n        // Non-formatting characters: 3.3.2 X6\r\n        else {\r\n          embedLevels[i$2] = stackTop._level;\r\n          // NOTE: This exclusion of BN seems to go against what section 5.2 says, but is required for test passage\r\n          if (stackTop._override && charType !== TYPE_BN) {\r\n            changeCharType(i$2, stackTop._override);\r\n          }\r\n        }\r\n      }\r\n\r\n      // === 3.3.3 Preparations for Implicit Processing ===\r\n\r\n      // Remove all RLE, LRE, RLO, LRO, PDF, and BN characters: 3.3.3 X9\r\n      // Note: Due to section 5.2, we won't remove them, but we'll use the BN_LIKE_TYPES bitset to\r\n      // easily ignore them all from here on out.\r\n\r\n      // 3.3.3 X10\r\n      // Compute the set of isolating run sequences as specified by BD13\r\n      var levelRuns = [];\r\n      var currentRun = null;\r\n      for (var i$3 = paragraph.start; i$3 <= paragraph.end; i$3++) {\r\n        var charType$1 = charTypes[i$3];\r\n        if (!(charType$1 & BN_LIKE_TYPES)) {\r\n          var lvl = embedLevels[i$3];\r\n          var isIsolInit = charType$1 & ISOLATE_INIT_TYPES;\r\n          var isPDI = charType$1 === TYPE_PDI;\r\n          if (currentRun && lvl === currentRun._level) {\r\n            currentRun._end = i$3;\r\n            currentRun._endsWithIsolInit = isIsolInit;\r\n          } else {\r\n            levelRuns.push(currentRun = {\r\n              _start: i$3,\r\n              _end: i$3,\r\n              _level: lvl,\r\n              _startsWithPDI: isPDI,\r\n              _endsWithIsolInit: isIsolInit\r\n            });\r\n          }\r\n        }\r\n      }\r\n      var isolatingRunSeqs = []; // [{seqIndices: [], sosType: L|R, eosType: L|R}]\r\n      for (var runIdx = 0; runIdx < levelRuns.length; runIdx++) {\r\n        var run = levelRuns[runIdx];\r\n        if (!run._startsWithPDI || (run._startsWithPDI && !isolationPairs.has(run._start))) {\r\n          var seqRuns = [currentRun = run];\r\n          for (var pdiIndex = (void 0); currentRun && currentRun._endsWithIsolInit && (pdiIndex = isolationPairs.get(currentRun._end)) != null;) {\r\n            for (var i$4 = runIdx + 1; i$4 < levelRuns.length; i$4++) {\r\n              if (levelRuns[i$4]._start === pdiIndex) {\r\n                seqRuns.push(currentRun = levelRuns[i$4]);\r\n                break\r\n              }\r\n            }\r\n          }\r\n          // build flat list of indices across all runs:\r\n          var seqIndices = [];\r\n          for (var i$5 = 0; i$5 < seqRuns.length; i$5++) {\r\n            var run$1 = seqRuns[i$5];\r\n            for (var j = run$1._start; j <= run$1._end; j++) {\r\n              seqIndices.push(j);\r\n            }\r\n          }\r\n          // determine the sos/eos types:\r\n          var firstLevel = embedLevels[seqIndices[0]];\r\n          var prevLevel = paragraph.level;\r\n          for (var i$6 = seqIndices[0] - 1; i$6 >= 0; i$6--) {\r\n            if (!(charTypes[i$6] & BN_LIKE_TYPES)) { //5.2\r\n              prevLevel = embedLevels[i$6];\r\n              break\r\n            }\r\n          }\r\n          var lastIndex = seqIndices[seqIndices.length - 1];\r\n          var lastLevel = embedLevels[lastIndex];\r\n          var nextLevel = paragraph.level;\r\n          if (!(charTypes[lastIndex] & ISOLATE_INIT_TYPES)) {\r\n            for (var i$7 = lastIndex + 1; i$7 <= paragraph.end; i$7++) {\r\n              if (!(charTypes[i$7] & BN_LIKE_TYPES)) { //5.2\r\n                nextLevel = embedLevels[i$7];\r\n                break\r\n              }\r\n            }\r\n          }\r\n          isolatingRunSeqs.push({\r\n            _seqIndices: seqIndices,\r\n            _sosType: Math.max(prevLevel, firstLevel) % 2 ? TYPE_R : TYPE_L,\r\n            _eosType: Math.max(nextLevel, lastLevel) % 2 ? TYPE_R : TYPE_L\r\n          });\r\n        }\r\n      }\r\n\r\n      // The next steps are done per isolating run sequence\r\n      for (var seqIdx = 0; seqIdx < isolatingRunSeqs.length; seqIdx++) {\r\n        var ref = isolatingRunSeqs[seqIdx];\r\n        var seqIndices$1 = ref._seqIndices;\r\n        var sosType = ref._sosType;\r\n        var eosType = ref._eosType;\r\n\r\n        // === 3.3.4 Resolving Weak Types ===\r\n\r\n        // W1 + 5.2. Search backward from each NSM to the first character in the isolating run sequence whose\r\n        // bidirectional type is not BN, and set the NSM to ON if it is an isolate initiator or PDI, and to its\r\n        // type otherwise. If the NSM is the first non-BN character, change the NSM to the type of sos.\r\n        if (charTypeCounts.get(TYPE_NSM)) {\r\n          for (var si = 0; si < seqIndices$1.length; si++) {\r\n            var i$8 = seqIndices$1[si];\r\n            if (charTypes[i$8] & TYPE_NSM) {\r\n              var prevType = sosType;\r\n              for (var sj = si - 1; sj >= 0; sj--) {\r\n                if (!(charTypes[seqIndices$1[sj]] & BN_LIKE_TYPES)) { //5.2 scan back to first non-BN\r\n                  prevType = charTypes[seqIndices$1[sj]];\r\n                  break\r\n                }\r\n              }\r\n              changeCharType(i$8, (prevType & (ISOLATE_INIT_TYPES | TYPE_PDI)) ? TYPE_ON : prevType);\r\n            }\r\n          }\r\n        }\r\n\r\n        // W2. Search backward from each instance of a European number until the first strong type (R, L, AL, or sos)\r\n        // is found. If an AL is found, change the type of the European number to Arabic number.\r\n        if (charTypeCounts.get(TYPE_EN)) {\r\n          for (var si$1 = 0; si$1 < seqIndices$1.length; si$1++) {\r\n            var i$9 = seqIndices$1[si$1];\r\n            if (charTypes[i$9] & TYPE_EN) {\r\n              for (var sj$1 = si$1 - 1; sj$1 >= -1; sj$1--) {\r\n                var prevCharType = sj$1 === -1 ? sosType : charTypes[seqIndices$1[sj$1]];\r\n                if (prevCharType & STRONG_TYPES) {\r\n                  if (prevCharType === TYPE_AL) {\r\n                    changeCharType(i$9, TYPE_AN);\r\n                  }\r\n                  break\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // W3. Change all ALs to R\r\n        if (charTypeCounts.get(TYPE_AL)) {\r\n          for (var si$2 = 0; si$2 < seqIndices$1.length; si$2++) {\r\n            var i$10 = seqIndices$1[si$2];\r\n            if (charTypes[i$10] & TYPE_AL) {\r\n              changeCharType(i$10, TYPE_R);\r\n            }\r\n          }\r\n        }\r\n\r\n        // W4. A single European separator between two European numbers changes to a European number. A single common\r\n        // separator between two numbers of the same type changes to that type.\r\n        if (charTypeCounts.get(TYPE_ES) || charTypeCounts.get(TYPE_CS)) {\r\n          for (var si$3 = 1; si$3 < seqIndices$1.length - 1; si$3++) {\r\n            var i$11 = seqIndices$1[si$3];\r\n            if (charTypes[i$11] & (TYPE_ES | TYPE_CS)) {\r\n              var prevType$1 = 0, nextType = 0;\r\n              for (var sj$2 = si$3 - 1; sj$2 >= 0; sj$2--) {\r\n                prevType$1 = charTypes[seqIndices$1[sj$2]];\r\n                if (!(prevType$1 & BN_LIKE_TYPES)) { //5.2\r\n                  break\r\n                }\r\n              }\r\n              for (var sj$3 = si$3 + 1; sj$3 < seqIndices$1.length; sj$3++) {\r\n                nextType = charTypes[seqIndices$1[sj$3]];\r\n                if (!(nextType & BN_LIKE_TYPES)) { //5.2\r\n                  break\r\n                }\r\n              }\r\n              if (prevType$1 === nextType && (charTypes[i$11] === TYPE_ES ? prevType$1 === TYPE_EN : (prevType$1 & (TYPE_EN | TYPE_AN)))) {\r\n                changeCharType(i$11, prevType$1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // W5. A sequence of European terminators adjacent to European numbers changes to all European numbers.\r\n        if (charTypeCounts.get(TYPE_EN)) {\r\n          for (var si$4 = 0; si$4 < seqIndices$1.length; si$4++) {\r\n            var i$12 = seqIndices$1[si$4];\r\n            if (charTypes[i$12] & TYPE_EN) {\r\n              for (var sj$4 = si$4 - 1; sj$4 >= 0 && (charTypes[seqIndices$1[sj$4]] & (TYPE_ET | BN_LIKE_TYPES)); sj$4--) {\r\n                changeCharType(seqIndices$1[sj$4], TYPE_EN);\r\n              }\r\n              for (var sj$5 = si$4 + 1; sj$5 < seqIndices$1.length && (charTypes[seqIndices$1[sj$5]] & (TYPE_ET | BN_LIKE_TYPES)); sj$5++) {\r\n                changeCharType(seqIndices$1[sj$5], TYPE_EN);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // W6. Otherwise, separators and terminators change to Other Neutral.\r\n        if (charTypeCounts.get(TYPE_ET) || charTypeCounts.get(TYPE_ES) || charTypeCounts.get(TYPE_CS)) {\r\n          for (var si$5 = 0; si$5 < seqIndices$1.length; si$5++) {\r\n            var i$13 = seqIndices$1[si$5];\r\n            if (charTypes[i$13] & (TYPE_ET | TYPE_ES | TYPE_CS)) {\r\n              changeCharType(i$13, TYPE_ON);\r\n              // 5.2 transform adjacent BNs too:\r\n              for (var sj$6 = si$5 - 1; sj$6 >= 0 && (charTypes[seqIndices$1[sj$6]] & BN_LIKE_TYPES); sj$6--) {\r\n                changeCharType(seqIndices$1[sj$6], TYPE_ON);\r\n              }\r\n              for (var sj$7 = si$5 + 1; sj$7 < seqIndices$1.length && (charTypes[seqIndices$1[sj$7]] & BN_LIKE_TYPES); sj$7++) {\r\n                changeCharType(seqIndices$1[sj$7], TYPE_ON);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // W7. Search backward from each instance of a European number until the first strong type (R, L, or sos)\r\n        // is found. If an L is found, then change the type of the European number to L.\r\n        // NOTE: implemented in single forward pass for efficiency\r\n        if (charTypeCounts.get(TYPE_EN)) {\r\n          for (var si$6 = 0, prevStrongType = sosType; si$6 < seqIndices$1.length; si$6++) {\r\n            var i$14 = seqIndices$1[si$6];\r\n            var type = charTypes[i$14];\r\n            if (type & TYPE_EN) {\r\n              if (prevStrongType === TYPE_L) {\r\n                changeCharType(i$14, TYPE_L);\r\n              }\r\n            } else if (type & STRONG_TYPES) {\r\n              prevStrongType = type;\r\n            }\r\n          }\r\n        }\r\n\r\n        // === 3.3.5 Resolving Neutral and Isolate Formatting Types ===\r\n\r\n        if (charTypeCounts.get(NEUTRAL_ISOLATE_TYPES)) {\r\n          // N0. Process bracket pairs in an isolating run sequence sequentially in the logical order of the text\r\n          // positions of the opening paired brackets using the logic given below. Within this scope, bidirectional\r\n          // types EN and AN are treated as R.\r\n          var R_TYPES_FOR_N_STEPS = (TYPE_R | TYPE_EN | TYPE_AN);\r\n          var STRONG_TYPES_FOR_N_STEPS = R_TYPES_FOR_N_STEPS | TYPE_L;\r\n\r\n          // * Identify the bracket pairs in the current isolating run sequence according to BD16.\r\n          var bracketPairs = [];\r\n          {\r\n            var openerStack = [];\r\n            for (var si$7 = 0; si$7 < seqIndices$1.length; si$7++) {\r\n              // NOTE: for any potential bracket character we also test that it still carries a NI\r\n              // type, as that may have been changed earlier. This doesn't seem to be explicitly\r\n              // called out in the spec, but is required for passage of certain tests.\r\n              if (charTypes[seqIndices$1[si$7]] & NEUTRAL_ISOLATE_TYPES) {\r\n                var char = string[seqIndices$1[si$7]];\r\n                var oppositeBracket = (void 0);\r\n                // Opening bracket\r\n                if (openingToClosingBracket(char) !== null) {\r\n                  if (openerStack.length < 63) {\r\n                    openerStack.push({ char: char, seqIndex: si$7 });\r\n                  } else {\r\n                    break\r\n                  }\r\n                }\r\n                // Closing bracket\r\n                else if ((oppositeBracket = closingToOpeningBracket(char)) !== null) {\r\n                  for (var stackIdx = openerStack.length - 1; stackIdx >= 0; stackIdx--) {\r\n                    var stackChar = openerStack[stackIdx].char;\r\n                    if (stackChar === oppositeBracket ||\r\n                      stackChar === closingToOpeningBracket(getCanonicalBracket(char)) ||\r\n                      openingToClosingBracket(getCanonicalBracket(stackChar)) === char\r\n                    ) {\r\n                      bracketPairs.push([openerStack[stackIdx].seqIndex, si$7]);\r\n                      openerStack.length = stackIdx; //pop the matching bracket and all following\r\n                      break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            bracketPairs.sort(function (a, b) { return a[0] - b[0]; });\r\n          }\r\n          // * For each bracket-pair element in the list of pairs of text positions\r\n          for (var pairIdx = 0; pairIdx < bracketPairs.length; pairIdx++) {\r\n            var ref$1 = bracketPairs[pairIdx];\r\n            var openSeqIdx = ref$1[0];\r\n            var closeSeqIdx = ref$1[1];\r\n            // a. Inspect the bidirectional types of the characters enclosed within the bracket pair.\r\n            // b. If any strong type (either L or R) matching the embedding direction is found, set the type for both\r\n            // brackets in the pair to match the embedding direction.\r\n            var foundStrongType = false;\r\n            var useStrongType = 0;\r\n            for (var si$8 = openSeqIdx + 1; si$8 < closeSeqIdx; si$8++) {\r\n              var i$15 = seqIndices$1[si$8];\r\n              if (charTypes[i$15] & STRONG_TYPES_FOR_N_STEPS) {\r\n                foundStrongType = true;\r\n                var lr = (charTypes[i$15] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\r\n                if (lr === getEmbedDirection(i$15)) {\r\n                  useStrongType = lr;\r\n                  break\r\n                }\r\n              }\r\n            }\r\n            // c. Otherwise, if there is a strong type it must be opposite the embedding direction. Therefore, test\r\n            // for an established context with a preceding strong type by checking backwards before the opening paired\r\n            // bracket until the first strong type (L, R, or sos) is found.\r\n            //    1. If the preceding strong type is also opposite the embedding direction, context is established, so\r\n            //    set the type for both brackets in the pair to that direction.\r\n            //    2. Otherwise set the type for both brackets in the pair to the embedding direction.\r\n            if (foundStrongType && !useStrongType) {\r\n              useStrongType = sosType;\r\n              for (var si$9 = openSeqIdx - 1; si$9 >= 0; si$9--) {\r\n                var i$16 = seqIndices$1[si$9];\r\n                if (charTypes[i$16] & STRONG_TYPES_FOR_N_STEPS) {\r\n                  var lr$1 = (charTypes[i$16] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\r\n                  if (lr$1 !== getEmbedDirection(i$16)) {\r\n                    useStrongType = lr$1;\r\n                  } else {\r\n                    useStrongType = getEmbedDirection(i$16);\r\n                  }\r\n                  break\r\n                }\r\n              }\r\n            }\r\n            if (useStrongType) {\r\n              charTypes[seqIndices$1[openSeqIdx]] = charTypes[seqIndices$1[closeSeqIdx]] = useStrongType;\r\n              // * Any number of characters that had original bidirectional character type NSM prior to the application\r\n              // of W1 that immediately follow a paired bracket which changed to L or R under N0 should change to match\r\n              // the type of their preceding bracket.\r\n              if (useStrongType !== getEmbedDirection(seqIndices$1[openSeqIdx])) {\r\n                for (var si$10 = openSeqIdx + 1; si$10 < seqIndices$1.length; si$10++) {\r\n                  if (!(charTypes[seqIndices$1[si$10]] & BN_LIKE_TYPES)) {\r\n                    if (getBidiCharType(string[seqIndices$1[si$10]]) & TYPE_NSM) {\r\n                      charTypes[seqIndices$1[si$10]] = useStrongType;\r\n                    }\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n              if (useStrongType !== getEmbedDirection(seqIndices$1[closeSeqIdx])) {\r\n                for (var si$11 = closeSeqIdx + 1; si$11 < seqIndices$1.length; si$11++) {\r\n                  if (!(charTypes[seqIndices$1[si$11]] & BN_LIKE_TYPES)) {\r\n                    if (getBidiCharType(string[seqIndices$1[si$11]]) & TYPE_NSM) {\r\n                      charTypes[seqIndices$1[si$11]] = useStrongType;\r\n                    }\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // N1. A sequence of NIs takes the direction of the surrounding strong text if the text on both sides has the\r\n          // same direction.\r\n          // N2. Any remaining NIs take the embedding direction.\r\n          for (var si$12 = 0; si$12 < seqIndices$1.length; si$12++) {\r\n            if (charTypes[seqIndices$1[si$12]] & NEUTRAL_ISOLATE_TYPES) {\r\n              var niRunStart = si$12, niRunEnd = si$12;\r\n              var prevType$2 = sosType; //si === 0 ? sosType : (charTypes[seqIndices[si - 1]] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L\r\n              for (var si2 = si$12 - 1; si2 >= 0; si2--) {\r\n                if (charTypes[seqIndices$1[si2]] & BN_LIKE_TYPES) {\r\n                  niRunStart = si2; //5.2 treat BNs adjacent to NIs as NIs\r\n                } else {\r\n                  prevType$2 = (charTypes[seqIndices$1[si2]] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\r\n                  break\r\n                }\r\n              }\r\n              var nextType$1 = eosType;\r\n              for (var si2$1 = si$12 + 1; si2$1 < seqIndices$1.length; si2$1++) {\r\n                if (charTypes[seqIndices$1[si2$1]] & (NEUTRAL_ISOLATE_TYPES | BN_LIKE_TYPES)) {\r\n                  niRunEnd = si2$1;\r\n                } else {\r\n                  nextType$1 = (charTypes[seqIndices$1[si2$1]] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\r\n                  break\r\n                }\r\n              }\r\n              for (var sj$8 = niRunStart; sj$8 <= niRunEnd; sj$8++) {\r\n                charTypes[seqIndices$1[sj$8]] = prevType$2 === nextType$1 ? prevType$2 : getEmbedDirection(seqIndices$1[sj$8]);\r\n              }\r\n              si$12 = niRunEnd;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // === 3.3.6 Resolving Implicit Levels ===\r\n\r\n      for (var i$17 = paragraph.start; i$17 <= paragraph.end; i$17++) {\r\n        var level$3 = embedLevels[i$17];\r\n        var type$1 = charTypes[i$17];\r\n        // I2. For all characters with an odd (right-to-left) embedding level, those of type L, EN or AN go up one level.\r\n        if (level$3 & 1) {\r\n          if (type$1 & (TYPE_L | TYPE_EN | TYPE_AN)) {\r\n            embedLevels[i$17]++;\r\n          }\r\n        }\r\n          // I1. For all characters with an even (left-to-right) embedding level, those of type R go up one level\r\n        // and those of type AN or EN go up two levels.\r\n        else {\r\n          if (type$1 & TYPE_R) {\r\n            embedLevels[i$17]++;\r\n          } else if (type$1 & (TYPE_AN | TYPE_EN)) {\r\n            embedLevels[i$17] += 2;\r\n          }\r\n        }\r\n\r\n        // 5.2: Resolve any LRE, RLE, LRO, RLO, PDF, or BN to the level of the preceding character if there is one,\r\n        // and otherwise to the base level.\r\n        if (type$1 & BN_LIKE_TYPES) {\r\n          embedLevels[i$17] = i$17 === 0 ? paragraph.level : embedLevels[i$17 - 1];\r\n        }\r\n\r\n        // 3.4 L1.1-4: Reset the embedding level of segment/paragraph separators, and any sequence of whitespace or\r\n        // isolate formatting characters preceding them or the end of the paragraph, to the paragraph level.\r\n        // NOTE: this will also need to be applied to each individual line ending after line wrapping occurs.\r\n        if (i$17 === paragraph.end || getBidiCharType(string[i$17]) & (TYPE_S | TYPE_B)) {\r\n          for (var j$1 = i$17; j$1 >= 0 && (getBidiCharType(string[j$1]) & TRAILING_TYPES); j$1--) {\r\n            embedLevels[j$1] = paragraph.level;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // DONE! The resolved levels can then be used, after line wrapping, to flip runs of characters\r\n    // according to section 3.4 Reordering Resolved Levels\r\n    return {\r\n      levels: embedLevels,\r\n      paragraphs: paragraphs\r\n    }\r\n\r\n    function determineAutoEmbedLevel (start, isFSI) {\r\n      // 3.3.1 P2 - P3\r\n      for (var i = start; i < string.length; i++) {\r\n        var charType = charTypes[i];\r\n        if (charType & (TYPE_R | TYPE_AL)) {\r\n          return 1\r\n        }\r\n        if ((charType & (TYPE_B | TYPE_L)) || (isFSI && charType === TYPE_PDI)) {\r\n          return 0\r\n        }\r\n        if (charType & ISOLATE_INIT_TYPES) {\r\n          var pdi = indexOfMatchingPDI(i);\r\n          i = pdi === -1 ? string.length : pdi;\r\n        }\r\n      }\r\n      return 0\r\n    }\r\n\r\n    function indexOfMatchingPDI (isolateStart) {\r\n      // 3.1.2 BD9\r\n      var isolationLevel = 1;\r\n      for (var i = isolateStart + 1; i < string.length; i++) {\r\n        var charType = charTypes[i];\r\n        if (charType & TYPE_B) {\r\n          break\r\n        }\r\n        if (charType & TYPE_PDI) {\r\n          if (--isolationLevel === 0) {\r\n            return i\r\n          }\r\n        } else if (charType & ISOLATE_INIT_TYPES) {\r\n          isolationLevel++;\r\n        }\r\n      }\r\n      return -1\r\n    }\r\n\r\n    function getEmbedDirection (i) {\r\n      return (embedLevels[i] & 1) ? TYPE_R : TYPE_L\r\n    }\r\n\r\n  }\r\n\r\n  // Bidi mirrored chars data, auto generated\r\n  var data = \"14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1\";\r\n\r\n  var mirrorMap;\r\n\r\n  function parse () {\r\n    if (!mirrorMap) {\r\n      //const start = performance.now()\r\n      var ref = parseCharacterMap(data, true);\r\n      var map = ref.map;\r\n      var reverseMap = ref.reverseMap;\r\n      // Combine both maps into one\r\n      reverseMap.forEach(function (value, key) {\r\n        map.set(key, value);\r\n      });\r\n      mirrorMap = map;\r\n      //console.log(`mirrored chars parsed in ${performance.now() - start}ms`)\r\n    }\r\n  }\r\n\r\n  function getMirroredCharacter (char) {\r\n    parse();\r\n    return mirrorMap.get(char) || null\r\n  }\r\n\r\n  /**\r\n   * Given a string and its resolved embedding levels, build a map of indices to replacement chars\r\n   * for any characters in right-to-left segments that have defined mirrored characters.\r\n   * @param string\r\n   * @param embeddingLevels\r\n   * @param [start]\r\n   * @param [end]\r\n   * @return {Map<number, string>}\r\n   */\r\n  function getMirroredCharactersMap(string, embeddingLevels, start, end) {\r\n    var strLen = string.length;\r\n    start = Math.max(0, start == null ? 0 : +start);\r\n    end = Math.min(strLen - 1, end == null ? strLen - 1 : +end);\r\n\r\n    var map = new Map();\r\n    for (var i = start; i <= end; i++) {\r\n      if (embeddingLevels[i] & 1) { //only odd (rtl) levels\r\n        var mirror = getMirroredCharacter(string[i]);\r\n        if (mirror !== null) {\r\n          map.set(i, mirror);\r\n        }\r\n      }\r\n    }\r\n    return map\r\n  }\r\n\r\n  /**\r\n   * Given a start and end denoting a single line within a string, and a set of precalculated\r\n   * bidi embedding levels, produce a list of segments whose ordering should be flipped, in sequence.\r\n   * @param {string} string - the full input string\r\n   * @param {GetEmbeddingLevelsResult} embeddingLevelsResult - the result object from getEmbeddingLevels\r\n   * @param {number} [start] - first character in a subset of the full string\r\n   * @param {number} [end] - last character in a subset of the full string\r\n   * @return {number[][]} - the list of start/end segments that should be flipped, in order.\r\n   */\r\n  function getReorderSegments(string, embeddingLevelsResult, start, end) {\r\n    var strLen = string.length;\r\n    start = Math.max(0, start == null ? 0 : +start);\r\n    end = Math.min(strLen - 1, end == null ? strLen - 1 : +end);\r\n\r\n    var segments = [];\r\n    embeddingLevelsResult.paragraphs.forEach(function (paragraph) {\r\n      var lineStart = Math.max(start, paragraph.start);\r\n      var lineEnd = Math.min(end, paragraph.end);\r\n      if (lineStart < lineEnd) {\r\n        // Local slice for mutation\r\n        var lineLevels = embeddingLevelsResult.levels.slice(lineStart, lineEnd + 1);\r\n\r\n        // 3.4 L1.4: Reset any sequence of whitespace characters and/or isolate formatting characters at the\r\n        // end of the line to the paragraph level.\r\n        for (var i = lineEnd; i >= lineStart && (getBidiCharType(string[i]) & TRAILING_TYPES); i--) {\r\n          lineLevels[i] = paragraph.level;\r\n        }\r\n\r\n        // L2. From the highest level found in the text to the lowest odd level on each line, including intermediate levels\r\n        // not actually present in the text, reverse any contiguous sequence of characters that are at that level or higher.\r\n        var maxLevel = paragraph.level;\r\n        var minOddLevel = Infinity;\r\n        for (var i$1 = 0; i$1 < lineLevels.length; i$1++) {\r\n          var level = lineLevels[i$1];\r\n          if (level > maxLevel) { maxLevel = level; }\r\n          if (level < minOddLevel) { minOddLevel = level | 1; }\r\n        }\r\n        for (var lvl = maxLevel; lvl >= minOddLevel; lvl--) {\r\n          for (var i$2 = 0; i$2 < lineLevels.length; i$2++) {\r\n            if (lineLevels[i$2] >= lvl) {\r\n              var segStart = i$2;\r\n              while (i$2 + 1 < lineLevels.length && lineLevels[i$2 + 1] >= lvl) {\r\n                i$2++;\r\n              }\r\n              if (i$2 > segStart) {\r\n                segments.push([segStart + start, i$2 + start]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return segments\r\n  }\r\n\r\n  /**\r\n   * @param {string} string\r\n   * @param {GetEmbeddingLevelsResult} embedLevelsResult\r\n   * @param {number} [start]\r\n   * @param {number} [end]\r\n   * @return {string} the new string with bidi segments reordered\r\n   */\r\n  function getReorderedString(string, embedLevelsResult, start, end) {\r\n    var indices = getReorderedIndices(string, embedLevelsResult, start, end);\r\n    var chars = [].concat( string );\r\n    indices.forEach(function (charIndex, i) {\r\n      chars[i] = (\r\n        (embedLevelsResult.levels[charIndex] & 1) ? getMirroredCharacter(string[charIndex]) : null\r\n      ) || string[charIndex];\r\n    });\r\n    return chars.join('')\r\n  }\r\n\r\n  /**\r\n   * @param {string} string\r\n   * @param {GetEmbeddingLevelsResult} embedLevelsResult\r\n   * @param {number} [start]\r\n   * @param {number} [end]\r\n   * @return {number[]} an array with character indices in their new bidi order\r\n   */\r\n  function getReorderedIndices(string, embedLevelsResult, start, end) {\r\n    var segments = getReorderSegments(string, embedLevelsResult, start, end);\r\n    // Fill an array with indices\r\n    var indices = [];\r\n    for (var i = 0; i < string.length; i++) {\r\n      indices[i] = i;\r\n    }\r\n    // Reverse each segment in order\r\n    segments.forEach(function (ref) {\r\n      var start = ref[0];\r\n      var end = ref[1];\r\n\r\n      var slice = indices.slice(start, end + 1);\r\n      for (var i = slice.length; i--;) {\r\n        indices[end - i] = slice[i];\r\n      }\r\n    });\r\n    return indices\r\n  }\r\n\r\n  exports.closingToOpeningBracket = closingToOpeningBracket;\r\n  exports.getBidiCharType = getBidiCharType;\r\n  exports.getBidiCharTypeName = getBidiCharTypeName;\r\n  exports.getCanonicalBracket = getCanonicalBracket;\r\n  exports.getEmbeddingLevels = getEmbeddingLevels;\r\n  exports.getMirroredCharacter = getMirroredCharacter;\r\n  exports.getMirroredCharactersMap = getMirroredCharactersMap;\r\n  exports.getReorderSegments = getReorderSegments;\r\n  exports.getReorderedIndices = getReorderedIndices;\r\n  exports.getReorderedString = getReorderedString;\r\n  exports.openingToClosingBracket = openingToClosingBracket;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n  return exports;\r\n\r\n}({}));\r\nreturn bidi}\r\n\r\nexport default bidiFactory;\r\n", "import { ShaderChunk, UniformsUtils, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, ShaderLib, Matrix4, Vector3, Mesh, CylinderBufferGeometry, Vector2, MeshStandardMaterial, DoubleSide } from 'three';\r\n\r\n/**\r\n * Regular expression for matching the `void main() {` opener line in GLSL.\r\n * @type {RegExp}\r\n */\r\nconst voidMainRegExp = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\r\n\r\n/**\r\n * Recursively expands all `#include <xyz>` statements within string of shader code.\r\n * Copied from three's WebGLProgram#parseIncludes for external use.\r\n *\r\n * @param {string} source - The GLSL source code to evaluate\r\n * @return {string} The GLSL code with all includes expanded\r\n */\r\nfunction expandShaderIncludes( source ) {\r\n  const pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n  function replace(match, include) {\r\n    let chunk = ShaderChunk[include];\r\n    return chunk ? expandShaderIncludes(chunk) : match\r\n  }\r\n  return source.replace( pattern, replace )\r\n}\r\n\r\n/*\r\n * This is a direct copy of MathUtils.generateUUID from Three.js, to preserve compatibility with three\r\n * versions before 0.113.0 as it was changed from Math to MathUtils in that version.\r\n * https://github.com/mrdoob/three.js/blob/dd8b5aa3b270c17096b90945cd2d6d1b13aaec53/src/math/MathUtils.js#L16\r\n */\r\n\r\nconst _lut = [];\r\n\r\nfor (let i = 0; i < 256; i++) {\r\n  _lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\r\n}\r\n\r\nfunction generateUUID() {\r\n\r\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n  const d0 = Math.random() * 0xffffffff | 0;\r\n  const d1 = Math.random() * 0xffffffff | 0;\r\n  const d2 = Math.random() * 0xffffffff | 0;\r\n  const d3 = Math.random() * 0xffffffff | 0;\r\n  const uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' +\r\n    _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' +\r\n    _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] +\r\n    _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff];\r\n\r\n  // .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n  return uuid.toUpperCase()\r\n\r\n}\r\n\r\n// Local assign polyfill to avoid importing troika-core\r\nconst assign = Object.assign || function(/*target, ...sources*/) {\r\n  let target = arguments[0];\r\n  for (let i = 1, len = arguments.length; i < len; i++) {\r\n    let source = arguments[i];\r\n    if (source) {\r\n      for (let prop in source) {\r\n        if (source.hasOwnProperty(prop)) {\r\n          target[prop] = source[prop];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return target\r\n};\r\n\r\n\r\nconst epoch = Date.now();\r\nconst CONSTRUCTOR_CACHE = new WeakMap();\r\nconst SHADER_UPGRADE_CACHE = new Map();\r\n\r\n// Material ids must be integers, but we can't access the increment from Three's `Material` module,\r\n// so let's choose a sufficiently large starting value that should theoretically never collide.\r\nlet materialInstanceId = 1e10;\r\n\r\n/**\r\n * A utility for creating a custom shader material derived from another material's\r\n * shaders. This allows you to inject custom shader logic and transforms into the\r\n * builtin ThreeJS materials without having to recreate them from scratch.\r\n *\r\n * @param {THREE.Material} baseMaterial - the original material to derive from\r\n *\r\n * @param {Object} options - How the base material should be modified.\r\n * @param {Object} options.defines - Custom `defines` for the material\r\n * @param {Object} options.extensions - Custom `extensions` for the material, e.g. `{derivatives: true}`\r\n * @param {Object} options.uniforms - Custom `uniforms` for use in the modified shader. These can\r\n *        be accessed and manipulated via the resulting material's `uniforms` property, just like\r\n *        in a ShaderMaterial. You do not need to repeat the base material's own uniforms here.\r\n * @param {String} options.timeUniform - If specified, a uniform of this name will be injected into\r\n *        both shaders, and it will automatically be updated on each render frame with a number of\r\n *        elapsed milliseconds. The \"zero\" epoch time is not significant so don't rely on this as a\r\n *        true calendar time.\r\n * @param {String} options.vertexDefs - Custom GLSL code to inject into the vertex shader's top-level\r\n *        definitions, above the `void main()` function.\r\n * @param {String} options.vertexMainIntro - Custom GLSL code to inject at the top of the vertex\r\n *        shader's `void main` function.\r\n * @param {String} options.vertexMainOutro - Custom GLSL code to inject at the end of the vertex\r\n *        shader's `void main` function.\r\n * @param {String} options.vertexTransform - Custom GLSL code to manipulate the `position`, `normal`,\r\n *        and/or `uv` vertex attributes. This code will be wrapped within a standalone function with\r\n *        those attributes exposed by their normal names as read/write values.\r\n * @param {String} options.fragmentDefs - Custom GLSL code to inject into the fragment shader's top-level\r\n *        definitions, above the `void main()` function.\r\n * @param {String} options.fragmentMainIntro - Custom GLSL code to inject at the top of the fragment\r\n *        shader's `void main` function.\r\n * @param {String} options.fragmentMainOutro - Custom GLSL code to inject at the end of the fragment\r\n *        shader's `void main` function. You can manipulate `gl_FragColor` here but keep in mind it goes\r\n *        after any of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), so if you\r\n *        want those to apply to your changes use `fragmentColorTransform` instead.\r\n * @param {String} options.fragmentColorTransform - Custom GLSL code to manipulate the `gl_FragColor`\r\n *        output value. Will be injected near the end of the `void main` function, but before any\r\n *        of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), and before the\r\n *        `fragmentMainOutro`.\r\n * @param {function<{vertexShader,fragmentShader}>:{vertexShader,fragmentShader}} options.customRewriter - A function\r\n *        for performing custom rewrites of the full shader code. Useful if you need to do something\r\n *        special that's not covered by the other builtin options. This function will be executed before\r\n *        any other transforms are applied.\r\n * @param {boolean} options.chained - Set to `true` to prototype-chain the derived material to the base\r\n *        material, rather than the default behavior of copying it. This allows the derived material to\r\n *        automatically pick up changes made to the base material and its properties. This can be useful\r\n *        where the derived material is hidden from the user as an implementation detail, allowing them\r\n *        to work with the original material like normal. But it can result in unexpected behavior if not\r\n *        handled carefully.\r\n *\r\n * @return {THREE.Material}\r\n *\r\n * The returned material will also have two new methods, `getDepthMaterial()` and `getDistanceMaterial()`,\r\n * which can be called to get a variant of the derived material for use in shadow casting. If the\r\n * target mesh is expected to cast shadows, then you can assign these to the mesh's `customDepthMaterial`\r\n * (for directional and spot lights) and/or `customDistanceMaterial` (for point lights) properties to\r\n * allow the cast shadow to honor your derived shader's vertex transforms and discarded fragments. These\r\n * will also set a custom `#define IS_DEPTH_MATERIAL` or `#define IS_DISTANCE_MATERIAL` that you can look\r\n * for in your derived shaders with `#ifdef` to customize their behavior for the depth or distance\r\n * scenarios, e.g. skipping antialiasing or expensive shader logic.\r\n */\r\nfunction createDerivedMaterial(baseMaterial, options) {\r\n  // Generate a key that is unique to the content of these `options`. We'll use this\r\n  // throughout for caching and for generating the upgraded shader code. This increases\r\n  // the likelihood that the resulting shaders will line up across multiple calls so\r\n  // their GL programs can be shared and cached.\r\n  const optionsKey = getKeyForOptions(options);\r\n\r\n  // First check to see if we've already derived from this baseMaterial using this\r\n  // unique set of options, and if so reuse the constructor to avoid some allocations.\r\n  let ctorsByDerivation = CONSTRUCTOR_CACHE.get(baseMaterial);\r\n  if (!ctorsByDerivation) {\r\n    CONSTRUCTOR_CACHE.set(baseMaterial, (ctorsByDerivation = Object.create(null)));\r\n  }\r\n  if (ctorsByDerivation[optionsKey]) {\r\n    return new ctorsByDerivation[optionsKey]()\r\n  }\r\n\r\n  const privateBeforeCompileProp = `_onBeforeCompile${optionsKey}`;\r\n\r\n  // Private onBeforeCompile handler that injects the modified shaders and uniforms when\r\n  // the renderer switches to this material's program\r\n  const onBeforeCompile = function (shaderInfo) {\r\n    baseMaterial.onBeforeCompile.call(this, shaderInfo);\r\n\r\n    // Upgrade the shaders, caching the result by incoming source code\r\n    const cacheKey = this.customProgramCacheKey() + '|' + shaderInfo.vertexShader + '|' + shaderInfo.fragmentShader;\r\n    let upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey];\r\n    if (!upgradedShaders) {\r\n      const upgraded = upgradeShaders(shaderInfo, options, optionsKey);\r\n      upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey] = upgraded;\r\n    }\r\n\r\n    // Inject upgraded shaders and uniforms into the program\r\n    shaderInfo.vertexShader = upgradedShaders.vertexShader;\r\n    shaderInfo.fragmentShader = upgradedShaders.fragmentShader;\r\n    assign(shaderInfo.uniforms, this.uniforms);\r\n\r\n    // Inject auto-updating time uniform if requested\r\n    if (options.timeUniform) {\r\n      shaderInfo.uniforms[options.timeUniform] = {\r\n        get value() {return Date.now() - epoch}\r\n      };\r\n    }\r\n\r\n    // Users can still add their own handlers on top of ours\r\n    if (this[privateBeforeCompileProp]) {\r\n      this[privateBeforeCompileProp](shaderInfo);\r\n    }\r\n  };\r\n\r\n  const DerivedMaterial = function DerivedMaterial() {\r\n    return derive(options.chained ? baseMaterial : baseMaterial.clone())\r\n  };\r\n\r\n  const derive = function(base) {\r\n    // Prototype chain to the base material\r\n    const derived = Object.create(base, descriptor);\r\n\r\n    // Store the baseMaterial for reference; this is always the original even when cloning\r\n    Object.defineProperty(derived, 'baseMaterial', { value: baseMaterial });\r\n\r\n    // Needs its own ids\r\n    Object.defineProperty(derived, 'id', { value: materialInstanceId++ });\r\n    derived.uuid = generateUUID();\r\n\r\n    // Merge uniforms, defines, and extensions\r\n    derived.uniforms = assign({}, base.uniforms, options.uniforms);\r\n    derived.defines = assign({}, base.defines, options.defines);\r\n    derived.defines[`TROIKA_DERIVED_MATERIAL_${optionsKey}`] = ''; //force a program change from the base material\r\n    derived.extensions = assign({}, base.extensions, options.extensions);\r\n\r\n    // Don't inherit EventDispatcher listeners\r\n    derived._listeners = undefined;\r\n\r\n    return derived\r\n  };\r\n\r\n  const descriptor = {\r\n    constructor: {value: DerivedMaterial},\r\n    isDerivedMaterial: {value: true},\r\n\r\n    customProgramCacheKey: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function () {\r\n        return baseMaterial.customProgramCacheKey() + '|' + optionsKey\r\n      }\r\n    },\r\n\r\n    onBeforeCompile: {\r\n      get() {\r\n        return onBeforeCompile\r\n      },\r\n      set(fn) {\r\n        this[privateBeforeCompileProp] = fn;\r\n      }\r\n    },\r\n\r\n    copy: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function (source) {\r\n        baseMaterial.copy.call(this, source);\r\n        if (!baseMaterial.isShaderMaterial && !baseMaterial.isDerivedMaterial) {\r\n          assign(this.extensions, source.extensions);\r\n          assign(this.defines, source.defines);\r\n          assign(this.uniforms, UniformsUtils.clone(source.uniforms));\r\n        }\r\n        return this\r\n      }\r\n    },\r\n\r\n    clone: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function () {\r\n        const newBase = new baseMaterial.constructor();\r\n        return derive(newBase).copy(this)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Utility to get a MeshDepthMaterial that will honor this derived material's vertex\r\n     * transformations and discarded fragments.\r\n     */\r\n    getDepthMaterial: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function() {\r\n        let depthMaterial = this._depthMaterial;\r\n        if (!depthMaterial) {\r\n          depthMaterial = this._depthMaterial = createDerivedMaterial(\r\n            baseMaterial.isDerivedMaterial\r\n              ? baseMaterial.getDepthMaterial()\r\n              : new MeshDepthMaterial({ depthPacking: RGBADepthPacking }),\r\n            options\r\n          );\r\n          depthMaterial.defines.IS_DEPTH_MATERIAL = '';\r\n          depthMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\r\n        }\r\n        return depthMaterial\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex\r\n     * transformations and discarded fragments.\r\n     */\r\n    getDistanceMaterial: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function() {\r\n        let distanceMaterial = this._distanceMaterial;\r\n        if (!distanceMaterial) {\r\n          distanceMaterial = this._distanceMaterial = createDerivedMaterial(\r\n            baseMaterial.isDerivedMaterial\r\n              ? baseMaterial.getDistanceMaterial()\r\n              : new MeshDistanceMaterial(),\r\n            options\r\n          );\r\n          distanceMaterial.defines.IS_DISTANCE_MATERIAL = '';\r\n          distanceMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\r\n        }\r\n        return distanceMaterial\r\n      }\r\n    },\r\n\r\n    dispose: {\r\n      writable: true,\r\n      configurable: true,\r\n      value() {\r\n        const {_depthMaterial, _distanceMaterial} = this;\r\n        if (_depthMaterial) _depthMaterial.dispose();\r\n        if (_distanceMaterial) _distanceMaterial.dispose();\r\n        baseMaterial.dispose.call(this);\r\n      }\r\n    }\r\n  };\r\n\r\n  ctorsByDerivation[optionsKey] = DerivedMaterial;\r\n  return new DerivedMaterial()\r\n}\r\n\r\n\r\nfunction upgradeShaders({vertexShader, fragmentShader}, options, key) {\r\n  let {\r\n    vertexDefs,\r\n    vertexMainIntro,\r\n    vertexMainOutro,\r\n    vertexTransform,\r\n    fragmentDefs,\r\n    fragmentMainIntro,\r\n    fragmentMainOutro,\r\n    fragmentColorTransform,\r\n    customRewriter,\r\n    timeUniform\r\n  } = options;\r\n\r\n  vertexDefs = vertexDefs || '';\r\n  vertexMainIntro = vertexMainIntro || '';\r\n  vertexMainOutro = vertexMainOutro || '';\r\n  fragmentDefs = fragmentDefs || '';\r\n  fragmentMainIntro = fragmentMainIntro || '';\r\n  fragmentMainOutro = fragmentMainOutro || '';\r\n\r\n  // Expand includes if needed\r\n  if (vertexTransform || customRewriter) {\r\n    vertexShader = expandShaderIncludes(vertexShader);\r\n  }\r\n  if (fragmentColorTransform || customRewriter) {\r\n    // We need to be able to find postprocessing chunks after include expansion in order to\r\n    // put them after the fragmentColorTransform, so mark them with comments first. Even if\r\n    // this particular derivation doesn't have a fragmentColorTransform, other derivations may,\r\n    // so we still mark them.\r\n    fragmentShader = fragmentShader.replace(\r\n      /^[ \\t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,\r\n      '\\n//!BEGIN_POST_CHUNK $1\\n$&\\n//!END_POST_CHUNK\\n'\r\n    );\r\n    fragmentShader = expandShaderIncludes(fragmentShader);\r\n  }\r\n\r\n  // Apply custom rewriter function\r\n  if (customRewriter) {\r\n    let res = customRewriter({vertexShader, fragmentShader});\r\n    vertexShader = res.vertexShader;\r\n    fragmentShader = res.fragmentShader;\r\n  }\r\n\r\n  // The fragmentColorTransform needs to go before any postprocessing chunks, so extract\r\n  // those and re-insert them into the outro in the correct place:\r\n  if (fragmentColorTransform) {\r\n    let postChunks = [];\r\n    fragmentShader = fragmentShader.replace(\r\n      /^\\/\\/!BEGIN_POST_CHUNK[^]+?^\\/\\/!END_POST_CHUNK/gm, // [^]+? = non-greedy match of any chars including newlines\r\n      match => {\r\n        postChunks.push(match);\r\n        return ''\r\n      }\r\n    );\r\n    fragmentMainOutro = `${fragmentColorTransform}\\n${postChunks.join('\\n')}\\n${fragmentMainOutro}`;\r\n  }\r\n\r\n  // Inject auto-updating time uniform if requested\r\n  if (timeUniform) {\r\n    const code = `\\nuniform float ${timeUniform};\\n`;\r\n    vertexDefs = code + vertexDefs;\r\n    fragmentDefs = code + fragmentDefs;\r\n  }\r\n\r\n  // Inject a function for the vertexTransform and rename all usages of position/normal/uv\r\n  if (vertexTransform) {\r\n    // Hoist these defs to the very top so they work in other function defs\r\n    vertexShader = `vec3 troika_position_${key};\r\nvec3 troika_normal_${key};\r\nvec2 troika_uv_${key};\r\n${vertexShader}\r\n`;\r\n    vertexDefs = `${vertexDefs}\r\nvoid troikaVertexTransform${key}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\r\n  ${vertexTransform}\r\n}\r\n`;\r\n    vertexMainIntro = `\r\ntroika_position_${key} = vec3(position);\r\ntroika_normal_${key} = vec3(normal);\r\ntroika_uv_${key} = vec2(uv);\r\ntroikaVertexTransform${key}(troika_position_${key}, troika_normal_${key}, troika_uv_${key});\r\n${vertexMainIntro}\r\n`;\r\n    vertexShader = vertexShader.replace(/\\b(position|normal|uv)\\b/g, (match, match1, index, fullStr) => {\r\n      return /\\battribute\\s+vec[23]\\s+$/.test(fullStr.substr(0, index)) ? match1 : `troika_${match1}_${key}`\r\n    });\r\n  }\r\n\r\n  // Inject defs and intro/outro snippets\r\n  vertexShader = injectIntoShaderCode(vertexShader, key, vertexDefs, vertexMainIntro, vertexMainOutro);\r\n  fragmentShader = injectIntoShaderCode(fragmentShader, key, fragmentDefs, fragmentMainIntro, fragmentMainOutro);\r\n\r\n  return {\r\n    vertexShader,\r\n    fragmentShader\r\n  }\r\n}\r\n\r\nfunction injectIntoShaderCode(shaderCode, id, defs, intro, outro) {\r\n  if (intro || outro || defs) {\r\n    shaderCode = shaderCode.replace(voidMainRegExp, `\r\n${defs}\r\nvoid troikaOrigMain${id}() {`\r\n    );\r\n    shaderCode += `\r\nvoid main() {\r\n  ${intro}\r\n  troikaOrigMain${id}();\r\n  ${outro}\r\n}`;\r\n  }\r\n  return shaderCode\r\n}\r\n\r\n\r\nfunction optionsJsonReplacer(key, value) {\r\n  return key === 'uniforms' ? undefined : typeof value === 'function' ? value.toString() : value\r\n}\r\n\r\nlet _idCtr = 0;\r\nconst optionsHashesToIds = new Map();\r\nfunction getKeyForOptions(options) {\r\n  const optionsHash = JSON.stringify(options, optionsJsonReplacer);\r\n  let id = optionsHashesToIds.get(optionsHash);\r\n  if (id == null) {\r\n    optionsHashesToIds.set(optionsHash, (id = ++_idCtr));\r\n  }\r\n  return id\r\n}\r\n\r\n// Copied from threejs WebGLPrograms.js so we can resolve builtin materials to their shaders\r\n// TODO how can we keep this from getting stale?\r\nconst MATERIAL_TYPES_TO_SHADERS = {\r\n  MeshDepthMaterial: 'depth',\r\n  MeshDistanceMaterial: 'distanceRGBA',\r\n  MeshNormalMaterial: 'normal',\r\n  MeshBasicMaterial: 'basic',\r\n  MeshLambertMaterial: 'lambert',\r\n  MeshPhongMaterial: 'phong',\r\n  MeshToonMaterial: 'toon',\r\n  MeshStandardMaterial: 'physical',\r\n  MeshPhysicalMaterial: 'physical',\r\n  MeshMatcapMaterial: 'matcap',\r\n  LineBasicMaterial: 'basic',\r\n  LineDashedMaterial: 'dashed',\r\n  PointsMaterial: 'points',\r\n  ShadowMaterial: 'shadow',\r\n  SpriteMaterial: 'sprite'\r\n};\r\n\r\n/**\r\n * Given a Three.js `Material` instance, find the shaders/uniforms that will be\r\n * used to render that material.\r\n *\r\n * @param material - the Material instance\r\n * @return {object} - the material's shader info: `{uniforms:{}, fragmentShader:'', vertexShader:''}`\r\n */\r\nfunction getShadersForMaterial(material) {\r\n  let builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\r\n  return builtinType ? ShaderLib[builtinType] : material //TODO fallback for unknown type?\r\n}\r\n\r\n/**\r\n * Find all uniforms and their types within a shader code string.\r\n *\r\n * @param {string} shader - The shader code to parse\r\n * @return {object} mapping of uniform names to their glsl type\r\n */\r\nfunction getShaderUniformTypes(shader) {\r\n  let uniformRE = /\\buniform\\s+(int|float|vec[234]|mat[34])\\s+([A-Za-z_][\\w]*)/g;\r\n  let uniforms = Object.create(null);\r\n  let match;\r\n  while ((match = uniformRE.exec(shader)) !== null) {\r\n    uniforms[match[2]] = match[1];\r\n  }\r\n  return uniforms\r\n}\r\n\r\n/**\r\n * Helper for smoothing out the `m.getInverse(x)` --> `m.copy(x).invert()` conversion\r\n * that happened in ThreeJS r123.\r\n * @param {Matrix4} srcMatrix\r\n * @param {Matrix4} [tgtMatrix]\r\n */\r\nfunction invertMatrix4(srcMatrix, tgtMatrix = new Matrix4()) {\r\n  if (typeof tgtMatrix.invert === 'function') {\r\n    tgtMatrix.copy(srcMatrix).invert();\r\n  } else {\r\n    tgtMatrix.getInverse(srcMatrix);\r\n  }\r\n  return tgtMatrix\r\n}\r\n\r\n/*\r\nInput geometry is a cylinder with r=1, height in y dimension from 0 to 1,\r\ndivided into a reasonable number of height segments.\r\n*/\r\n\r\nconst vertexDefs = `\r\nuniform vec3 pointA;\r\nuniform vec3 controlA;\r\nuniform vec3 controlB;\r\nuniform vec3 pointB;\r\nuniform float radius;\r\nvarying float bezierT;\r\n\r\nvec3 cubicBezier(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\r\n  float t2 = 1.0 - t;\r\n  float b0 = t2 * t2 * t2;\r\n  float b1 = 3.0 * t * t2 * t2;\r\n  float b2 = 3.0 * t * t * t2;\r\n  float b3 = t * t * t;\r\n  return b0 * p1 + b1 * c1 + b2 * c2 + b3 * p2;\r\n}\r\n\r\nvec3 cubicBezierDerivative(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\r\n  float t2 = 1.0 - t;\r\n  return -3.0 * p1 * t2 * t2 +\r\n    c1 * (3.0 * t2 * t2 - 6.0 * t2 * t) +\r\n    c2 * (6.0 * t2 * t - 3.0 * t * t) +\r\n    3.0 * p2 * t * t;\r\n}\r\n`;\r\n\r\nconst vertexTransform = `\r\nfloat t = position.y;\r\nbezierT = t;\r\nvec3 bezierCenterPos = cubicBezier(pointA, controlA, controlB, pointB, t);\r\nvec3 bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t));\r\n\r\n// Make \"sideways\" always perpendicular to the camera ray; this ensures that any twists\r\n// in the cylinder occur where you won't see them: \r\nvec3 viewDirection = normalMatrix * vec3(0.0, 0.0, 1.0);\r\nif (bezierDir == viewDirection) {\r\n  bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t == 1.0 ? t - 0.0001 : t + 0.0001));\r\n}\r\nvec3 sideways = normalize(cross(bezierDir, viewDirection));\r\nvec3 upish = normalize(cross(sideways, bezierDir));\r\n\r\n// Build a matrix for transforming this disc in the cylinder:\r\nmat4 discTx;\r\ndiscTx[0].xyz = sideways * radius;\r\ndiscTx[1].xyz = bezierDir * radius;\r\ndiscTx[2].xyz = upish * radius;\r\ndiscTx[3].xyz = bezierCenterPos;\r\ndiscTx[3][3] = 1.0;\r\n\r\n// Apply transform, ignoring original y\r\nposition = (discTx * vec4(position.x, 0.0, position.z, 1.0)).xyz;\r\nnormal = normalize(mat3(discTx) * normal);\r\n`;\r\n\r\nconst fragmentDefs = `\r\nuniform vec3 dashing;\r\nvarying float bezierT;\r\n`;\r\n\r\nconst fragmentMainIntro = `\r\nif (dashing.x + dashing.y > 0.0) {\r\n  float dashFrac = mod(bezierT - dashing.z, dashing.x + dashing.y);\r\n  if (dashFrac > dashing.x) {\r\n    discard;\r\n  }\r\n}\r\n`;\r\n\r\n// Debugging: separate color for each of the 6 sides:\r\n// const fragmentColorTransform = `\r\n// float sideNum = floor(vUV.x * 6.0);\r\n// vec3 mixColor = sideNum < 1.0 ? vec3(1.0, 0.0, 0.0) :\r\n//   sideNum < 2.0 ? vec3(0.0, 1.0, 1.0) :\r\n//   sideNum < 3.0 ? vec3(1.0, 1.0, 0.0) :\r\n//   sideNum < 4.0 ? vec3(0.0, 0.0, 1.0) :\r\n//   sideNum < 5.0 ? vec3(0.0, 1.0, 0.0) :\r\n//   vec3(1.0, 0.0, 1.0);\r\n// gl_FragColor.xyz = mix(gl_FragColor.xyz, mixColor, 0.5);\r\n// `\r\n\r\n\r\n\r\nfunction createBezierMeshMaterial(baseMaterial) {\r\n  return createDerivedMaterial(\r\n    baseMaterial,\r\n    {\r\n      chained: true,\r\n      uniforms: {\r\n        pointA: {value: new Vector3()},\r\n        controlA: {value: new Vector3()},\r\n        controlB: {value: new Vector3()},\r\n        pointB: {value: new Vector3()},\r\n        radius: {value: 0.01},\r\n        dashing: {value: new Vector3()} //on, off, offset\r\n      },\r\n      vertexDefs,\r\n      vertexTransform,\r\n      fragmentDefs,\r\n      fragmentMainIntro\r\n    }\r\n  )\r\n}\r\n\r\nlet geometry = null;\r\n\r\nconst defaultBaseMaterial = /*#__PURE__*/new MeshStandardMaterial({color: 0xffffff, side: DoubleSide});\r\n\r\n\r\n/**\r\n * A ThreeJS `Mesh` that bends a tube shape along a 3D cubic bezier path. The bending is done\r\n * by deforming a straight cylindrical geometry in the vertex shader based on a set of four\r\n * control point uniforms. It patches the necessary GLSL into the mesh's assigned `material`\r\n * automatically.\r\n *\r\n * The cubiz bezier path is determined by its four `Vector3` properties:\r\n * - `pointA`\r\n * - `controlA`\r\n * - `controlB`\r\n * - `pointB`\r\n *\r\n * The tube's radius is controlled by its `radius` property, which defaults to `0.01`.\r\n *\r\n * You can also give the tube a dashed appearance with two properties:\r\n *\r\n * - `dashArray` - an array of two numbers, defining the length of \"on\" and \"off\" parts of\r\n *   the dash. Each is a 0-1 ratio of the entire path's length. (Actually this is the `t` length\r\n *   used as input to the cubic bezier function, not its visible length.)\r\n * - `dashOffset` - offset of where the dash starts. You can animate this to make the dashes move.\r\n *\r\n * Note that the dashes will appear like a hollow tube, not solid. This will be more apparent on\r\n * thicker tubes.\r\n *\r\n * TODO: proper geometry bounding sphere and raycasting\r\n * TODO: allow control of the geometry's segment counts\r\n */\r\nclass BezierMesh extends Mesh {\r\n  static getGeometry() {\r\n    return geometry || (geometry =\r\n      new CylinderBufferGeometry(1, 1, 1, 6, 64).translate(0, 0.5, 0)\r\n    )\r\n  }\r\n\r\n  constructor() {\r\n    super(\r\n      BezierMesh.getGeometry(),\r\n      defaultBaseMaterial\r\n    );\r\n\r\n    this.pointA = new Vector3();\r\n    this.controlA = new Vector3();\r\n    this.controlB = new Vector3();\r\n    this.pointB = new Vector3();\r\n    this.radius = 0.01;\r\n    this.dashArray = new Vector2();\r\n    this.dashOffset = 0;\r\n\r\n    // TODO - disabling frustum culling until I figure out how to customize the\r\n    //  geometry's bounding sphere that gets used\r\n    this.frustumCulled = false;\r\n  }\r\n\r\n  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\r\n  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\r\n  get material() {\r\n    let derivedMaterial = this._derivedMaterial;\r\n    const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultBaseMaterial.clone());\r\n    if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\r\n      derivedMaterial = this._derivedMaterial = createBezierMeshMaterial(baseMaterial);\r\n      // dispose the derived material when its base material is disposed:\r\n      baseMaterial.addEventListener('dispose', function onDispose() {\r\n        baseMaterial.removeEventListener('dispose', onDispose);\r\n        derivedMaterial.dispose();\r\n      });\r\n    }\r\n    return derivedMaterial\r\n  }\r\n  set material(baseMaterial) {\r\n    this._baseMaterial = baseMaterial;\r\n  }\r\n\r\n  // Create and update material for shadows upon request:\r\n  get customDepthMaterial() {\r\n    return this.material.getDepthMaterial()\r\n  }\r\n  get customDistanceMaterial() {\r\n    return this.material.getDistanceMaterial()\r\n  }\r\n\r\n  onBeforeRender(shaderInfo) {\r\n    const {uniforms} = this.material;\r\n    const {pointA, controlA, controlB, pointB, radius, dashArray, dashOffset} = this;\r\n    uniforms.pointA.value.copy(pointA);\r\n    uniforms.controlA.value.copy(controlA);\r\n    uniforms.controlB.value.copy(controlB);\r\n    uniforms.pointB.value.copy(pointB);\r\n    uniforms.radius.value = radius;\r\n    uniforms.dashing.value.set(dashArray.x, dashArray.y, dashOffset || 0);\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    // TODO - just fail for now\r\n  }\r\n}\r\n\r\nexport { BezierMesh, createDerivedMaterial, expandShaderIncludes, getShaderUniformTypes, getShadersForMaterial, invertMatrix4, voidMainRegExp };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useMemo } from 'react';\r\nimport { extend } from '@react-three/fiber';\r\nimport { suspend } from 'suspend-react';\r\nimport { FontLoader, TextGeometry } from 'three-stdlib';\r\n\r\nconst types = ['string', 'number'];\r\n\r\nconst getTextFromChildren = children => {\r\n  let label = '';\r\n  React.Children.map(children, child => {\r\n    if (types.includes(typeof child)) {\r\n      label += child + '';\r\n    }\r\n  });\r\n  return label;\r\n};\r\n\r\nconst Text3DBase = /*#__PURE__*/React.forwardRef(({\r\n  font,\r\n  loader,\r\n  size = 1,\r\n  height = 0.2,\r\n  bevelThickness = 0.1,\r\n  bevelSize = 0.01,\r\n  bevelEnabled = false,\r\n  bevelOffset = 0,\r\n  curveSegments = 8,\r\n  children,\r\n  ...props\r\n}, ref) => {\r\n  React.useMemo(() => {\r\n    extend({\r\n      RenamedTextGeometry: TextGeometry\r\n    });\r\n  }, []);\r\n\r\n  const _font = React.useMemo(() => loader.parse(font), [font]);\r\n\r\n  const opts = useMemo(() => {\r\n    return {\r\n      font: _font,\r\n      size,\r\n      height,\r\n      bevelThickness,\r\n      bevelSize,\r\n      bevelEnabled,\r\n      bevelOffset,\r\n      curveSegments\r\n    };\r\n  }, [_font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelOffset, curveSegments]);\r\n  /**\r\n   * We need the `children` in the deps because we\r\n   * need to be able to do `<Text3d>{state}</Text3d>`.\r\n   */\r\n\r\n  const txt = useMemo(() => getTextFromChildren(children), [children]);\r\n  const args = React.useMemo(() => [txt, opts], [txt, opts]);\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\r\n    ref: ref\r\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\r\n    args: args\r\n  }), children);\r\n});\r\nconst Text3DSuspend = /*#__PURE__*/React.forwardRef(({\r\n  font,\r\n  loader,\r\n  ...props\r\n}, ref) => {\r\n  const _font = suspend(async () => {\r\n    const json = await (await fetch(font)).json();\r\n    return json;\r\n  }, [font]);\r\n\r\n  return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\r\n    ref: ref,\r\n    font: _font,\r\n    loader: loader\r\n  }));\r\n});\r\nconst Text3D = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  const loader = React.useMemo(() => new FontLoader(), []);\r\n\r\n  if (typeof props.font === 'string') {\r\n    return /*#__PURE__*/React.createElement(Text3DSuspend, _extends({}, props, {\r\n      ref: ref,\r\n      loader: loader\r\n    }));\r\n  } else {\r\n    return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\r\n      ref: ref,\r\n      loader: loader\r\n    }));\r\n  }\r\n});\r\n\r\nexport { Text3D };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { WebGLRenderTarget, HalfFloatType, RGBAFormat } from 'three';\r\nimport { extend, useThree, useFrame } from '@react-three/fiber';\r\nimport { EffectComposer, RenderPass, ShaderPass, GammaCorrectionShader } from 'three-stdlib';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nconst isWebGL2Available = () => {\r\n  try {\r\n    var canvas = document.createElement('canvas');\r\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\nconst Effects = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  multisamping = 8,\r\n  renderIndex = 1,\r\n  disableRender,\r\n  disableGamma,\r\n  disableRenderPass,\r\n  depthBuffer = true,\r\n  stencilBuffer = false,\r\n  anisotropy = 1,\r\n  encoding,\r\n  type,\r\n  ...props\r\n}, ref) => {\r\n  React.useMemo(() => extend({\r\n    EffectComposer,\r\n    RenderPass,\r\n    ShaderPass\r\n  }), []);\r\n  const composer = React.useRef();\r\n  const {\r\n    scene,\r\n    camera,\r\n    gl,\r\n    size,\r\n    viewport\r\n  } = useThree();\r\n  const [target] = React.useState(() => {\r\n    const t = new WebGLRenderTarget(size.width, size.height, {\r\n      type: type || HalfFloatType,\r\n      format: RGBAFormat,\r\n      encoding: encoding || gl.outputEncoding,\r\n      depthBuffer,\r\n      stencilBuffer,\r\n      anisotropy\r\n    });\r\n    t.samples = multisamping;\r\n    return t;\r\n  });\r\n  React.useEffect(() => {\r\n    var _composer$current, _composer$current2;\r\n\r\n    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);\r\n    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(viewport.dpr);\r\n  }, [gl, size, viewport.dpr]);\r\n  useFrame(() => {\r\n    var _composer$current3;\r\n\r\n    if (!disableRender) (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();\r\n  }, renderIndex);\r\n  const passes = [];\r\n  if (!disableRenderPass) passes.push( /*#__PURE__*/React.createElement(\"renderPass\", {\r\n    key: \"renderpass\",\r\n    attach: `passes-${passes.length}`,\r\n    args: [scene, camera]\r\n  }));\r\n  if (!disableGamma) passes.push( /*#__PURE__*/React.createElement(\"shaderPass\", {\r\n    attach: `passes-${passes.length}`,\r\n    key: \"gammapass\",\r\n    args: [GammaCorrectionShader]\r\n  }));\r\n  React.Children.forEach(children, el => {\r\n    el && passes.push( /*#__PURE__*/React.cloneElement(el, {\r\n      key: passes.length,\r\n      attach: `passes-${passes.length}`\r\n    }));\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\r\n    ref: mergeRefs([ref, composer]),\r\n    args: [gl, target]\r\n  }, props), passes);\r\n});\r\n\r\nexport { Effects, isWebGL2Available };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\nfunction GradientTexture({\r\n  stops,\r\n  colors,\r\n  size = 1024,\r\n  ...props\r\n}) {\r\n  const gl = useThree(state => state.gl);\r\n  const texture = React.useMemo(() => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    canvas.width = 16;\r\n    canvas.height = size;\r\n    const gradient = context.createLinearGradient(0, 0, 0, size);\r\n    let i = stops.length;\r\n\r\n    while (i--) {\r\n      gradient.addColorStop(stops[i], colors[i]);\r\n    }\r\n\r\n    context.fillStyle = gradient;\r\n    context.fillRect(0, 0, 16, size);\r\n    const texture = new THREE.Texture(canvas);\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n  }, [stops]);\r\n  React.useEffect(() => () => void texture.dispose(), [texture]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: texture,\r\n    attach: \"map\",\r\n    encoding: gl.outputEncoding\r\n  }, props));\r\n}\r\n\r\nexport { GradientTexture };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { extend, useThree } from '@react-three/fiber';\r\nimport { shaderMaterial } from './shaderMaterial.js';\r\nimport { useTexture } from './useTexture.js';\r\n\r\nconst ImageMaterialImpl = shaderMaterial({\r\n  color: new THREE.Color('white'),\r\n  scale: [1, 1],\r\n  imageBounds: [1, 1],\r\n  map: null,\r\n  zoom: 1,\r\n  grayscale: 0,\r\n  opacity: 1\r\n},\r\n/* glsl */\r\n`\r\n  varying vec2 vUv;\r\n  void main() {\r\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\r\n    vUv = uv;\r\n  }\r\n`,\r\n/* glsl */\r\n`\r\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\r\n  varying vec2 vUv;\r\n  uniform vec2 scale;\r\n  uniform vec2 imageBounds;\r\n  uniform vec3 color;\r\n  uniform sampler2D map;\r\n  uniform float zoom;\r\n  uniform float grayscale;\r\n  uniform float opacity;\r\n  const vec3 luma = vec3(.299, 0.587, 0.114);\r\n  vec4 toGrayscale(vec4 color, float intensity) {\r\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\r\n  }\r\n  vec2 aspect(vec2 size) {\r\n    return size / min(size.x, size.y);\r\n  }\r\n  void main() {\r\n    vec2 s = aspect(scale);\r\n    vec2 i = aspect(imageBounds);\r\n    float rs = s.x / s.y;\r\n    float ri = i.x / i.y;\r\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\r\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\r\n    vec2 uv = vUv * s / new + offset;\r\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\r\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\r\n    \r\n    #include <tonemapping_fragment>\r\n    #include <encodings_fragment>\r\n  }\r\n`);\r\nconst ImageBase = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  color,\r\n  segments = 1,\r\n  scale = 1,\r\n  zoom = 1,\r\n  grayscale = 0,\r\n  opacity = 1,\r\n  texture,\r\n  toneMapped,\r\n  transparent,\r\n  ...props\r\n}, ref) => {\r\n  extend({\r\n    ImageMaterial: ImageMaterialImpl\r\n  });\r\n  const gl = useThree(state => state.gl);\r\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\r\n  const imageBounds = [texture.image.width, texture.image.height];\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    ref: ref,\r\n    scale: scale\r\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\r\n    args: [1, 1, segments, segments]\r\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\r\n    color: color,\r\n    map: texture,\r\n    \"map-encoding\": gl.outputEncoding,\r\n    zoom: zoom,\r\n    grayscale: grayscale,\r\n    opacity: opacity,\r\n    scale: planeBounds,\r\n    imageBounds: imageBounds,\r\n    toneMapped: toneMapped,\r\n    transparent: transparent\r\n  }), children);\r\n});\r\nconst ImageWithUrl = /*#__PURE__*/React.forwardRef(({\r\n  url,\r\n  ...props\r\n}, ref) => {\r\n  const texture = useTexture(url);\r\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\r\n    texture: texture,\r\n    ref: ref\r\n  }));\r\n});\r\nconst ImageWithTexture = /*#__PURE__*/React.forwardRef(({\r\n  url: _url,\r\n  ...props\r\n}, ref) => {\r\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\r\n    ref: ref\r\n  }));\r\n});\r\nconst Image = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\r\n    ref: ref\r\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\r\n    ref: ref\r\n  }));else throw new Error('<Image /> requires a url or texture');\r\n});\r\n\r\nexport { Image };\r\n", "import * as THREE from 'three';\r\n\r\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\r\n  const material = class material extends THREE.ShaderMaterial {\r\n    constructor() {\r\n      const entries = Object.entries(uniforms); // Create unforms and shaders\r\n\r\n      super({\r\n        uniforms: entries.reduce((acc, [name, value]) => {\r\n          const uniform = THREE.UniformsUtils.clone({\r\n            [name]: {\r\n              value\r\n            }\r\n          });\r\n          return { ...acc,\r\n            ...uniform\r\n          };\r\n        }, {}),\r\n        vertexShader,\r\n        fragmentShader\r\n      }); // Create getter/setters\r\n\r\n      this.key = '';\r\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\r\n        get: () => this.uniforms[name].value,\r\n        set: v => this.uniforms[name].value = v\r\n      }));\r\n      if (onInit) onInit(this);\r\n    }\r\n\r\n  };\r\n  material.key = THREE.MathUtils.generateUUID();\r\n  return material;\r\n}\r\n\r\nexport { shaderMaterial };\r\n", "import { TextureLoader } from 'three';\r\nimport { useThree, useLoader } from '@react-three/fiber';\r\nimport { useLayoutEffect, useEffect } from 'react';\r\n\r\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\r\nfunction useTexture(input, onLoad) {\r\n  const gl = useThree(state => state.gl);\r\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\r\n  useLayoutEffect(() => {\r\n    onLoad == null ? void 0 : onLoad(textures);\r\n  }, [onLoad]); // https://github.com/mrdoob/three.js/issues/22696\r\n  // Upload the texture to the GPU immediately instead of waiting for the first render\r\n\r\n  useEffect(() => {\r\n    const array = Array.isArray(textures) ? textures : [textures];\r\n    array.forEach(gl.initTexture);\r\n  }, [gl, textures]);\r\n\r\n  if (IsObject(input)) {\r\n    const keys = Object.keys(input);\r\n    const keyed = {};\r\n    keys.forEach(key => Object.assign(keyed, {\r\n      [key]: textures[keys.indexOf(key)]\r\n    }));\r\n    return keyed;\r\n  } else {\r\n    return textures;\r\n  }\r\n}\r\n\r\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\r\n\r\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\r\n\r\nexport { IsObject, useTexture };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\n\r\nfunction Edges({\r\n  userData,\r\n  children,\r\n  geometry,\r\n  threshold = 15,\r\n  color = 'black',\r\n  ...props\r\n}) {\r\n  const ref = React.useRef(null);\r\n  React.useLayoutEffect(() => {\r\n    const parent = ref.current.parent;\r\n\r\n    if (parent) {\r\n      const geom = geometry || parent.geometry;\r\n\r\n      if (geom !== ref.current.userData.currentGeom || threshold !== ref.current.userData.currentThreshold) {\r\n        ref.current.userData.currentGeom = geom;\r\n        ref.current.userData.currentThreshold = threshold;\r\n        ref.current.geometry = new THREE.EdgesGeometry(geom, threshold);\r\n      }\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"lineSegments\", _extends({\r\n    ref: ref,\r\n    raycast: () => null\r\n  }, props), children ? children : /*#__PURE__*/React.createElement(\"lineBasicMaterial\", {\r\n    color: color\r\n  }));\r\n}\r\n\r\nexport { Edges };\r\n", "import { useFrame, useThree } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { Vector3, Object3D, Vector2 } from 'three';\r\nimport { MeshLine, MeshLineMaterial } from 'meshline';\r\n\r\nconst defaults = {\r\n  width: 0.2,\r\n  length: 1,\r\n  decay: 1,\r\n  local: false,\r\n  stride: 0,\r\n  interval: 1\r\n};\r\n\r\nconst shiftLeft = (collection, steps = 1) => {\r\n  collection.set(collection.subarray(steps));\r\n  collection.fill(-Infinity, -steps);\r\n  return collection;\r\n};\r\n\r\nfunction useTrail(target, settings) {\r\n  const {\r\n    length,\r\n    local,\r\n    decay,\r\n    interval,\r\n    stride\r\n  } = { ...defaults,\r\n    ...settings\r\n  };\r\n  const points = React.useRef();\r\n  const [worldPosition] = React.useState(() => new Vector3());\r\n  React.useLayoutEffect(() => {\r\n    if (target) {\r\n      points.current = Float32Array.from({\r\n        length: length * 10 * 3\r\n      }, (_, i) => target.position.getComponent(i % 3));\r\n    }\r\n  }, [length, target]);\r\n  const prevPosition = React.useRef(new Vector3());\r\n  const frameCount = React.useRef(0);\r\n  useFrame(() => {\r\n    if (!target) return;\r\n    if (!points.current) return;\r\n\r\n    if (frameCount.current === 0) {\r\n      let newPosition;\r\n\r\n      if (local) {\r\n        newPosition = target.position;\r\n      } else {\r\n        target.getWorldPosition(worldPosition);\r\n        newPosition = worldPosition;\r\n      }\r\n\r\n      const steps = 1 * decay;\r\n\r\n      for (let i = 0; i < steps; i++) {\r\n        if (newPosition.distanceTo(prevPosition.current) < stride) continue;\r\n        shiftLeft(points.current, 3);\r\n        points.current.set(newPosition.toArray(), points.current.length - 3);\r\n      }\r\n\r\n      prevPosition.current.copy(newPosition);\r\n    }\r\n\r\n    frameCount.current++;\r\n    frameCount.current = frameCount.current % interval;\r\n  });\r\n  return points;\r\n}\r\nconst Trail = /*#__PURE__*/React.forwardRef((props, forwardRef) => {\r\n  const {\r\n    children\r\n  } = props;\r\n  const {\r\n    width,\r\n    length,\r\n    decay,\r\n    local,\r\n    stride,\r\n    interval\r\n  } = { ...defaults,\r\n    ...props\r\n  };\r\n  const {\r\n    color = 'hotpink',\r\n    attenuation,\r\n    target\r\n  } = props;\r\n  const size = useThree(s => s.size);\r\n  const ref = React.useRef(null);\r\n  const [anchor, setAnchor] = React.useState(null);\r\n  const points = useTrail(anchor, {\r\n    length,\r\n    decay,\r\n    local,\r\n    stride,\r\n    interval\r\n  });\r\n  React.useEffect(() => {\r\n    const t = (target == null ? void 0 : target.current) || ref.current.children.find(o => {\r\n      return o instanceof Object3D;\r\n    });\r\n\r\n    if (t) {\r\n      setAnchor(t);\r\n    }\r\n  }, [points, target]);\r\n  const geo = React.useMemo(() => new MeshLine(), []);\r\n  const mat = React.useMemo(() => {\r\n    var _matOverride;\r\n\r\n    const m = new MeshLineMaterial({\r\n      lineWidth: 0.1 * width,\r\n      color: color,\r\n      sizeAttenuation: 1,\r\n      resolution: new Vector2(size.width, size.height)\r\n    }); // Get and apply first <meshLineMaterial /> from children\r\n\r\n    let matOverride;\r\n\r\n    if (children) {\r\n      if (Array.isArray(children)) {\r\n        matOverride = children.find(child => {\r\n          const c = child;\r\n          return typeof c.type === 'string' && c.type === 'meshLineMaterial';\r\n        });\r\n      } else {\r\n        const c = children;\r\n\r\n        if (typeof c.type === 'string' && c.type === 'meshLineMaterial') {\r\n          matOverride = c;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (typeof ((_matOverride = matOverride) == null ? void 0 : _matOverride.props) === 'object') {\r\n      m.setValues(matOverride.props);\r\n    }\r\n\r\n    return m;\r\n  }, [width, color, size, children]);\r\n  React.useEffect(() => {\r\n    mat.uniforms.resolution.value.set(size.width, size.height);\r\n  }, [size]);\r\n  useFrame(() => {\r\n    if (!points.current) return;\r\n    geo.setPoints(points.current, attenuation);\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", null, /*#__PURE__*/React.createElement(\"mesh\", {\r\n    ref: forwardRef,\r\n    geometry: geo,\r\n    material: mat\r\n  }), /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: ref\r\n  }, children));\r\n});\r\n\r\nexport { Trail, useTrail };\r\n", "import*as t from\"three\";function e(e,i){const s=new t.Matrix4,r=new t.Ray,a=new t.Sphere,o=new t.Vector3,n=this.geometry;if(a.copy(n.boundingSphere),a.applyMatrix4(this.matrixWorld),!1===e.ray.intersectSphere(a,o))return;s.copy(this.matrixWorld).invert(),r.copy(e.ray).applyMatrix4(s);const u=new t.Vector3,h=new t.Vector3,l=new t.Vector3,p=this instanceof t.LineSegments?2:1,c=n.index,f=n.attributes;if(null!==c){const t=c.array,s=f.position.array,a=f.width.array;for(let n=0,c=t.length-1;n<c;n+=p){const p=t[n],f=t[n+1];u.fromArray(s,3*p),h.fromArray(s,3*f);const d=null!=a[Math.floor(n/3)]?a[Math.floor(n/3)]:1,v=e.params.Line.threshold+this.material.lineWidth*d/2,m=v*v;if(r.distanceSqToSegment(u,h,o,l)>m)continue;o.applyMatrix4(this.matrixWorld);const y=e.ray.origin.distanceTo(o);y<e.near||y>e.far||(i.push({distance:y,point:l.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this}),n=c)}}}function i(t,e,i,s,r){let a;if(t=t.subarray||t.slice?t:t.buffer,i=i.subarray||i.slice?i:i.buffer,t=e?t.subarray?t.subarray(e,r&&e+r):t.slice(e,r&&e+r):t,i.set)i.set(t,s);else for(a=0;a<t.length;a++)i[a+s]=t[a];return i}class s extends t.BufferGeometry{constructor(){super(),this.type=\"MeshLine\",this.isMeshLine=!0,this.positions=[],this.raycast=e,this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this._points=[],this._geom=null,this.widthCallback=null,this.matrixWorld=new t.Matrix4,Object.defineProperties(this,{geometry:{enumerable:!0,get(){return this}},geom:{enumerable:!0,get(){return this._geom},set(t){this.setGeometry(t,this.widthCallback)}},points:{enumerable:!0,get(){return this._points},set(t){this.setPoints(t,this.widthCallback)}}})}setMatrixWorld(t){this.matrixWorld=t}setGeometry(e,i){this._geometry=e,e instanceof t.BufferGeometry?this.setPoints(e.getAttribute(\"position\").array,i):this.setPoints(e,i)}setPoints(e,i){if(e instanceof Float32Array||e instanceof Array){if(this._points=e,this.widthCallback=i,this.positions=[],this.counters=[],e.length&&e[0]instanceof t.Vector3)for(var s=0;s<e.length;s++){const t=e[s];var r=s/e.length;this.positions.push(t.x,t.y,t.z),this.positions.push(t.x,t.y,t.z),this.counters.push(r),this.counters.push(r)}else for(s=0;s<e.length;s+=3){r=s/e.length;this.positions.push(e[s],e[s+1],e[s+2]),this.positions.push(e[s],e[s+1],e[s+2]),this.counters.push(r),this.counters.push(r)}this.process()}else console.error(\"ERROR: The BufferArray of points is not instancied correctly.\")}compareV3(t,e){const i=6*t,s=6*e;return this.positions[i]===this.positions[s]&&this.positions[i+1]===this.positions[s+1]&&this.positions[i+2]===this.positions[s+2]}copyV3(t){const e=6*t;return[this.positions[e],this.positions[e+1],this.positions[e+2]]}process(){const e=this.positions.length/6;let i,s;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],s=this.compareV3(0,e-1)?this.copyV3(e-2):this.copyV3(0),this.previous.push(s[0],s[1],s[2]),this.previous.push(s[0],s[1],s[2]);for(let t=0;t<e;t++){if(this.side.push(1),this.side.push(-1),i=this.widthCallback?this.widthCallback(t/(e-1)):1,this.width.push(i),this.width.push(i),this.uvs.push(t/(e-1),0),this.uvs.push(t/(e-1),1),t<e-1){s=this.copyV3(t),this.previous.push(s[0],s[1],s[2]),this.previous.push(s[0],s[1],s[2]);const e=2*t;this.indices_array.push(e,e+1,e+2),this.indices_array.push(e+2,e+1,e+3)}t>0&&(s=this.copyV3(t),this.next.push(s[0],s[1],s[2]),this.next.push(s[0],s[1],s[2]))}s=this.compareV3(e-1,0)?this.copyV3(1):this.copyV3(e-1),this.next.push(s[0],s[1],s[2]),this.next.push(s[0],s[1],s[2]),this._attributes&&this._attributes.position.count===this.positions.length?(this._attributes.position.copyArray(new Float32Array(this.positions)),this._attributes.position.needsUpdate=!0,this._attributes.previous.copyArray(new Float32Array(this.previous)),this._attributes.previous.needsUpdate=!0,this._attributes.next.copyArray(new Float32Array(this.next)),this._attributes.next.needsUpdate=!0,this._attributes.side.copyArray(new Float32Array(this.side)),this._attributes.side.needsUpdate=!0,this._attributes.width.copyArray(new Float32Array(this.width)),this._attributes.width.needsUpdate=!0,this._attributes.uv.copyArray(new Float32Array(this.uvs)),this._attributes.uv.needsUpdate=!0,this._attributes.index.copyArray(new Uint16Array(this.indices_array)),this._attributes.index.needsUpdate=!0):this._attributes={position:new t.BufferAttribute(new Float32Array(this.positions),3),previous:new t.BufferAttribute(new Float32Array(this.previous),3),next:new t.BufferAttribute(new Float32Array(this.next),3),side:new t.BufferAttribute(new Float32Array(this.side),1),width:new t.BufferAttribute(new Float32Array(this.width),1),uv:new t.BufferAttribute(new Float32Array(this.uvs),2),index:new t.BufferAttribute(new Uint16Array(this.indices_array),1),counters:new t.BufferAttribute(new Float32Array(this.counters),1)},this.setAttribute(\"position\",this._attributes.position),this.setAttribute(\"previous\",this._attributes.previous),this.setAttribute(\"next\",this._attributes.next),this.setAttribute(\"side\",this._attributes.side),this.setAttribute(\"width\",this._attributes.width),this.setAttribute(\"uv\",this._attributes.uv),this.setAttribute(\"counters\",this._attributes.counters),this.setIndex(this._attributes.index),this.computeBoundingSphere(),this.computeBoundingBox()}advance({x:t,y:e,z:s}){const r=this._attributes.position.array,a=this._attributes.previous.array,o=this._attributes.next.array,n=r.length;i(r,0,a,0,n),i(r,6,r,0,n-6),r[n-6]=t,r[n-5]=e,r[n-4]=s,r[n-3]=t,r[n-2]=e,r[n-1]=s,i(r,6,o,0,n-6),o[n-6]=t,o[n-5]=e,o[n-4]=s,o[n-3]=t,o[n-2]=e,o[n-1]=s,this._attributes.position.needsUpdate=!0,this._attributes.previous.needsUpdate=!0,this._attributes.next.needsUpdate=!0}}t.ShaderChunk.meshline_vert=[\"\",\"#include <common>\",\"\",t.ShaderChunk.logdepthbuf_pars_vertex,t.ShaderChunk.fog_pars_vertex,\"\",\"attribute vec3 previous;\",\"attribute vec3 next;\",\"attribute float side;\",\"attribute float width;\",\"attribute float counters;\",\"\",\"uniform vec2 resolution;\",\"uniform float lineWidth;\",\"uniform vec3 color;\",\"uniform float opacity;\",\"uniform float sizeAttenuation;\",\"\",\"varying vec2 vUV;\",\"varying vec4 vColor;\",\"varying float vCounters;\",\"\",\"vec2 fix( vec4 i, float aspect ) {\",\"\",\"    vec2 res = i.xy / i.w;\",\"    res.x *= aspect;\",\"\\t vCounters = counters;\",\"    return res;\",\"\",\"}\",\"\",\"void main() {\",\"\",\"    float aspect = resolution.x / resolution.y;\",\"\",\"    vColor = vec4( color, opacity );\",\"    vUV = uv;\",\"\",\"    mat4 m = projectionMatrix * modelViewMatrix;\",\"    vec4 finalPosition = m * vec4( position, 1.0 );\",\"    vec4 prevPos = m * vec4( previous, 1.0 );\",\"    vec4 nextPos = m * vec4( next, 1.0 );\",\"\",\"    vec2 currentP = fix( finalPosition, aspect );\",\"    vec2 prevP = fix( prevPos, aspect );\",\"    vec2 nextP = fix( nextPos, aspect );\",\"\",\"    float w = lineWidth * width;\",\"\",\"    vec2 dir;\",\"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\"    else {\",\"        vec2 dir1 = normalize( currentP - prevP );\",\"        vec2 dir2 = normalize( nextP - currentP );\",\"        dir = normalize( dir1 + dir2 );\",\"\",\"        vec2 perp = vec2( -dir1.y, dir1.x );\",\"        vec2 miter = vec2( -dir.y, dir.x );\",\"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\"\",\"    }\",\"\",\"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\"    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );\",\"    normal.xy *= .5 * w;\",\"    normal *= projectionMatrix;\",\"    if( sizeAttenuation == 0. ) {\",\"        normal.xy *= finalPosition.w;\",\"        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;\",\"    }\",\"\",\"    finalPosition.xy += normal.xy * side;\",\"\",\"    gl_Position = finalPosition;\",\"\",t.ShaderChunk.logdepthbuf_vertex,t.ShaderChunk.fog_vertex&&\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",t.ShaderChunk.fog_vertex,\"}\"].join(\"\\n\"),t.ShaderChunk.meshline_frag=[\"\",t.ShaderChunk.fog_pars_fragment,t.ShaderChunk.logdepthbuf_pars_fragment,\"\",\"uniform sampler2D map;\",\"uniform sampler2D alphaMap;\",\"uniform float useMap;\",\"uniform float useAlphaMap;\",\"uniform float useDash;\",\"uniform float dashArray;\",\"uniform float dashOffset;\",\"uniform float dashRatio;\",\"uniform float visibility;\",\"uniform float alphaTest;\",\"uniform vec2 repeat;\",\"\",\"varying vec2 vUV;\",\"varying vec4 vColor;\",\"varying float vCounters;\",\"\",\"void main() {\",\"\",t.ShaderChunk.logdepthbuf_fragment,\"\",\"    vec4 c = vColor;\",\"    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );\",\"    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;\",\"    if( c.a < alphaTest ) discard;\",\"    if( useDash == 1. ){\",\"        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));\",\"    }\",\"    gl_FragColor = c;\",\"    gl_FragColor.a *= step(vCounters, visibility);\",\"\",t.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\");class r extends t.ShaderMaterial{constructor(e){super({uniforms:Object.assign({},t.UniformsLib.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new t.Color(16777215)},opacity:{value:1},resolution:{value:new t.Vector2(1,1)},sizeAttenuation:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new t.Vector2(1,1)}}),vertexShader:t.ShaderChunk.meshline_vert,fragmentShader:t.ShaderChunk.meshline_frag}),this.type=\"MeshLineMaterial\",Object.defineProperties(this,{lineWidth:{enumerable:!0,get(){return this.uniforms.lineWidth.value},set(t){this.uniforms.lineWidth.value=t}},map:{enumerable:!0,get(){return this.uniforms.map.value},set(t){this.uniforms.map.value=t}},useMap:{enumerable:!0,get(){return this.uniforms.useMap.value},set(t){this.uniforms.useMap.value=t}},alphaMap:{enumerable:!0,get(){return this.uniforms.alphaMap.value},set(t){this.uniforms.alphaMap.value=t}},useAlphaMap:{enumerable:!0,get(){return this.uniforms.useAlphaMap.value},set(t){this.uniforms.useAlphaMap.value=t}},color:{enumerable:!0,get(){return this.uniforms.color.value},set(t){this.uniforms.color.value=t}},opacity:{enumerable:!0,get(){return this.uniforms.opacity.value},set(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get(){return this.uniforms.resolution.value},set(t){this.uniforms.resolution.value.copy(t)}},sizeAttenuation:{enumerable:!0,get(){return this.uniforms.sizeAttenuation.value},set(t){this.uniforms.sizeAttenuation.value=t}},dashArray:{enumerable:!0,get(){return this.uniforms.dashArray.value},set(t){this.uniforms.dashArray.value=t,this.useDash=0!==t?1:0}},dashOffset:{enumerable:!0,get(){return this.uniforms.dashOffset.value},set(t){this.uniforms.dashOffset.value=t}},dashRatio:{enumerable:!0,get(){return this.uniforms.dashRatio.value},set(t){this.uniforms.dashRatio.value=t}},useDash:{enumerable:!0,get(){return this.uniforms.useDash.value},set(t){this.uniforms.useDash.value=t}},visibility:{enumerable:!0,get(){return this.uniforms.visibility.value},set(t){this.uniforms.visibility.value=t}},alphaTest:{enumerable:!0,get(){return this.uniforms.alphaTest.value},set(t){this.uniforms.alphaTest.value=t}},repeat:{enumerable:!0,get(){return this.uniforms.repeat.value},set(t){this.uniforms.repeat.value.copy(t)}}}),this.setValues(e)}copy(t){return super.copy(t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.alphaMap=t.alphaMap,this.useAlphaMap=t.useAlphaMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.dashArray.copy(t.dashArray),this.dashOffset.copy(t.dashOffset),this.dashRatio.copy(t.dashRatio),this.useDash=t.useDash,this.visibility=t.visibility,this.alphaTest=t.alphaTest,this.repeat.copy(t.repeat),this}}export{s as MeshLine,r as MeshLineMaterial,e as MeshLineRaycast};\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { MeshSurfaceSampler } from 'three-stdlib';\r\nimport { Vector3, Color, Object3D } from 'three';\r\n\r\nconst Sampler = ({\r\n  children,\r\n  weight,\r\n  transform,\r\n  instances,\r\n  mesh,\r\n  ...props\r\n}) => {\r\n  const group = React.useRef(null);\r\n  const instancedRef = React.useRef(null);\r\n  const meshToSampleRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    var _instances$current, _mesh$current;\r\n\r\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(c => c.hasOwnProperty('instanceMatrix'));\r\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(c => c.type === 'Mesh');\r\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\r\n  React.useEffect(() => {\r\n    if (typeof meshToSampleRef.current === 'undefined') return;\r\n    if (typeof instancedRef.current === 'undefined') return;\r\n    const sampler = new MeshSurfaceSampler(meshToSampleRef.current);\r\n\r\n    if (weight) {\r\n      sampler.setWeightAttribute(weight);\r\n    }\r\n\r\n    sampler.build();\r\n    const position = new Vector3();\r\n    const normal = new Vector3();\r\n    const color = new Color();\r\n    const dummy = new Object3D();\r\n    meshToSampleRef.current.updateMatrixWorld(true);\r\n\r\n    for (let i = 0; i < instancedRef.current.count; i++) {\r\n      sampler.sample(position, normal, color);\r\n\r\n      if (typeof transform === 'function') {\r\n        transform({\r\n          dummy,\r\n          sampledMesh: meshToSampleRef.current,\r\n          position,\r\n          normal,\r\n          color\r\n        }, i);\r\n      } else {\r\n        dummy.position.copy(position);\r\n      }\r\n\r\n      dummy.updateMatrix();\r\n      instancedRef.current.setMatrixAt(i, dummy.matrix);\r\n    }\r\n\r\n    instancedRef.current.instanceMatrix.needsUpdate = true;\r\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    ref: group\r\n  }, props), children);\r\n};\r\n\r\nexport { Sampler };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { BufferAttribute } from 'three';\r\n\r\n/**\r\n * Used exclusively as a child of a BufferGeometry.\r\n * Computes the BufferAttribute by calling the `compute` function\r\n * and attaches the attribute to the geometry.\r\n */\r\nconst ComputedAttribute = ({\r\n  compute,\r\n  name,\r\n  ...props\r\n}) => {\r\n  const [bufferAttribute] = React.useState(() => new BufferAttribute(new Float32Array(0), 1));\r\n  const primitive = React.useRef(null);\r\n  React.useLayoutEffect(() => {\r\n    if (primitive.current) {\r\n      var _ref;\r\n\r\n      // @ts-expect-error brittle\r\n      const parent = (_ref = primitive.current.parent) !== null && _ref !== void 0 ? _ref : primitive.current.__r3f.parent;\r\n      const attr = compute(parent);\r\n      primitive.current.copy(attr);\r\n    }\r\n  }, [compute]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: primitive,\r\n    object: bufferAttribute,\r\n    attach: `attributes-${name}`\r\n  }, props));\r\n};\r\n\r\nexport { ComputedAttribute };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport pick from 'lodash.pick';\r\n\r\nfunction createSpread(child, {\r\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData'],\r\n  deep,\r\n  inject,\r\n  castShadow,\r\n  receiveShadow\r\n}) {\r\n  let spread = pick(child, keys);\r\n\r\n  if (deep) {\r\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\r\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\r\n  }\r\n\r\n  if (inject) {\r\n    if (typeof inject === 'function') spread = { ...spread,\r\n      children: inject(child)\r\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = { ...spread,\r\n      children: inject\r\n    };else spread = { ...spread,\r\n      ...inject\r\n    };\r\n  }\r\n\r\n  if (child.type === 'Mesh') {\r\n    if (castShadow) spread.castShadow = true;\r\n    if (receiveShadow) spread.receiveShadow = true;\r\n  }\r\n\r\n  return spread;\r\n}\r\n\r\nconst Clone = /*#__PURE__*/React.forwardRef(({\r\n  object,\r\n  children,\r\n  deep,\r\n  castShadow,\r\n  receiveShadow,\r\n  inject,\r\n  keys,\r\n  ...props\r\n}, forwardRef) => {\r\n  const config = {\r\n    keys,\r\n    deep,\r\n    inject,\r\n    castShadow,\r\n    receiveShadow\r\n  }; // Deal with arrayed clones\r\n\r\n  if (Array.isArray(object)) {\r\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\r\n      ref: forwardRef\r\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\r\n      key: o.uuid,\r\n      object: o\r\n    }, config))), children);\r\n  } // Singleton clones\r\n\r\n\r\n  const {\r\n    children: injectChildren,\r\n    ...spread\r\n  } = createSpread(object, config);\r\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\r\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\r\n    ref: forwardRef\r\n  }), (object == null ? void 0 : object.children).map(child => {\r\n    let spread = {};\r\n    let Element = child.type[0].toLowerCase() + child.type.slice(1);\r\n\r\n    if (Element === 'group' || Element === 'object3D') {\r\n      Element = Clone;\r\n      spread = {\r\n        object: child,\r\n        ...config\r\n      };\r\n    } else {\r\n      spread = createSpread(child, config);\r\n    }\r\n\r\n    return /*#__PURE__*/React.createElement(Element, _extends({\r\n      key: child.uuid\r\n    }, spread));\r\n  }), children, injectChildren);\r\n});\r\n\r\nexport { Clone };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nconst OrthographicCamera = /*#__PURE__*/React.forwardRef(({\r\n  makeDefault,\r\n  ...props\r\n}, ref) => {\r\n  const set = useThree(({\r\n    set\r\n  }) => set);\r\n  const camera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const size = useThree(({\r\n    size\r\n  }) => size);\r\n  const cameraRef = React.useRef();\r\n  React.useLayoutEffect(() => {\r\n    if (cameraRef.current && !props.manual) {\r\n      cameraRef.current.updateProjectionMatrix();\r\n    }\r\n  }, [size, props]);\r\n  React.useLayoutEffect(() => {\r\n    if (makeDefault && cameraRef.current) {\r\n      const oldCam = camera;\r\n      set(() => ({\r\n        camera: cameraRef.current\r\n      }));\r\n      return () => set(() => ({\r\n        camera: oldCam\r\n      }));\r\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\r\n    // that must exchange the default, and clean up after itself on unmount.\r\n\r\n  }, [cameraRef, makeDefault, set]);\r\n  return /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\r\n    left: size.width / -2,\r\n    right: size.width / 2,\r\n    top: size.height / 2,\r\n    bottom: size.height / -2,\r\n    ref: mergeRefs([cameraRef, ref])\r\n  }, props));\r\n});\r\n\r\nexport { OrthographicCamera };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef(({\r\n  makeDefault,\r\n  ...props\r\n}, ref) => {\r\n  const set = useThree(({\r\n    set\r\n  }) => set);\r\n  const camera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const size = useThree(({\r\n    size\r\n  }) => size);\r\n  const cameraRef = React.useRef();\r\n  React.useLayoutEffect(() => {\r\n    const {\r\n      current: cam\r\n    } = cameraRef;\r\n\r\n    if (cam && !props.manual) {\r\n      cam.aspect = size.width / size.height;\r\n      cam.updateProjectionMatrix();\r\n    }\r\n  }, [size, props]);\r\n  React.useLayoutEffect(() => {\r\n    if (makeDefault && cameraRef.current) {\r\n      const oldCam = camera;\r\n      set(() => ({\r\n        camera: cameraRef.current\r\n      }));\r\n      return () => set(() => ({\r\n        camera: oldCam\r\n      }));\r\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\r\n    // that must exchange the default, and clean up after itself on unmount.\r\n\r\n  }, [cameraRef, makeDefault, set]);\r\n  return /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\r\n    ref: mergeRefs([cameraRef, ref])\r\n  }, props));\r\n});\r\n\r\nexport { PerspectiveCamera };\r\n", "import { WebGLCubeRenderTarget, HalfFloatType } from 'three';\r\nimport * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\n\r\nfunction CubeCamera({\r\n  children,\r\n  fog,\r\n  frames = Infinity,\r\n  resolution = 256,\r\n  near = 0.1,\r\n  far = 1000,\r\n  ...props\r\n}) {\r\n  const ref = React.useRef();\r\n  const [camera, setCamera] = React.useState(null);\r\n  const scene = useThree(({\r\n    scene\r\n  }) => scene);\r\n  const gl = useThree(({\r\n    gl\r\n  }) => gl);\r\n  const fbo = React.useMemo(() => {\r\n    const fbo = new WebGLCubeRenderTarget(resolution);\r\n    fbo.texture.encoding = gl.outputEncoding;\r\n    fbo.texture.type = HalfFloatType;\r\n    return fbo;\r\n  }, [resolution]);\r\n  let count = 0;\r\n  useFrame(() => {\r\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\r\n      ref.current.traverse(obj => obj.visible = false);\r\n      const originalFog = scene.fog;\r\n      scene.fog = fog || originalFog;\r\n      camera.update(gl, scene);\r\n      scene.fog = originalFog;\r\n      ref.current.traverse(obj => obj.visible = true);\r\n      count++;\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\r\n    ref: setCamera,\r\n    args: [near, far, fbo]\r\n  }), /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: ref\r\n  }, children(fbo.texture)));\r\n}\r\n\r\nexport { CubeCamera };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { DeviceOrientationControls as DeviceOrientationControls$1 } from 'three-stdlib';\r\n\r\nconst DeviceOrientationControls = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  const {\r\n    camera,\r\n    onChange,\r\n    ...rest\r\n  } = props;\r\n  const defaultCamera = useThree(state => state.camera);\r\n  const invalidate = useThree(state => state.invalidate);\r\n  const explCamera = camera || defaultCamera;\r\n  const [controls] = React.useState(() => new DeviceOrientationControls$1(explCamera));\r\n  React.useEffect(() => {\r\n    const callback = e => {\r\n      invalidate();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', callback);\r\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\r\n  }, [onChange, controls, invalidate]);\r\n  useFrame(() => controls == null ? void 0 : controls.update(), -1);\r\n  React.useEffect(() => {\r\n    const current = controls;\r\n    current == null ? void 0 : current.connect();\r\n    return () => current == null ? void 0 : current.dispose();\r\n  }, [controls]);\r\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls\r\n  }, rest)) : null;\r\n});\r\n\r\nexport { DeviceOrientationControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { FlyControls as FlyControls$1 } from 'three-stdlib';\r\n\r\nconst FlyControls = /*#__PURE__*/React.forwardRef(({\r\n  domElement,\r\n  ...props\r\n}, ref) => {\r\n  const {\r\n    onChange,\r\n    ...rest\r\n  } = props;\r\n  const invalidate = useThree(state => state.invalidate);\r\n  const camera = useThree(state => state.camera);\r\n  const gl = useThree(state => state.gl);\r\n  const events = useThree(state => state.events);\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const [controls] = React.useState(() => new FlyControls$1(camera, explDomElement));\r\n  React.useEffect(() => {\r\n    const callback = e => {\r\n      invalidate();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', callback);\r\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\r\n  }, [onChange, controls, invalidate]);\r\n  useFrame((_, delta) => controls == null ? void 0 : controls.update(delta));\r\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls\r\n  }, rest)) : null;\r\n});\r\n\r\nexport { FlyControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { MapControls as MapControls$1 } from 'three-stdlib';\r\n\r\nconst MapControls = /*#__PURE__*/React.forwardRef((props = {\r\n  enableDamping: true\r\n}, ref) => {\r\n  const {\r\n    domElement,\r\n    camera,\r\n    onChange,\r\n    onStart,\r\n    onEnd,\r\n    ...rest\r\n  } = props;\r\n  const invalidate = useThree(state => state.invalidate);\r\n  const defaultCamera = useThree(state => state.camera);\r\n  const gl = useThree(state => state.gl);\r\n  const events = useThree(state => state.events);\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const explCamera = camera || defaultCamera;\r\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\r\n  React.useEffect(() => {\r\n    controls.connect(explDomElement);\r\n\r\n    const callback = e => {\r\n      invalidate();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls.addEventListener('change', callback);\r\n    if (onStart) controls.addEventListener('start', onStart);\r\n    if (onEnd) controls.addEventListener('end', onEnd);\r\n    return () => {\r\n      controls.dispose();\r\n      controls.removeEventListener('change', callback);\r\n      if (onStart) controls.removeEventListener('start', onStart);\r\n      if (onEnd) controls.removeEventListener('end', onEnd);\r\n    };\r\n  }, [onChange, onStart, onEnd, controls, invalidate, explDomElement]);\r\n  useFrame(() => controls.update(), -1);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls,\r\n    enableDamping: true\r\n  }, rest));\r\n});\r\n\r\nexport { MapControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\r\n\r\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\r\n  makeDefault,\r\n  camera,\r\n  regress,\r\n  domElement,\r\n  enableDamping = true,\r\n  onChange,\r\n  onStart,\r\n  onEnd,\r\n  ...restProps\r\n}, ref) => {\r\n  const invalidate = useThree(state => state.invalidate);\r\n  const defaultCamera = useThree(state => state.camera);\r\n  const gl = useThree(state => state.gl);\r\n  const events = useThree(state => state.events);\r\n  const set = useThree(state => state.set);\r\n  const get = useThree(state => state.get);\r\n  const performance = useThree(state => state.performance);\r\n  const explCamera = camera || defaultCamera;\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\r\n  useFrame(() => {\r\n    if (controls.enabled) controls.update();\r\n  }, -1);\r\n  React.useEffect(() => {\r\n    controls.connect(explDomElement);\r\n    return () => void controls.dispose();\r\n  }, [explDomElement, regress, controls, invalidate]);\r\n  React.useEffect(() => {\r\n    const callback = e => {\r\n      invalidate();\r\n      if (regress) performance.regress();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls.addEventListener('change', callback);\r\n    if (onStart) controls.addEventListener('start', onStart);\r\n    if (onEnd) controls.addEventListener('end', onEnd);\r\n    return () => {\r\n      if (onStart) controls.removeEventListener('start', onStart);\r\n      if (onEnd) controls.removeEventListener('end', onEnd);\r\n      controls.removeEventListener('change', callback);\r\n    };\r\n  }, [onChange, onStart, onEnd, controls, invalidate]);\r\n  React.useEffect(() => {\r\n    if (makeDefault) {\r\n      const old = get().controls;\r\n      set({\r\n        controls\r\n      });\r\n      return () => set({\r\n        controls: old\r\n      });\r\n    }\r\n  }, [makeDefault, controls]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls,\r\n    enableDamping: enableDamping\r\n  }, restProps));\r\n});\r\n\r\nexport { OrbitControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { TrackballControls as TrackballControls$1 } from 'three-stdlib';\r\n\r\nconst TrackballControls = /*#__PURE__*/React.forwardRef(({\r\n  makeDefault,\r\n  camera,\r\n  domElement,\r\n  regress,\r\n  onChange,\r\n  onStart,\r\n  onEnd,\r\n  ...restProps\r\n}, ref) => {\r\n  const {\r\n    invalidate,\r\n    camera: defaultCamera,\r\n    gl,\r\n    events,\r\n    set,\r\n    get,\r\n    performance,\r\n    viewport\r\n  } = useThree();\r\n  const explCamera = camera || defaultCamera;\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const controls = React.useMemo(() => new TrackballControls$1(explCamera), [explCamera]);\r\n  useFrame(() => {\r\n    if (controls.enabled) controls.update();\r\n  }, -1);\r\n  React.useEffect(() => {\r\n    controls.connect(explDomElement);\r\n    return () => void controls.dispose();\r\n  }, [explDomElement, regress, controls, invalidate]);\r\n  React.useEffect(() => {\r\n    const callback = e => {\r\n      invalidate();\r\n      if (regress) performance.regress();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls.addEventListener('change', callback);\r\n    if (onStart) controls.addEventListener('start', onStart);\r\n    if (onEnd) controls.addEventListener('end', onEnd);\r\n    return () => {\r\n      if (onStart) controls.removeEventListener('start', onStart);\r\n      if (onEnd) controls.removeEventListener('end', onEnd);\r\n      controls.removeEventListener('change', callback);\r\n    };\r\n  }, [onChange, onStart, onEnd, controls, invalidate]);\r\n  React.useEffect(() => {\r\n    controls.handleResize();\r\n  }, [viewport]);\r\n  React.useEffect(() => {\r\n    if (makeDefault) {\r\n      const old = get().controls;\r\n      set({\r\n        controls\r\n      });\r\n      return () => set({\r\n        controls: old\r\n      });\r\n    }\r\n  }, [makeDefault, controls]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls\r\n  }, restProps));\r\n});\r\n\r\nexport { TrackballControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { forwardRef, useMemo, useEffect } from 'react';\r\nimport { ArcballControls as ArcballControls$1 } from 'three-stdlib';\r\n\r\nconst ArcballControls = /*#__PURE__*/forwardRef(({\r\n  camera,\r\n  makeDefault,\r\n  regress,\r\n  domElement,\r\n  onChange,\r\n  onStart,\r\n  onEnd,\r\n  ...restProps\r\n}, ref) => {\r\n  const invalidate = useThree(state => state.invalidate);\r\n  const defaultCamera = useThree(state => state.camera);\r\n  const gl = useThree(state => state.gl);\r\n  const events = useThree(state => state.events);\r\n  const set = useThree(state => state.set);\r\n  const get = useThree(state => state.get);\r\n  const performance = useThree(state => state.performance);\r\n  const explCamera = camera || defaultCamera;\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const controls = useMemo(() => new ArcballControls$1(explCamera), [explCamera]);\r\n  useFrame(() => {\r\n    if (controls.enabled) controls.update();\r\n  }, -1);\r\n  useEffect(() => {\r\n    controls.connect(explDomElement);\r\n    return () => void controls.dispose();\r\n  }, [explDomElement, regress, controls, invalidate]);\r\n  useEffect(() => {\r\n    const callback = e => {\r\n      invalidate();\r\n      if (regress) performance.regress();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls.addEventListener('change', callback);\r\n    if (onStart) controls.addEventListener('start', onStart);\r\n    if (onEnd) controls.addEventListener('end', onEnd);\r\n    return () => {\r\n      controls.removeEventListener('change', callback);\r\n      if (onStart) controls.removeEventListener('start', onStart);\r\n      if (onEnd) controls.removeEventListener('end', onEnd);\r\n    };\r\n  }, [onChange, onStart, onEnd]);\r\n  useEffect(() => {\r\n    if (makeDefault) {\r\n      const old = get().controls;\r\n      set({\r\n        controls\r\n      });\r\n      return () => set({\r\n        controls: old\r\n      });\r\n    }\r\n  }, [makeDefault, controls]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls\r\n  }, restProps));\r\n});\r\n\r\nexport { ArcballControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree } from '@react-three/fiber';\r\nimport omit from 'lodash.omit';\r\nimport pick from 'lodash.pick';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { TransformControls as TransformControls$1 } from 'three-stdlib';\r\n\r\nconst TransformControls = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  domElement,\r\n  onChange,\r\n  onMouseDown,\r\n  onMouseUp,\r\n  onObjectChange,\r\n  object,\r\n  ...props\r\n}, ref) => {\r\n  const transformOnlyPropNames = ['enabled', 'axis', 'mode', 'translationSnap', 'rotationSnap', 'scaleSnap', 'space', 'size', 'showX', 'showY', 'showZ'];\r\n  const {\r\n    camera,\r\n    ...rest\r\n  } = props;\r\n  const transformProps = pick(rest, transformOnlyPropNames);\r\n  const objectProps = omit(rest, transformOnlyPropNames); // @ts-expect-error new in @react-three/fiber@7.0.5\r\n\r\n  const defaultControls = useThree(state => state.controls);\r\n  const gl = useThree(state => state.gl);\r\n  const events = useThree(state => state.events);\r\n  const defaultCamera = useThree(state => state.camera);\r\n  const invalidate = useThree(state => state.invalidate);\r\n  const explCamera = camera || defaultCamera;\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const controls = React.useMemo(() => new TransformControls$1(explCamera, explDomElement), [explCamera, explDomElement]);\r\n  const group = React.useRef();\r\n  React.useLayoutEffect(() => {\r\n    if (object) {\r\n      controls.attach(object instanceof THREE.Object3D ? object : object.current);\r\n    } else if (group.current instanceof THREE.Object3D) {\r\n      controls.attach(group.current);\r\n    }\r\n\r\n    return () => void controls.detach();\r\n  }, [object, children, controls]);\r\n  React.useEffect(() => {\r\n    if (defaultControls) {\r\n      const callback = event => defaultControls.enabled = !event.value;\r\n\r\n      controls.addEventListener('dragging-changed', callback);\r\n      return () => controls.removeEventListener('dragging-changed', callback);\r\n    }\r\n  }, [controls, defaultControls]);\r\n  React.useEffect(() => {\r\n    const callback = e => {\r\n      invalidate();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', callback);\r\n    if (onMouseDown) controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('mouseDown', onMouseDown);\r\n    if (onMouseUp) controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('mouseUp', onMouseUp);\r\n    if (onObjectChange) controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('objectChange', onObjectChange);\r\n    return () => {\r\n      controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\r\n      if (onMouseDown) controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('mouseDown', onMouseDown);\r\n      if (onMouseUp) controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('mouseUp', onMouseUp);\r\n      if (onObjectChange) controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('objectChange', onObjectChange);\r\n    };\r\n  }, [onChange, onMouseDown, onMouseUp, onObjectChange, controls, invalidate]);\r\n  return controls ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls\r\n  }, transformProps)), /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    ref: group\r\n  }, objectProps), children)) : null;\r\n});\r\n\r\nexport { TransformControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { useThree } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\r\n\r\nconst PointerLockControls = /*#__PURE__*/React.forwardRef(({\r\n  domElement,\r\n  selector,\r\n  onChange,\r\n  onLock,\r\n  onUnlock,\r\n  enabled = true,\r\n  ...props\r\n}, ref) => {\r\n  const {\r\n    camera,\r\n    ...rest\r\n  } = props;\r\n  const get = useThree(state => state.get);\r\n  const setEvents = useThree(state => state.setEvents);\r\n  const gl = useThree(state => state.gl);\r\n  const defaultCamera = useThree(state => state.camera);\r\n  const invalidate = useThree(state => state.invalidate);\r\n  const events = useThree(state => state.events);\r\n  const explCamera = camera || defaultCamera;\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const [controls] = React.useState(() => new PointerLockControls$1(explCamera));\r\n  React.useEffect(() => {\r\n    if (enabled) {\r\n      controls.connect(explDomElement); // Force events to be centered while PLC is active\r\n\r\n      const oldComputeOffsets = get().events.compute;\r\n      setEvents({\r\n        compute(event, state) {\r\n          const offsetX = state.size.width / 2;\r\n          const offsetY = state.size.height / 2;\r\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\r\n          state.raycaster.setFromCamera(state.pointer, state.camera);\r\n        }\r\n\r\n      });\r\n      return () => {\r\n        controls.disconnect();\r\n        setEvents({\r\n          compute: oldComputeOffsets\r\n        });\r\n      };\r\n    }\r\n  }, [enabled, controls]);\r\n  React.useEffect(() => {\r\n    const callback = e => {\r\n      invalidate();\r\n      if (onChange) onChange(e);\r\n    };\r\n\r\n    controls.addEventListener('change', callback);\r\n    if (onLock) controls.addEventListener('lock', onLock);\r\n    if (onUnlock) controls.addEventListener('unlock', onUnlock); // Enforce previous interaction\r\n\r\n    const handler = () => controls.lock();\r\n\r\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\r\n    elements.forEach(element => element && element.addEventListener('click', handler));\r\n    return () => {\r\n      controls.removeEventListener('change', callback);\r\n      if (onLock) controls.addEventListener('lock', onLock);\r\n      if (onUnlock) controls.addEventListener('unlock', onUnlock);\r\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\r\n    };\r\n  }, [onChange, onLock, onUnlock, selector, controls, invalidate]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls\r\n  }, rest));\r\n});\r\n\r\nexport { PointerLockControls };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { FirstPersonControls as FirstPersonControls$1 } from 'three-stdlib';\r\n\r\nconst FirstPersonControls = /*#__PURE__*/React.forwardRef(({\r\n  domElement,\r\n  ...props\r\n}, ref) => {\r\n  const camera = useThree(state => state.camera);\r\n  const gl = useThree(state => state.gl);\r\n  const events = useThree(state => state.events);\r\n  const explDomElement = domElement || events.connected || gl.domElement;\r\n  const [controls] = React.useState(() => new FirstPersonControls$1(camera, explDomElement));\r\n  useFrame((_, delta) => {\r\n    controls.update(delta);\r\n  }, -1);\r\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls\r\n  }, props)) : null;\r\n});\r\n\r\nexport { FirstPersonControls };\r\n", "import * as React from 'react';\r\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\r\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\r\nimport { OrthographicCamera } from './OrthographicCamera.js';\r\nimport { useCamera } from './useCamera.js';\r\n\r\nconst Context = /*#__PURE__*/React.createContext({});\r\nconst useGizmoContext = () => {\r\n  return React.useContext(Context);\r\n};\r\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\r\n\r\nconst dummy = new Object3D();\r\nconst matrix = new Matrix4();\r\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\r\nconst target = new Vector3();\r\nconst targetPosition = new Vector3();\r\nconst GizmoHelper = ({\r\n  alignment = 'bottom-right',\r\n  margin = [80, 80],\r\n  renderPriority = 0,\r\n  autoClear = true,\r\n  onUpdate,\r\n  onTarget,\r\n  children: GizmoHelperComponent\r\n}) => {\r\n  const size = useThree(({\r\n    size\r\n  }) => size);\r\n  const mainCamera = useThree(({\r\n    camera\r\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\r\n\r\n  const defaultControls = useThree(({\r\n    controls\r\n  }) => controls);\r\n  const gl = useThree(({\r\n    gl\r\n  }) => gl);\r\n  const scene = useThree(({\r\n    scene\r\n  }) => scene);\r\n  const invalidate = useThree(({\r\n    invalidate\r\n  }) => invalidate);\r\n  const backgroundRef = React.useRef();\r\n  const gizmoRef = React.useRef();\r\n  const virtualCam = React.useRef(null);\r\n  const [virtualScene] = React.useState(() => new Scene());\r\n  const animating = React.useRef(false);\r\n  const radius = React.useRef(0);\r\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\r\n  const tweenCamera = React.useCallback(direction => {\r\n    animating.current = true;\r\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\r\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\r\n\r\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\r\n\r\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\r\n    dummy.lookAt(targetPosition);\r\n    q2.copy(dummy.quaternion);\r\n    invalidate();\r\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\r\n  React.useEffect(() => {\r\n    if (scene.background) {\r\n      //Interchange the actual scene background with the virtual scene\r\n      backgroundRef.current = scene.background;\r\n      scene.background = null;\r\n      virtualScene.background = backgroundRef.current;\r\n    }\r\n\r\n    return () => {\r\n      // reset on unmount\r\n      if (backgroundRef.current) scene.background = backgroundRef.current;\r\n    };\r\n  }, []);\r\n  useFrame((_, delta) => {\r\n    if (virtualCam.current && gizmoRef.current) {\r\n      var _gizmoRef$current;\r\n\r\n      // Animate step\r\n      if (animating.current) {\r\n        if (q1.angleTo(q2) < 0.01) {\r\n          animating.current = false;\r\n        } else {\r\n          const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\r\n\r\n          q1.rotateTowards(q2, step); // animate orientation\r\n\r\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\r\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\r\n          mainCamera.quaternion.copy(q1);\r\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\r\n          invalidate();\r\n        }\r\n      } // Sync Gizmo with main camera orientation\r\n\r\n\r\n      matrix.copy(mainCamera.matrix).invert();\r\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix); // Render virtual camera\r\n\r\n      if (autoClear) gl.autoClear = false;\r\n      gl.clearDepth();\r\n      gl.render(virtualScene, virtualCam.current);\r\n    }\r\n  }, renderPriority);\r\n  const raycast = useCamera(virtualCam);\r\n  const gizmoHelperContext = React.useMemo(() => ({\r\n    tweenCamera,\r\n    raycast\r\n  }), [tweenCamera]); // Position gizmo component within scene\r\n\r\n  const [marginX, marginY] = margin;\r\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\r\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\r\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\r\n    value: gizmoHelperContext\r\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\r\n    ref: virtualCam,\r\n    position: [0, 0, 200]\r\n  }), /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: gizmoRef,\r\n    position: [x, y, 0]\r\n  }, GizmoHelperComponent)), virtualScene);\r\n};\r\n\r\nexport { GizmoHelper, useGizmoContext };\r\n", "import * as React from 'react';\r\nimport { Raycaster, Camera } from 'three';\r\nimport { useThree, applyProps } from '@react-three/fiber';\r\n\r\nfunction useCamera(camera, props) {\r\n  const pointer = useThree(state => state.pointer);\r\n  const [raycast] = React.useState(() => {\r\n    const raycaster = new Raycaster();\r\n    /**\r\n     * applyProps is an internal method of r3f and\r\n     * therefore requires its first arg to be an\r\n     * \"Instance\" a term used with the Reconciler\r\n     * so we have an expect error to mask this\r\n     */\r\n    // @ts-expect-error\r\n\r\n    if (props) applyProps(raycaster, props, {});\r\n    return function (_, intersects) {\r\n      raycaster.setFromCamera(pointer, camera instanceof Camera ? camera : camera.current);\r\n      const rc = this.constructor.prototype.raycast.bind(this);\r\n      if (rc) rc(raycaster, intersects);\r\n    };\r\n  });\r\n  return raycast;\r\n}\r\n\r\nexport { useCamera };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { useGizmoContext } from './GizmoHelper.js';\r\nimport { Vector3, CanvasTexture } from 'three';\r\n\r\nconst colors = {\r\n  bg: '#f0f0f0',\r\n  hover: '#999',\r\n  text: 'black',\r\n  stroke: 'black'\r\n};\r\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\r\n\r\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\r\n\r\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\r\nconst cornerDimensions = [0.25, 0.25, 0.25];\r\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\r\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\r\n\r\nconst FaceMaterial = ({\r\n  hover,\r\n  index,\r\n  font = '20px Inter var, Arial, sans-serif',\r\n  faces = defaultFaces,\r\n  color = colors.bg,\r\n  hoverColor = colors.hover,\r\n  textColor = colors.text,\r\n  strokeColor = colors.stroke,\r\n  opacity = 1\r\n}) => {\r\n  const gl = useThree(state => state.gl);\r\n  const texture = React.useMemo(() => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 128;\r\n    canvas.height = 128;\r\n    const context = canvas.getContext('2d');\r\n    context.fillStyle = color;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.strokeStyle = strokeColor;\r\n    context.strokeRect(0, 0, canvas.width, canvas.height);\r\n    context.font = font;\r\n    context.textAlign = 'center';\r\n    context.fillStyle = textColor;\r\n    context.fillText(faces[index].toUpperCase(), 64, 76);\r\n    return new CanvasTexture(canvas);\r\n  }, [index, faces, font, color, textColor, strokeColor]);\r\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\r\n    map: texture,\r\n    \"map-encoding\": gl.outputEncoding,\r\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\r\n    attach: `material-${index}`,\r\n    color: hover ? hoverColor : 'white',\r\n    transparent: true,\r\n    opacity: opacity\r\n  });\r\n};\r\n\r\nconst FaceCube = props => {\r\n  const {\r\n    tweenCamera,\r\n    raycast\r\n  } = useGizmoContext();\r\n  const [hover, setHover] = React.useState(null);\r\n\r\n  const handlePointerOut = e => {\r\n    e.stopPropagation();\r\n    setHover(null);\r\n  };\r\n\r\n  const handleClick = e => {\r\n    e.stopPropagation();\r\n    tweenCamera(e.face.normal);\r\n  };\r\n\r\n  const handlePointerMove = e => {\r\n    e.stopPropagation();\r\n    setHover(Math.floor(e.faceIndex / 2));\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(\"mesh\", {\r\n    raycast: raycast,\r\n    onPointerOut: handlePointerOut,\r\n    onPointerMove: handlePointerMove,\r\n    onClick: props.onClick || handleClick\r\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\r\n    key: index,\r\n    index: index,\r\n    hover: hover === index\r\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\r\n};\r\n\r\nconst EdgeCube = ({\r\n  onClick,\r\n  dimensions,\r\n  position,\r\n  hoverColor = colors.hover\r\n}) => {\r\n  const {\r\n    tweenCamera,\r\n    raycast\r\n  } = useGizmoContext();\r\n  const [hover, setHover] = React.useState(false);\r\n\r\n  const handlePointerOut = e => {\r\n    e.stopPropagation();\r\n    setHover(false);\r\n  };\r\n\r\n  const handlePointerOver = e => {\r\n    e.stopPropagation();\r\n    setHover(true);\r\n  };\r\n\r\n  const handleClick = e => {\r\n    e.stopPropagation();\r\n    tweenCamera(position);\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(\"mesh\", {\r\n    scale: 1.01,\r\n    position: position,\r\n    raycast: raycast,\r\n    onPointerOver: handlePointerOver,\r\n    onPointerOut: handlePointerOut,\r\n    onClick: onClick || handleClick\r\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\r\n    color: hover ? hoverColor : 'white',\r\n    transparent: true,\r\n    opacity: 0.6,\r\n    visible: hover\r\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\r\n    args: dimensions\r\n  }));\r\n};\r\n\r\nconst GizmoViewcube = props => {\r\n  return /*#__PURE__*/React.createElement(\"group\", {\r\n    scale: [60, 60, 60]\r\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\r\n    key: index,\r\n    position: edge,\r\n    dimensions: edgeDimensions[index]\r\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\r\n    key: index,\r\n    position: corner,\r\n    dimensions: cornerDimensions\r\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\r\n    intensity: 0.5\r\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\r\n    position: [10, 10, 10],\r\n    intensity: 0.5\r\n  }));\r\n};\r\n\r\nexport { GizmoViewcube };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { CanvasTexture } from 'three';\r\nimport { useGizmoContext } from './GizmoHelper.js';\r\n\r\nfunction Axis({\r\n  scale = [0.8, 0.05, 0.05],\r\n  color,\r\n  rotation\r\n}) {\r\n  return /*#__PURE__*/React.createElement(\"group\", {\r\n    rotation: rotation\r\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\r\n    position: [0.4, 0, 0]\r\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\r\n    args: scale\r\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\r\n    color: color,\r\n    toneMapped: false\r\n  })));\r\n}\r\n\r\nfunction AxisHead({\r\n  onClick,\r\n  font,\r\n  disabled,\r\n  arcStyle,\r\n  label,\r\n  labelColor,\r\n  axisHeadScale = 1,\r\n  ...props\r\n}) {\r\n  const gl = useThree(state => state.gl);\r\n  const texture = React.useMemo(() => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 64;\r\n    canvas.height = 64;\r\n    const context = canvas.getContext('2d');\r\n    context.beginPath();\r\n    context.arc(32, 32, 16, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fillStyle = arcStyle;\r\n    context.fill();\r\n\r\n    if (label) {\r\n      context.font = font;\r\n      context.textAlign = 'center';\r\n      context.fillStyle = labelColor;\r\n      context.fillText(label, 32, 41);\r\n    }\r\n\r\n    return new CanvasTexture(canvas);\r\n  }, [arcStyle, label, labelColor, font]);\r\n  const [active, setActive] = React.useState(false);\r\n  const scale = (label ? 1 : 0.75) * (active ? 1.2 : 1) * axisHeadScale;\r\n\r\n  const handlePointerOver = e => {\r\n    e.stopPropagation();\r\n    setActive(true);\r\n  };\r\n\r\n  const handlePointerOut = e => {\r\n    e.stopPropagation();\r\n    setActive(false);\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(\"sprite\", _extends({\r\n    scale: scale,\r\n    onPointerOver: !disabled ? handlePointerOver : undefined,\r\n    onPointerOut: !disabled ? onClick || handlePointerOut : undefined\r\n  }, props), /*#__PURE__*/React.createElement(\"spriteMaterial\", {\r\n    map: texture,\r\n    \"map-encoding\": gl.outputEncoding,\r\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\r\n    alphaTest: 0.3,\r\n    opacity: label ? 1 : 0.75,\r\n    toneMapped: false\r\n  }));\r\n}\r\n\r\nconst GizmoViewport = ({\r\n  hideNegativeAxes,\r\n  hideAxisHeads,\r\n  disabled,\r\n  font = '18px Inter var, Arial, sans-serif',\r\n  axisColors = ['#ff3653', '#0adb50', '#2c8fdf'],\r\n  axisHeadScale = 1,\r\n  axisScale,\r\n  labels = ['X', 'Y', 'Z'],\r\n  labelColor = '#000',\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const [colorX, colorY, colorZ] = axisColors;\r\n  const {\r\n    tweenCamera,\r\n    raycast\r\n  } = useGizmoContext();\r\n  const axisHeadProps = {\r\n    font,\r\n    disabled,\r\n    labelColor,\r\n    raycast,\r\n    onClick,\r\n    axisHeadScale,\r\n    onPointerDown: !disabled ? e => {\r\n      tweenCamera(e.object.position);\r\n      e.stopPropagation();\r\n    } : undefined\r\n  };\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    scale: 40\r\n  }, props), /*#__PURE__*/React.createElement(Axis, {\r\n    color: colorX,\r\n    rotation: [0, 0, 0],\r\n    scale: axisScale\r\n  }), /*#__PURE__*/React.createElement(Axis, {\r\n    color: colorY,\r\n    rotation: [0, 0, Math.PI / 2],\r\n    scale: axisScale\r\n  }), /*#__PURE__*/React.createElement(Axis, {\r\n    color: colorZ,\r\n    rotation: [0, -Math.PI / 2, 0],\r\n    scale: axisScale\r\n  }), !hideAxisHeads && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\r\n    arcStyle: colorX,\r\n    position: [1, 0, 0],\r\n    label: labels[0]\r\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\r\n    arcStyle: colorY,\r\n    position: [0, 1, 0],\r\n    label: labels[1]\r\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\r\n    arcStyle: colorZ,\r\n    position: [0, 0, 1],\r\n    label: labels[2]\r\n  }, axisHeadProps)), !hideNegativeAxes && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\r\n    arcStyle: colorX,\r\n    position: [-1, 0, 0]\r\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\r\n    arcStyle: colorY,\r\n    position: [0, -1, 0]\r\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\r\n    arcStyle: colorZ,\r\n    position: [0, 0, -1]\r\n  }, axisHeadProps)))), /*#__PURE__*/React.createElement(\"ambientLight\", {\r\n    intensity: 0.5\r\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\r\n    position: [10, 10, 10],\r\n    intensity: 0.5\r\n  }));\r\n};\r\n\r\nexport { GizmoViewport };\r\n", "import { CubeTextureLoader } from 'three';\r\nimport { useLoader } from '@react-three/fiber';\r\n\r\nfunction useCubeTexture(files, {\r\n  path\r\n}) {\r\n  // @ts-ignore\r\n  const [cubeTexture] = useLoader( // @ts-ignore\r\n  CubeTextureLoader, [files], loader => loader.setPath(path));\r\n  return cubeTexture;\r\n}\r\n\r\nuseCubeTexture.preload = (files, {\r\n  path\r\n}) => useLoader.preload( // @ts-ignore\r\nCubeTextureLoader, [files], loader => loader.setPath(path));\r\n\r\nexport { useCubeTexture };\r\n", "import { FBXLoader } from 'three-stdlib';\r\nimport { useLoader } from '@react-three/fiber';\r\n\r\nfunction useFBX(path) {\r\n  return useLoader(FBXLoader, path);\r\n}\r\n\r\nuseFBX.preload = path => useLoader.preload(FBXLoader, path);\r\n\r\nuseFBX.clear = input => useLoader.clear(FBXLoader, input);\r\n\r\nexport { useFBX };\r\n", "import { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\r\nimport { useLoader } from '@react-three/fiber';\r\n\r\n// @ts-ignore\r\nlet dracoLoader = null;\r\n\r\nfunction extensions(useDraco, useMeshopt, extendLoader) {\r\n  return loader => {\r\n    if (extendLoader) {\r\n      extendLoader(loader);\r\n    }\r\n\r\n    if (useDraco) {\r\n      if (!dracoLoader) {\r\n        dracoLoader = new DRACOLoader();\r\n      }\r\n\r\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : 'https://www.gstatic.com/draco/versioned/decoders/1.4.3/');\r\n      loader.setDRACOLoader(dracoLoader);\r\n    }\r\n\r\n    if (useMeshopt) {\r\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\r\n    }\r\n  };\r\n}\r\n\r\nfunction useGLTF(path, useDraco = true, useMeshOpt = true, extendLoader) {\r\n  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\r\n  return gltf;\r\n}\r\n\r\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true, extendLoader) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\r\n\r\nuseGLTF.clear = input => useLoader.clear(GLTFLoader, input);\r\n\r\nexport { useGLTF };\r\n", "import { useThree, useLoader } from '@react-three/fiber';\r\nimport { useEffect } from 'react';\r\nimport { KTX2Loader } from 'three-stdlib';\r\nimport { IsObject } from './useTexture.js';\r\n\r\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\r\nfunction useKTX2(input, basisPath = `${cdn}/basis/`) {\r\n  const gl = useThree(state => state.gl);\r\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\r\n    loader.detectSupport(gl);\r\n    loader.setTranscoderPath(basisPath);\r\n  }); // https://github.com/mrdoob/three.js/issues/22696\r\n  // Upload the texture to the GPU immediately instead of waiting for the first render\r\n\r\n  useEffect(() => {\r\n    const array = Array.isArray(textures) ? textures : [textures];\r\n    array.forEach(gl.initTexture);\r\n  }, [gl, textures]);\r\n\r\n  if (IsObject(input)) {\r\n    const keys = Object.keys(input);\r\n    const keyed = {};\r\n    keys.forEach(key => Object.assign(keyed, {\r\n      [key]: textures[keys.indexOf(key)]\r\n    }));\r\n    return keyed;\r\n  } else {\r\n    return textures;\r\n  }\r\n}\r\n\r\nuseKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, loader => {\r\n  loader.setTranscoderPath(basisPath);\r\n});\r\n\r\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\r\n\r\nexport { useKTX2 };\r\n", "import * as React from 'react';\r\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\r\nimport StatsImpl from 'stats.js';\r\nimport { useEffectfulState } from '../helpers/useEffectfulState.js';\r\n\r\nfunction Stats({\r\n  showPanel = 0,\r\n  className,\r\n  parent\r\n}) {\r\n  const stats = useEffectfulState(() => new StatsImpl(), []);\r\n  React.useEffect(() => {\r\n    if (stats) {\r\n      const node = parent && parent.current || document.body;\r\n      stats.showPanel(showPanel);\r\n      node == null ? void 0 : node.appendChild(stats.dom);\r\n      if (className) stats.dom.classList.add(...className.split(' ').filter(cls => cls));\r\n      const begin = addEffect(() => stats.begin());\r\n      const end = addAfterEffect(() => stats.end());\r\n      return () => {\r\n        node == null ? void 0 : node.removeChild(stats.dom);\r\n        begin();\r\n        end();\r\n      };\r\n    }\r\n  }, [parent, stats, className, showPanel]);\r\n  return null;\r\n}\r\n\r\nexport { Stats };\r\n", "import * as React from 'react';\r\n\r\nfunction call(ref, value) {\r\n  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\r\n}\r\n\r\nfunction useEffectfulState(fn, deps = [], cb) {\r\n  const [state, set] = React.useState();\r\n  React.useLayoutEffect(() => {\r\n    const value = fn();\r\n    set(value);\r\n    call(cb, value);\r\n    return () => call(cb, null);\r\n  }, deps);\r\n  return state;\r\n}\r\n\r\nexport { useEffectfulState };\r\n", "import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\r\nimport * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { useFBO } from './useFBO.js';\r\n\r\nfunction useDepthBuffer({\r\n  size = 256,\r\n  frames = Infinity\r\n} = {}) {\r\n  const dpr = useThree(state => state.viewport.dpr);\r\n  const {\r\n    width,\r\n    height\r\n  } = useThree(state => state.size);\r\n  const w = size || width * dpr;\r\n  const h = size || height * dpr;\r\n  const depthConfig = React.useMemo(() => {\r\n    const depthTexture = new DepthTexture(w, h);\r\n    depthTexture.format = DepthFormat;\r\n    depthTexture.type = UnsignedShortType;\r\n    return {\r\n      depthTexture\r\n    };\r\n  }, [w, h]);\r\n  let count = 0;\r\n  const depthFBO = useFBO(w, h, depthConfig);\r\n  useFrame(state => {\r\n    if (frames === Infinity || count < frames) {\r\n      state.gl.setRenderTarget(depthFBO);\r\n      state.gl.render(state.scene, state.camera);\r\n      state.gl.setRenderTarget(null);\r\n      count++;\r\n    }\r\n  });\r\n  return depthFBO.depthTexture;\r\n}\r\n\r\nexport { useDepthBuffer };\r\n", "import * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\n// \uD83D\uDC47 uncomment when TS version supports function overloads\r\n// export function useFBO(settings?: FBOSettings)\r\nfunction useFBO(width, height, settings) {\r\n  const {\r\n    gl,\r\n    size,\r\n    viewport\r\n  } = useThree();\r\n\r\n  const _width = typeof width === 'number' ? width : size.width * viewport.dpr;\r\n\r\n  const _height = typeof height === 'number' ? height : size.height * viewport.dpr;\r\n\r\n  const _settings = (typeof width === 'number' ? settings : width) || {};\r\n\r\n  const {\r\n    samples,\r\n    ...targetSettings\r\n  } = _settings;\r\n  const target = React.useMemo(() => {\r\n    let target;\r\n    target = new THREE.WebGLRenderTarget(_width, _height, {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      encoding: gl.outputEncoding,\r\n      type: THREE.HalfFloatType,\r\n      ...targetSettings\r\n    });\r\n    target.samples = samples;\r\n    return target;\r\n  }, []);\r\n  React.useLayoutEffect(() => {\r\n    target.setSize(_width, _height);\r\n    if (samples) target.samples = samples;\r\n  }, [samples, target, _width, _height]);\r\n  React.useEffect(() => {\r\n    return () => target.dispose();\r\n  }, []);\r\n  return target;\r\n}\r\n\r\nexport { useFBO };\r\n", "import { useThree } from '@react-three/fiber';\r\n\r\nfunction useAspect(width, height, factor = 1) {\r\n  const v = useThree(state => state.viewport);\r\n  const adaptedHeight = height * (v.aspect > width / height ? v.width / width : v.height / height);\r\n  const adaptedWidth = width * (v.aspect > width / height ? v.width / width : v.height / height);\r\n  return [adaptedWidth * factor, adaptedHeight * factor, 1];\r\n}\r\n\r\nexport { useAspect };\r\n", "// GPU blocklist\n// SEE: https://chromium.googlesource.com/chromium/src/+/master/gpu/config/software_rendering_list.json\n// SEE: https://hg.mozilla.org/mozilla-central/raw-file/tip/services/settings/dumps/blocklists/gfx.json\nexport const BLOCKLISTED_GPUS = [\n  'geforce 320m',\n  'geforce 8600',\n  'geforce 8600m gt',\n  'geforce 8800 gs',\n  'geforce 8800 gt',\n  'geforce 9400',\n  'geforce 9400m g',\n  'geforce 9400m',\n  'geforce 9600m gt',\n  'geforce 9600m',\n  'geforce fx go5200',\n  'geforce gt 120',\n  'geforce gt 130',\n  'geforce gt 330m',\n  'geforce gtx 285',\n  'google swiftshader',\n  'intel g41',\n  'intel g45',\n  'intel gma 4500mhd',\n  'intel gma x3100',\n  'intel hd 3000',\n  'intel q45',\n  'legacy',\n  'mali-2',\n  'mali-3',\n  'mali-4',\n  'quadro fx 1500',\n  'quadro fx 4',\n  'quadro fx 5',\n  'radeon hd 2400',\n  'radeon hd 2600',\n  'radeon hd 4670',\n  'radeon hd 4850',\n  'radeon hd 4870',\n  'radeon hd 5670',\n  'radeon hd 5750',\n  'radeon hd 6290',\n  'radeon hd 6300',\n  'radeon hd 6310',\n  'radeon hd 6320',\n  'radeon hd 6490m',\n  'radeon hd 6630m',\n  'radeon hd 6750m',\n  'radeon hd 6770m',\n  'radeon hd 6970m',\n  'sgx 543',\n  'sgx543',\n];\n", "const debug = false ? console.log : undefined;\n\nexport function cleanRenderer(renderer: string) {\n  debug?.('cleanRenderer', { renderer });\n\n  renderer = renderer\n    .toLowerCase()\n    // Strip off ANGLE() - for example:\n    // 'ANGLE (NVIDIA TITAN Xp)' becomes 'NVIDIA TITAN Xp'':\n    .replace(/^angle ?\\((.+)\\)*$/, '$1')\n    // Strip off [number]gb & strip off direct3d and after - for example:\n    // 'Radeon (TM) RX 470 Series Direct3D11 vs_5_0 ps_5_0' becomes\n    // 'Radeon (TM) RX 470 Series'\n    .replace(/\\s(\\d{1,2}gb|direct3d.+$)|\\(r\\)| \\([^)]+\\)$/g, '');\n\n  debug?.('cleanRenderer - renderer cleaned to', { renderer });\n\n  return renderer;\n};\n", "/**\r\n * The following defined constants and descriptions are directly ported from https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\r\n *\r\n * Any copyright is dedicated to the Public Domain. http://creativecommons.org/publicdomain/zero/1.0/\r\n *\r\n * Contributors\r\n *\r\n * See: https://developer.mozilla.org/en-US/profiles/Sheppy\r\n * See: https://developer.mozilla.org/en-US/profiles/fscholz\r\n * See: https://developer.mozilla.org/en-US/profiles/AtiX\r\n * See: https://developer.mozilla.org/en-US/profiles/Sebastianz\r\n *\r\n * These constants are defined on the WebGLRenderingContext / WebGL2RenderingContext interface\r\n */\r\n// Clearing buffers\r\n// Constants passed to WebGLRenderingContext.clear() to clear buffer masks\r\n/**\r\n * Passed to clear to clear the current depth buffer\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_BUFFER_BIT = 0x00000100;\r\n/**\r\n * Passed to clear to clear the current stencil buffer\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BUFFER_BIT = 0x00000400;\r\n/**\r\n * Passed to clear to clear the current color buffer\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_BUFFER_BIT = 0x00004000;\r\n// Rendering primitives\r\n// Constants passed to WebGLRenderingContext.drawElements() or WebGLRenderingContext.drawArrays() to specify what kind of primitive to render\r\n/**\r\n * Passed to drawElements or drawArrays to draw single points\r\n * @constant {number}\r\n */\r\nconst GL_POINTS = 0x0000;\r\n/**\r\n * Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it\r\n * @constant {number}\r\n */\r\nconst GL_LINES = 0x0001;\r\n/**\r\n * Passed to drawElements or drawArrays to draw lines. Each set of two vertices is treated as a separate line segment\r\n * @constant {number}\r\n */\r\nconst GL_LINE_LOOP = 0x0002;\r\n/**\r\n * Passed to drawElements or drawArrays to draw a connected group of line segments from the first vertex to the last\r\n * @constant {number}\r\n */\r\nconst GL_LINE_STRIP = 0x0003;\r\n/**\r\n * Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle\r\n * @constant {number}\r\n */\r\nconst GL_TRIANGLES = 0x0004;\r\n/**\r\n * Passed to drawElements or drawArrays to draw a connected group of triangles\r\n * @constant {number}\r\n */\r\nconst GL_TRIANGLE_STRIP = 0x0005;\r\n/**\r\n * Passed to drawElements or drawArrays to draw a connected group of triangles. Each vertex connects to the previous and the first vertex in the fan\r\n * @constant {number}\r\n */\r\nconst GL_TRIANGLE_FAN = 0x0006;\r\n// Blending modes\r\n// Constants passed to WebGLRenderingContext.blendFunc() or WebGLRenderingContext.blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately)\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to turn off a component\r\n * @constant {number}\r\n */\r\nconst GL_ZERO = 0;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to turn on a component\r\n * @constant {number}\r\n */\r\nconst GL_ONE = 1;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the source elements color\r\n * @constant {number}\r\n */\r\nconst GL_SRC_COLOR = 0x0300;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source elements color\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_SRC_COLOR = 0x0301;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the source's alpha\r\n * @constant {number}\r\n */\r\nconst GL_SRC_ALPHA = 0x0302;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source's alpha\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_SRC_ALPHA = 0x0303;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's alpha\r\n * @constant {number}\r\n */\r\nconst GL_DST_ALPHA = 0x0304;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's alpha\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_DST_ALPHA = 0x0305;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's color\r\n * @constant {number}\r\n */\r\nconst GL_DST_COLOR = 0x0306;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's color\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_DST_COLOR = 0x0307;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the minimum of source's alpha or one minus the destination's alpha\r\n * @constant {number}\r\n */\r\nconst GL_SRC_ALPHA_SATURATE = 0x0308;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify a constant color blend function\r\n * @constant {number}\r\n */\r\nconst GL_CONSTANT_COLOR = 0x8001;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify one minus a constant color blend function\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify a constant alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_CONSTANT_ALPHA = 0x8003;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify one minus a constant alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;\r\n// Blending equations\r\n// Constants passed to WebGLRenderingContext.blendEquation() or WebGLRenderingContext.blendEquationSeparate() to control how the blending is calculated (for both, RBG and alpha, or separately)\r\n/**\r\n * Passed to blendEquation or blendEquationSeparate to set an addition blend function\r\n * @constant {number}\r\n */\r\nconst GL_FUNC_ADD = 0x8006;\r\n/**\r\n * Passed to blendEquation or blendEquationSeparate to specify a subtraction blend function (source - destination)\r\n * @constant {number}\r\n */\r\nconst GL_FUNC_SUBSTRACT = 0x800a;\r\n/**\r\n * Passed to blendEquation or blendEquationSeparate to specify a reverse subtraction blend function (destination - source)\r\n * @constant {number}\r\n */\r\nconst GL_FUNC_REVERSE_SUBTRACT = 0x800b;\r\n// Getting GL parameter information\r\n// Constants passed to WebGLRenderingContext.getParameter() to specify what information to return\r\n/**\r\n * Passed to getParameter to get the current RGB blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_EQUATION = 0x8009;\r\n/**\r\n * Passed to getParameter to get the current RGB blend function. Same as BLEND_EQUATION\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_EQUATION_RGB = 0x8009;\r\n/**\r\n * Passed to getParameter to get the current alpha blend function. Same as BLEND_EQUATION\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_EQUATION_ALPHA = 0x883d;\r\n/**\r\n * Passed to getParameter to get the current destination RGB blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_DST_RGB = 0x80c8;\r\n/**\r\n * Passed to getParameter to get the current source RGB blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_SRC_RGB = 0x80c9;\r\n/**\r\n * Passed to getParameter to get the current destination alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_DST_ALPHA = 0x80ca;\r\n/**\r\n * Passed to getParameter to get the current source alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_SRC_ALPHA = 0x80cb;\r\n/**\r\n * Passed to getParameter to return a the current blend color\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_COLOR = 0x8005;\r\n/**\r\n * Passed to getParameter to get the array buffer binding\r\n * @constant {number}\r\n */\r\nconst GL_ARRAY_BUFFER_BINDING = 0x8894;\r\n/**\r\n * Passed to getParameter to get the current element array buffer\r\n * @constant {number}\r\n */\r\nconst GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\r\n/**\r\n * Passed to getParameter to get the current lineWidth (set by the lineWidth method)\r\n * @constant {number}\r\n */\r\nconst GL_LINE_WIDTH = 0x0b21;\r\n/**\r\n * Passed to getParameter to get the current size of a point drawn with gl.POINTS\r\n * @constant {number}\r\n */\r\nconst GL_ALIASED_POINT_SIZE_RANGE = 0x846d;\r\n/**\r\n * Passed to getParameter to get the range of available widths for a line. Returns a length-2 array with the lo value at 0, and hight at 1\r\n * @constant {number}\r\n */\r\nconst GL_ALIASED_LINE_WIDTH_RANGE = 0x846e;\r\n/**\r\n * Passed to getParameter to get the current value of cullFace. Should return FRONT, BACK, or FRONT_AND_BACK\r\n * @constant {number}\r\n */\r\nconst GL_CULL_FACE_MODE = 0x0b45;\r\n/**\r\n * Passed to getParameter to determine the current value of frontFace. Should return CW or CCW\r\n * @constant {number}\r\n */\r\nconst GL_FRONT_FACE = 0x0b46;\r\n/**\r\n * Passed to getParameter to return a length-2 array of floats giving the current depth range\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_RANGE = 0x0b70;\r\n/**\r\n * Passed to getParameter to determine if the depth write mask is enabled\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_WRITEMASK = 0x0b72;\r\n/**\r\n * Passed to getParameter to determine the current depth clear value\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_CLEAR_VALUE = 0x0b73;\r\n/**\r\n * Passed to getParameter to get the current depth function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_FUNC = 0x0b74;\r\n/**\r\n * Passed to getParameter to get the value the stencil will be cleared to\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_CLEAR_VALUE = 0x0b91;\r\n/**\r\n * Passed to getParameter to get the current stencil function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_FUNC = 0x0b92;\r\n/**\r\n * Passed to getParameter to get the current stencil fail function. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_FAIL = 0x0b94;\r\n/**\r\n * Passed to getParameter to get the current stencil fail function should the depth buffer test fail. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_PASS_DEPTH_FAIL = 0x0b95;\r\n/**\r\n * Passed to getParameter to get the current stencil fail function should the depth buffer test pass. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_PASS_DEPTH_PASS = 0x0b96;\r\n/**\r\n * Passed to getParameter to get the reference value used for stencil tests\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_REF = 0x0b97;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_VALUE_MASK = 0x0b93;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_WRITEMASK = 0x0b98;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_FUNC = 0x8800;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_FAIL = 0x8801;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_REF = 0x8ca3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_VALUE_MASK = 0x8ca4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_WRITEMASK = 0x8ca5;\r\n/**\r\n * Returns an Int32Array with four elements for the current viewport dimensions\r\n * @constant {number}\r\n */\r\nconst GL_VIEWPORT = 0x0ba2;\r\n/**\r\n * Returns an Int32Array with four elements for the current scissor box dimensions\r\n * @constant {number}\r\n */\r\nconst GL_SCISSOR_BOX = 0x0c10;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_CLEAR_VALUE = 0x0c22;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_WRITEMASK = 0x0c23;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_ALIGNMENT = 0x0cf5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_ALIGNMENT = 0x0d05;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_SIZE = 0x0d33;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VIEWPORT_DIMS = 0x0d3a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SUBPIXEL_BITS = 0x0d50;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RED_BITS = 0x0d52;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_GREEN_BITS = 0x0d53;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BLUE_BITS = 0x0d54;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ALPHA_BITS = 0x0d55;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_BITS = 0x0d56;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BITS = 0x0d57;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_POLYGON_OFFSET_UNITS = 0x2a00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_POLYGON_OFFSET_FACTOR = 0x8038;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_2D = 0x8069;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_BUFFERS = 0x80a8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLES = 0x80a9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_COVERAGE_VALUE = 0x80aa;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_COVERAGE_INVERT = 0x80ab;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_TEXTURE_FORMATS = 0x86a3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VENDOR = 0x1f00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERER = 0x1f01;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERSION = 0x1f02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8b9a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8b9b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BROWSER_DEFAULT_WEBGL = 0x9244;\r\n// Buffers\r\n// Constants passed to WebGLRenderingContext.bufferData(), WebGLRenderingContext.bufferSubData(), WebGLRenderingContext.bindBuffer(), or WebGLRenderingContext.getBufferParameter()\r\n/**\r\n * Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and not change often\r\n * @constant {number}\r\n */\r\nconst GL_STATIC_DRAW = 0x88e4;\r\n/**\r\n * Passed to bufferData as a hint about whether the contents of the buffer are likely to not be used often\r\n * @constant {number}\r\n */\r\nconst GL_STREAM_DRAW = 0x88e0;\r\n/**\r\n * Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and change often\r\n * @constant {number}\r\n */\r\nconst GL_DYNAMIC_DRAW = 0x88e8;\r\n/**\r\n * Passed to bindBuffer or bufferData to specify the type of buffer being used\r\n * @constant {number}\r\n */\r\nconst GL_ARRAY_BUFFER = 0x8892;\r\n/**\r\n * Passed to bindBuffer or bufferData to specify the type of buffer being used\r\n * @constant {number}\r\n */\r\nconst GL_ELEMENT_ARRAY_BUFFER = 0x8893;\r\n/**\r\n * Passed to getBufferParameter to get a buffer's size\r\n * @constant {number}\r\n */\r\nconst GL_BUFFER_SIZE = 0x8764;\r\n/**\r\n * Passed to getBufferParameter to get the hint for the buffer passed in when it was created\r\n * @constant {number}\r\n */\r\nconst GL_BUFFER_USAGE = 0x8765;\r\n// Vertex attributes\r\n// Constants passed to WebGLRenderingContext.getVertexAttrib()\r\n/**\r\n * Passed to getVertexAttrib to read back the current vertex attribute\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_VERTEX_ATTRIB = 0x8626;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889f;\r\n// Culling\r\n// Constants passed to WebGLRenderingContext.cullFace()\r\n/**\r\n * Passed to enable/disable to turn on/off culling. Can also be used with getParameter to find the current culling method\r\n * @constant {number}\r\n */\r\nconst GL_CULL_FACE = 0x0b44;\r\n/**\r\n * Passed to cullFace to specify that only front faces should be culled\r\n * @constant {number}\r\n */\r\nconst GL_FRONT = 0x0404;\r\n/**\r\n * Passed to cullFace to specify that only back faces should be culled\r\n * @constant {number}\r\n */\r\nconst GL_BACK = 0x0405;\r\n/**\r\n * Passed to cullFace to specify that front and back faces should be culled\r\n * @constant {number}\r\n */\r\nconst GL_FRONT_AND_BACK = 0x0408;\r\n// Enabling and disabling\r\n// Constants passed to WebGLRenderingContext.enable() or WebGLRenderingContext.disable()\r\n/**\r\n * Passed to enable/disable to turn on/off blending. Can also be used with getParameter to find the current blending method\r\n * @constant {number}\r\n */\r\nconst GL_BLEND = 0x0be2;\r\n/**\r\n * Passed to enable/disable to turn on/off the depth test. Can also be used with getParameter to query the depth test\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_TEST = 0x0b71;\r\n/**\r\n * Passed to enable/disable to turn on/off dithering. Can also be used with getParameter to find the current dithering method\r\n * @constant {number}\r\n */\r\nconst GL_DITHER = 0x0bd0;\r\n/**\r\n * Passed to enable/disable to turn on/off the polygon offset. Useful for rendering hidden-line images, decals, and or solids with highlighted edges. Can also be used with getParameter to query the scissor test\r\n * @constant {number}\r\n */\r\nconst GL_POLYGON_OFFSET_FILL = 0x8037;\r\n/**\r\n * Passed to enable/disable to turn on/off the alpha to coverage. Used in multi-sampling alpha channels\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809e;\r\n/**\r\n * Passed to enable/disable to turn on/off the sample coverage. Used in multi-sampling\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_COVERAGE = 0x80a0;\r\n/**\r\n * Passed to enable/disable to turn on/off the scissor test. Can also be used with getParameter to query the scissor test\r\n * @constant {number}\r\n */\r\nconst GL_SCISSOR_TEST = 0x0c11;\r\n/**\r\n * Passed to enable/disable to turn on/off the stencil test. Can also be used with getParameter to query the stencil test\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_TEST = 0x0b90;\r\n// Errors\r\n// Constants returned from WebGLRenderingContext.getError()\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_NO_ERROR = 0;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_ENUM = 0x0500;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_VALUE = 0x0501;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_OPERATION = 0x0502;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_OUT_OF_MEMORY = 0x0505;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_CONTEXT_LOST_WEBGL = 0x9242;\r\n// Front face directions\r\n// Constants passed to WebGLRenderingContext.frontFace()\r\n/**\r\n * Passed to frontFace to specify the front face of a polygon is drawn in the clockwise direction,\r\n * @constant {number}\r\n */\r\nconst GL_CW = 0x0900;\r\n/**\r\n * Passed to frontFace to specify the front face of a polygon is drawn in the counter clockwise direction\r\n * @constant {number}\r\n */\r\nconst GL_CCW = 0x0901;\r\n// Hints\r\n// Constants passed to WebGLRenderingContext.hint()\r\n/**\r\n * There is no preference for this behavior\r\n * @constant {number}\r\n */\r\nconst GL_DONT_CARE = 0x1100;\r\n/**\r\n * The most efficient behavior should be used\r\n * @constant {number}\r\n */\r\nconst GL_FASTEST = 0x1101;\r\n/**\r\n * The most correct or the highest quality option should be used\r\n * @constant {number}\r\n */\r\nconst GL_NICEST = 0x1102;\r\n/**\r\n * Hint for the quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap()\r\n * @constant {number}\r\n */\r\nconst GL_GENERATE_MIPMAP_HINT = 0x8192;\r\n// Data types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BYTE = 0x1400;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_BYTE = 0x1401;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SHORT = 0x1402;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT = 0x1403;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT = 0x1404;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT = 0x1405;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT = 0x1406;\r\n// Pixel formats\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT = 0x1902;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ALPHA = 0x1906;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB = 0x1907;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA = 0x1908;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LUMINANCE = 0x1909;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LUMINANCE_ALPHA = 0x190a;\r\n// Pixel types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT_5_6_5 = 0x8363;\r\n// Shaders\r\n// Constants passed to WebGLRenderingContext.getShaderParameter()\r\n/**\r\n * Passed to createShader to define a fragment shader\r\n * @constant {number}\r\n */\r\nconst GL_FRAGMENT_SHADER = 0x8b30;\r\n/**\r\n * Passed to createShader to define a vertex shader\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_SHADER = 0x8b31;\r\n/**\r\n * Passed to getShaderParamter to get the status of the compilation. Returns false if the shader was not compiled. You can then query getShaderInfoLog to find the exact error\r\n * @constant {number}\r\n */\r\nconst GL_COMPILE_STATUS = 0x8b81;\r\n/**\r\n * Passed to getShaderParamter to determine if a shader was deleted via deleteShader. Returns true if it was, false otherwise\r\n * @constant {number}\r\n */\r\nconst GL_DELETE_STATUS = 0x8b80;\r\n/**\r\n * Passed to getProgramParameter after calling linkProgram to determine if a program was linked correctly. Returns false if there were errors. Use getProgramInfoLog to find the exact error\r\n * @constant {number}\r\n */\r\nconst GL_LINK_STATUS = 0x8b82;\r\n/**\r\n * Passed to getProgramParameter after calling validateProgram to determine if it is valid. Returns false if errors were found\r\n * @constant {number}\r\n */\r\nconst GL_VALIDATE_STATUS = 0x8b83;\r\n/**\r\n * Passed to getProgramParameter after calling attachShader to determine if the shader was attached correctly. Returns false if errors occurred\r\n * @constant {number}\r\n */\r\nconst GL_ATTACHED_SHADERS = 0x8b85;\r\n/**\r\n * Passed to getProgramParameter to get the number of attributes active in a program\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_ATTRIBUTES = 0x8b89;\r\n/**\r\n * Passed to getProgramParamter to get the number of uniforms active in a program\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_UNIFORMS = 0x8b86;\r\n/**\r\n * The maximum number of entries possible in the vertex attribute list\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_ATTRIBS = 0x8869;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8dfb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VARYING_VECTORS = 0x8dfc;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4c;\r\n/**\r\n * Implementation dependent number of maximum texture units. At least 8\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8dfd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SHADER_TYPE = 0x8b4f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SHADING_LANGUAGE_VERSION = 0x8b8c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_PROGRAM = 0x8b8d;\r\n// Depth or stencil tests\r\n// Constants passed to WebGLRenderingContext.stencilFunc()\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn\r\n * @constant {number}\r\n */\r\nconst GL_NEVER = 0x0200;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn\r\n * @constant {number}\r\n */\r\nconst GL_ALWAYS = 0x0207;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value\r\n * @constant {number}\r\n */\r\nconst GL_LESS = 0x0201;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_EQUAL = 0x0202;\r\n/**\r\n *  Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_LEQUAL = 0x0203;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value\r\n * @constant {number}\r\n */\r\nconst GL_GREATER = 0x0204;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_GEQUAL = 0x0206;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_NOTEQUAL = 0x0205;\r\n// Stencil actions\r\n// Constants passed to WebGLRenderingContext.stencilOp()\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_KEEP = 0x1e00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_REPLACE = 0x1e01;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INCR = 0x1e02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DECR = 0x1e03;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INVERT = 0x150a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INCR_WRAP = 0x8507;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DECR_WRAP = 0x8508;\r\n// Textures\r\n// Constants passed to WebGLRenderingContext.texParameteri(), WebGLRenderingContext.texParameterf(), WebGLRenderingContext.bindTexture(), WebGLRenderingContext.texImage2D(), and others\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NEAREST = 0x2600;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LINEAR = 0x2601;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NEAREST_MIPMAP_NEAREST = 0x2700;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LINEAR_MIPMAP_NEAREST = 0x2701;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NEAREST_MIPMAP_LINEAR = 0x2702;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LINEAR_MIPMAP_LINEAR = 0x2703;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAG_FILTER = 0x2800;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MIN_FILTER = 0x2801;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_WRAP_S = 0x2802;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_WRAP_T = 0x2803;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_2D = 0x0de1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE = 0x1702;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP = 0x8513;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851c;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE0 = 0x84c0;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE1 = 0x84c1;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE2 = 0x84c2;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE3 = 0x84c3;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE4 = 0x84c4;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE5 = 0x84c5;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE6 = 0x84c6;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE7 = 0x84c7;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE8 = 0x84c8;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE9 = 0x84c9;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE10 = 0x84ca;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE11 = 0x84cb;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE12 = 0x84cc;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE13 = 0x84cd;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE14 = 0x84ce;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE15 = 0x84cf;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE16 = 0x84d0;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE17 = 0x84d1;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE18 = 0x84d2;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE19 = 0x84d3;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE20 = 0x84d4;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE21 = 0x84d5;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE22 = 0x84d6;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE23 = 0x84d7;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE24 = 0x84d8;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE25 = 0x84d9;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE26 = 0x84da;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE27 = 0x84db;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE28 = 0x84dc;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE29 = 0x84dd;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE30 = 0x84de;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE31 = 0x84df;\r\n/**\r\n * The current active texture unit\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_TEXTURE = 0x84e0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_REPEAT = 0x2901;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CLAMP_TO_EDGE = 0x812f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MIRRORED_REPEAT = 0x8370;\r\n// Uniform types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_VEC2 = 0x8b50;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_VEC3 = 0x8b51;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_VEC4 = 0x8b52;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_VEC2 = 0x8b53;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_VEC3 = 0x8b54;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_VEC4 = 0x8b55;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL = 0x8b56;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL_VEC2 = 0x8b57;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL_VEC3 = 0x8b58;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL_VEC4 = 0x8b59;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT2 = 0x8b5a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT3 = 0x8b5b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT4 = 0x8b5c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D = 0x8b5e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_CUBE = 0x8b60;\r\n// Shader precision-specified types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LOW_FLOAT = 0x8df0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MEDIUM_FLOAT = 0x8df1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_HIGH_FLOAT = 0x8df2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LOW_INT = 0x8df3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MEDIUM_INT = 0x8df4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_HIGH_INT = 0x8df5;\r\n// Framebuffers and renderbuffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER = 0x8d40;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER = 0x8d41;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA4 = 0x8056;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB5_A1 = 0x8057;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB565 = 0x8d62;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT16 = 0x81a5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_INDEX = 0x1901;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_INDEX8 = 0x8d48;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_STENCIL = 0x84f9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_WIDTH = 0x8d42;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_HEIGHT = 0x8d43;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8d44;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_RED_SIZE = 0x8d50;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_GREEN_SIZE = 0x8d51;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_BLUE_SIZE = 0x8d52;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_ALPHA_SIZE = 0x8d53;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_DEPTH_SIZE = 0x8d54;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_STENCIL_SIZE = 0x8d55;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT0 = 0x8ce0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_ATTACHMENT = 0x8d00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_ATTACHMENT = 0x8d20;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_STENCIL_ATTACHMENT = 0x821a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NONE = 0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_COMPLETE = 0x8cd5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8cd9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_UNSUPPORTED = 0x8cdd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_BINDING = 0x8ca6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_BINDING = 0x8ca7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_RENDERBUFFER_SIZE = 0x84e8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506;\r\n// Pixel storage modes\r\n// Constants passed to WebGLRenderingContext.pixelStorei()\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_FLIP_Y_WEBGL = 0x9240;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\r\n// Additional constants defined WebGL 2\r\n// These constants are defined on the WebGL2RenderingContext interface. All WebGL 1 constants are also available in a WebGL 2 context\r\n// Getting GL parameter information\r\n// Constants passed to WebGLRenderingContext.getParameter() to specify what information to return\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_READ_BUFFER = 0x0c02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_ROW_LENGTH = 0x0cf2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_SKIP_ROWS = 0x0cf3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_SKIP_PIXELS = 0x0cf4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_ROW_LENGTH = 0x0d02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_SKIP_ROWS = 0x0d03;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_SKIP_PIXELS = 0x0d04;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_3D = 0x806a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_SKIP_IMAGES = 0x806d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_IMAGE_HEIGHT = 0x806e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_3D_TEXTURE_SIZE = 0x8073;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ELEMENTS_VERTICES = 0x80e8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ELEMENTS_INDICES = 0x80e9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_LOD_BIAS = 0x84fd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88ff;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VARYING_COMPONENTS = 0x8b4b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RASTERIZER_DISCARD = 0x8c89;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ARRAY_BINDING = 0x85b5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ELEMENT_INDEX = 0x8d6b;\r\n// Textures\r\n// Constants passed to WebGLRenderingContext.texParameteri(), WebGLRenderingContext.texParameterf(), WebGLRenderingContext.bindTexture(), WebGLRenderingContext.texImage2D(), and others\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RED = 0x1903;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8 = 0x8051;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8 = 0x8058;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB10_A2 = 0x8059;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_3D = 0x806f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_WRAP_R = 0x8072;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MIN_LOD = 0x813a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAX_LOD = 0x813b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BASE_LEVEL = 0x813c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAX_LEVEL = 0x813d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_COMPARE_MODE = 0x884c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_COMPARE_FUNC = 0x884d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SRGB = 0x8c40;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SRGB8 = 0x8c41;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SRGB8_ALPHA8 = 0x8c43;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COMPARE_REF_TO_TEXTURE = 0x884e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32F = 0x8814;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB32F = 0x8815;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA16F = 0x881a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB16F = 0x881b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_2D_ARRAY = 0x8c1a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_2D_ARRAY = 0x8c1d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R11F_G11F_B10F = 0x8c3a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB9_E5 = 0x8c3d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32UI = 0x8d70;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB32UI = 0x8d71;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA16UI = 0x8d76;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB16UI = 0x8d77;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8UI = 0x8d7c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8UI = 0x8d7d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32I = 0x8d82;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB32I = 0x8d83;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA16I = 0x8d88;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB16I = 0x8d89;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8I = 0x8d8e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8I = 0x8d8f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RED_INTEGER = 0x8d94;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB_INTEGER = 0x8d98;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA_INTEGER = 0x8d99;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8 = 0x8229;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8 = 0x822b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R16F = 0x822d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R32F = 0x822e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG16F = 0x822f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG32F = 0x8230;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8I = 0x8231;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8UI = 0x8232;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R16I = 0x8233;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R16UI = 0x8234;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R32I = 0x8235;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R32UI = 0x8236;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8I = 0x8237;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8UI = 0x8238;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG16I = 0x8239;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG16UI = 0x823a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG32I = 0x823b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG32UI = 0x823c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8_SNORM = 0x8f94;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8_SNORM = 0x8f95;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8_SNORM = 0x8f96;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8_SNORM = 0x8f97;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB10_A2UI = 0x906f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_IMMUTABLE_FORMAT = 0x912f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_IMMUTABLE_LEVELS = 0x82df;\r\n// Pixel types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_5_9_9_9_REV = 0x8c3e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_24_8 = 0x84fa;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_HALF_FLOAT = 0x140b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG = 0x8227;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG_INTEGER = 0x8228;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_2_10_10_10_REV = 0x8d9f;\r\n// Queries\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_QUERY = 0x8865;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT = 0x8866;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT_AVAILABLE = 0x8867;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ANY_SAMPLES_PASSED = 0x8c2f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a;\r\n// Draw buffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_DRAW_BUFFERS = 0x8824;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER0 = 0x8825;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER1 = 0x8826;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER2 = 0x8827;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER3 = 0x8828;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER4 = 0x8829;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER5 = 0x882a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER6 = 0x882b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER7 = 0x882c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER8 = 0x882d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER9 = 0x882e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER10 = 0x882f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER11 = 0x8830;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER12 = 0x8831;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER13 = 0x8832;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER14 = 0x8833;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER15 = 0x8834;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COLOR_ATTACHMENTS = 0x8cdf;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT1 = 0x8ce1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT2 = 0x8ce2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT3 = 0x8ce3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT4 = 0x8ce4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT5 = 0x8ce5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT6 = 0x8ce6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT7 = 0x8ce7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT8 = 0x8ce8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT9 = 0x8ce9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT10 = 0x8cea;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT11 = 0x8ceb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT12 = 0x8cec;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT13 = 0x8ced;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT14 = 0x8cee;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT15 = 0x8cef;\r\n// Samplers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_3D = 0x8b5f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D_SHADOW = 0x8b62;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D_ARRAY = 0x8dc1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D_ARRAY_SHADOW = 0x8dc4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_CUBE_SHADOW = 0x8dc5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_2D = 0x8dca;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_3D = 0x8dcb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_CUBE = 0x8dcc;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_2D_ARRAY = 0x8dcf;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_2D = 0x8dd2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_3D = 0x8dd3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_SAMPLES = 0x8d57;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_BINDING = 0x8919;\r\n// Buffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_PACK_BUFFER = 0x88eb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_UNPACK_BUFFER = 0x88ec;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_PACK_BUFFER_BINDING = 0x88ed;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88ef;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_READ_BUFFER = 0x8f36;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_WRITE_BUFFER = 0x8f37;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_READ_BUFFER_BINDING = 0x8f36;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_WRITE_BUFFER_BINDING = 0x8f37;\r\n// Data types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT2X3 = 0x8b65;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT2X4 = 0x8b66;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT3X2 = 0x8b67;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT3X4 = 0x8b68;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT4X2 = 0x8b69;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT4X3 = 0x8b6a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_VEC2 = 0x8dc6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_VEC3 = 0x8dc7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_VEC4 = 0x8dc8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_NORMALIZED = 0x8c17;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SIGNED_NORMALIZED = 0x8f9c;\r\n// Vertex attributes\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe;\r\n// Transform feedback\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8c83;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INTERLEAVED_ATTRIBS = 0x8c8c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SEPARATE_ATTRIBS = 0x8c8d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER = 0x8c8e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK = 0x8e22;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_PAUSED = 0x8e23;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8e24;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BINDING = 0x8e25;\r\n// Framebuffers and renderbuffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_DEFAULT = 0x8218;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH24_STENCIL8 = 0x88f0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_FRAMEBUFFER_BINDING = 0x8ca6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_READ_FRAMEBUFFER = 0x8ca8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_FRAMEBUFFER = 0x8ca9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_READ_FRAMEBUFFER_BINDING = 0x8caa;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_SAMPLES = 0x8cab;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56;\r\n// Uniforms\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER = 0x8a11;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_BINDING = 0x8a28;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_START = 0x8a29;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_SIZE = 0x8a2a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_UNIFORM_BLOCK_SIZE = 0x8a30;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_UNIFORM_BLOCKS = 0x8a36;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_TYPE = 0x8a37;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_SIZE = 0x8a38;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_INDEX = 0x8a3a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_OFFSET = 0x8a3b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_ARRAY_STRIDE = 0x8a3c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_MATRIX_STRIDE = 0x8a3d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_IS_ROW_MAJOR = 0x8a3e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_BINDING = 0x8a3f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_DATA_SIZE = 0x8a40;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\r\n// Sync objects\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_OBJECT_TYPE = 0x9112;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_CONDITION = 0x9113;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_STATUS = 0x9114;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_FLAGS = 0x9115;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_FENCE = 0x9116;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNALED = 0x9118;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SIGNALED = 0x9119;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ALREADY_SIGNALED = 0x911a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TIMEOUT_EXPIRED = 0x911b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CONDITION_SATISFIED = 0x911c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_WAIT_FAILED = 0x911d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;\r\n// Miscellaneous constants\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR = 0x1800;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH = 0x1801;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL = 0x1802;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MIN = 0x8007;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX = 0x8008;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT24 = 0x81a6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STREAM_READ = 0x88e1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STREAM_COPY = 0x88e2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STATIC_READ = 0x88e5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STATIC_COPY = 0x88e6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DYNAMIC_READ = 0x88e9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DYNAMIC_COPY = 0x88ea;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT32F = 0x8cac;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH32F_STENCIL8 = 0x8cad;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_INDEX = 0xffffffff;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TIMEOUT_IGNORED = -1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247;\r\n// Constants defined in WebGL extensions\r\n// ANGLE_instanced_arrays\r\n// The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type\r\n/**\r\n * Describes the frequency divisor used for instanced rendering\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88fe;\r\n// WEBGL_debug_renderer_info\r\n// The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes\r\n/**\r\n * Passed to getParameter to get the vendor string of the graphics driver\r\n * @constant {number}\r\n */\r\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245;\r\n/**\r\n * Passed to getParameter to get the renderer string of the graphics driver\r\n * @constant {number}\r\n */\r\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246;\r\n// EXT_texture_filter_anisotropic\r\n// The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF)\r\n/**\r\n * Returns the maximum available anisotropy\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff;\r\n/**\r\n * Passed to texParameter to set the desired maximum anisotropy for a texture\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84fe;\r\n// WEBGL_compressed_texture_s3tc\r\n// The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats\r\n/**\r\n * A DXT1-compressed image in an RGB image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0;\r\n/**\r\n * A DXT1-compressed image in an RGB image format with a simple on/off alpha value\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1;\r\n/**\r\n * A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2;\r\n/**\r\n * A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3 compression in how the alpha compression is done\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3;\r\n// WEBGL_compressed_texture_s3tc_srgb\r\n// The WEBGL_compressed_texture_s3tc_srgb extension is part of the WebGL API and exposes four S3TC compressed texture formats for the sRGB colorspace\r\n/**\r\n * A DXT1-compressed image in an sRGB image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8c4c;\r\n/**\r\n * A DXT1-compressed image in an sRGB image format with a simple on/off alpha value\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8c4d;\r\n/**\r\n * A DXT3-compressed image in an sRGBA image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8c4e;\r\n/**\r\n * A DXT5-compressed image in an sRGBA image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8c4f;\r\n// WEBGL_compressed_texture_etc\r\n// The WEBGL_compressed_texture_etc extension is part of the WebGL API and exposes 10 ETC/EAC compressed texture formats\r\n/**\r\n * One-channel (red) unsigned format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_R11_EAC = 0x9270;\r\n/**\r\n * One-channel (red) signed format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SIGNED_R11_EAC = 0x9271;\r\n/**\r\n * Two-channel (red and green) unsigned format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RG11_EAC = 0x9272;\r\n/**\r\n * Two-channel (red and green) signed format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273;\r\n/**\r\n * Compresses RBG8 data with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB8_ETC2 = 0x9274;\r\n/**\r\n * Compresses RGBA8 data. The RGB part is encoded the same as RGB_ETC2, but the alpha part is encoded separately\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9275;\r\n/**\r\n * Compresses sRBG8 data with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ETC2 = 0x9276;\r\n/**\r\n * Compresses sRGBA8 data. The sRGB part is encoded the same as SRGB_ETC2, but the alpha part is encoded separately\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9277;\r\n/**\r\n * Similar to RGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9278;\r\n/**\r\n * Similar to SRGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9279;\r\n// WEBGL_compressed_texture_pvrtc\r\n// The WEBGL_compressed_texture_pvrtc extension is part of the WebGL API and exposes four PVRTC compressed texture formats\r\n/**\r\n * RGB compression in 4-bit mode. One block for each 4\u00D74 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00;\r\n/**\r\n * RGBA compression in 4-bit mode. One block for each 4\u00D74 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02;\r\n/**\r\n * RGB compression in 2-bit mode. One block for each 8\u00D74 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01;\r\n/**\r\n * RGBA compression in 2-bit mode. One block for each 8\u00D74 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03;\r\n// WEBGL_compressed_texture_etc1\r\n// The WEBGL_compressed_texture_etc1 extension is part of the WebGL API and exposes the ETC1 compressed texture format\r\n/**\r\n * Compresses 24-bit RGB data with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8d64;\r\n// WEBGL_compressed_texture_atc\r\n// The WEBGL_compressed_texture_atc extension is part of the WebGL API and exposes 3 ATC compressed texture formats. ATC is a proprietary compression algorithm for compressing textures on handheld devices\r\n/**\r\n * Compresses RGB textures with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_ATC_WEBGL = 0x8c92;\r\n/**\r\n * Compresses RGBA textures using explicit alpha encoding (useful when alpha transitions are sharp)\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8c92;\r\n/**\r\n * Compresses RGBA textures using interpolated alpha encoding (useful when alpha transitions are gradient)\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87ee;\r\n// WEBGL_compressed_texture_astc\r\n// The WEBGL_compressed_texture_astc extension is part of the WebGL API and exposes Adaptive Scalable Texture Compression (ASTC) compressed texture formats to WebGL\r\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\r\n// https://developer.nvidia.com/astc-texture-compression-for-game-assets\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 4x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_4X4_KHR = 0x93b0;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 5x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_5X4_KHR = 0x93b1;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 5x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_5X5_KHR = 0x93b2;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 6x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_6X5_KHR = 0x93b3;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 6x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_6X6_KHR = 0x93b4;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 8x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_8X5_KHR = 0x93b5;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 8x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_8X6_KHR = 0x93b6;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 8x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_8X8_KHR = 0x93b7;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X5_KHR = 0x93b8;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X6_KHR = 0x93b9;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X8_KHR = 0x93ba;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X10_KHR = 0x93bb;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 12x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_12X10_KHR = 0x93bc;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 12x12\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_12X12_KHR = 0x93bd;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 4x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR = 0x93d0;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 5x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR = 0x93d1;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 5x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR = 0x93d2;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 6x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR = 0x93d3;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 6x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR = 0x93d4;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 8x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR = 0x93d5;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 8x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR = 0x93d6;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 8x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR = 0x93d7;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR = 0x93d8;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR = 0x93d9;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR = 0x93da;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR = 0x93db;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 12x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR = 0x93dc;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 12x12\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR = 0x93dd;\r\n// WEBGL_depth_texture\r\n// The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures\r\n/**\r\n * Unsigned integer type for 24-bit depth texture data\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_24_8_WEBGL = 0x84fa;\r\n// OES_texture_half_float\r\n// The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components\r\n/**\r\n * Half floating-point type (16-bit)\r\n * @constant {number}\r\n */\r\nconst GL_HALF_FLOAT_OES = 0x8d61;\r\n// WEBGL_color_buffer_float\r\n// The WEBGL_color_buffer_float extension is part of the WebGL API and adds the ability to render to 32-bit floating-point color buffers\r\n/**\r\n * RGBA 32-bit floating-point color-renderable format\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32F_EXT = 0x8814;\r\n/**\r\n * RGB 32-bit floating-point color-renderable format\r\n * @constant {number}\r\n */\r\nconst GL_RGB32F_EXT = 0x8815;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_NORMALIZED_EXT = 0x8c17;\r\n// EXT_blend_minmax\r\n// The EXT_blend_minmax extension is part of the WebGL API and extends blending capabilities by adding two new blend equations: the minimum or maximum color components of the source and destination colors\r\n/**\r\n * Produces the minimum color components of the source and destination colors\r\n * @constant {number}\r\n */\r\nconst GL_MIN_EXT = 0x8007;\r\n/**\r\n * Produces the maximum color components of the source and destination colors\r\n * @constant {number}\r\n */\r\nconst GL_MAX_EXT = 0x8008;\r\n// EXT_sRGB\r\n// The EXT_sRGB extension is part of the WebGL API and adds sRGB support to textures and framebuffer objects\r\n/**\r\n * Unsized sRGB format that leaves the precision up to the driver\r\n * @constant {number}\r\n */\r\nconst GL_SRGB_EXT = 0x8c40;\r\n/**\r\n * Unsized sRGB format with unsized alpha component\r\n * @constant {number}\r\n */\r\nconst GL_SRGB_ALPHA_EXT = 0x8c42;\r\n/**\r\n * Sized (8-bit) sRGB and alpha formats\r\n * @constant {number}\r\n */\r\nconst GL_SRGB8_ALPHA8_EXT = 0x8c43;\r\n/**\r\n * Returns the framebuffer color encoding\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = 0x8210;\r\n// OES_standard_derivatives\r\n// The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth\r\n/**\r\n * Indicates the accuracy of the derivative calculation for the GLSL built-in functions: dFdx, dFdy, and fwidth\r\n * @constant {number}\r\n */\r\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8b8b;\r\n// WEBGL_draw_buffers\r\n// The WEBGL_draw_buffers extension is part of the WebGL API and enables a fragment shader to write to several textures, which is useful for deferred shading, for example\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT0_WEBGL = 0x8ce0;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT1_WEBGL = 0x8ce1;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT2_WEBGL = 0x8ce2;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT3_WEBGL = 0x8ce3;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT4_WEBGL = 0x8ce4;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT5_WEBGL = 0x8ce5;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT6_WEBGL = 0x8ce6;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT7_WEBGL = 0x8ce7;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT8_WEBGL = 0x8ce8;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT9_WEBGL = 0x8ce9;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT10_WEBGL = 0x8cea;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT11_WEBGL = 0x8ceb;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT12_WEBGL = 0x8cec;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT13_WEBGL = 0x8ced;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT14_WEBGL = 0x8cee;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT15_WEBGL = 0x8cef;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER0_WEBGL = 0x8825;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER1_WEBGL = 0x8826;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER2_WEBGL = 0x8827;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER3_WEBGL = 0x8828;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER4_WEBGL = 0x8829;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER5_WEBGL = 0x882a;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER6_WEBGL = 0x882b;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER7_WEBGL = 0x882c;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER8_WEBGL = 0x882d;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER9_WEBGL = 0x882e;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER10_WEBGL = 0x882f;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER11_WEBGL = 0x8830;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER12_WEBGL = 0x8831;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER13_WEBGL = 0x8832;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER14_WEBGL = 0x8833;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER15_WEBGL = 0x8834;\r\n/**\r\n * Maximum number of framebuffer color attachment points\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8cdf;\r\n/**\r\n * Maximum number of draw buffers\r\n * @constant {number}\r\n */\r\nconst GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824;\r\n// OES_vertex_array_object\r\n// The OES_vertex_array_object extension is part of the WebGL API and provides vertex array objects (VAOs) which encapsulate vertex array states. These objects keep pointers to vertex data and provide names for different sets of vertex data\r\n/**\r\n * The bound vertex array object (VAO)\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ARRAY_BINDING_OES = 0x85b5;\r\n// EXT_disjoint_timer_query\r\n// The EXT_disjoint_timer_query extension is part of the WebGL API and provides a way to measure the duration of a set of GL commands, without stalling the rendering pipeline\r\n/**\r\n * The number of bits used to hold the query result for the given target\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_COUNTER_BITS_EXT = 0x8864;\r\n/**\r\n * The currently active query\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_QUERY_EXT = 0x8865;\r\n/**\r\n * The query result\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT_EXT = 0x8866;\r\n/**\r\n * A Boolean indicating whether or not a query result is available\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;\r\n/**\r\n * Elapsed time (in nanoseconds)\r\n * @constant {number}\r\n */\r\nconst GL_TIME_ELAPSED_EXT = 0x88bf;\r\n/**\r\n * The current time\r\n * @constant {number}\r\n */\r\nconst GL_TIMESTAMP_EXT = 0x8e28;\r\n/**\r\n * A Boolean indicating whether or not the GPU performed any disjoint operation\r\n * @constant {number}\r\n */\r\nconst GL_GPU_DISJOINT_EXT = 0x8fbb;\r\n// Constants defined in WebGL draft extensions\r\n// KHR_parallel_shader_compile\r\n// The KHR_parallel_shader_compile extension is part of the WebGL draft API and provides multithreaded asynchronous shader compilation\r\n/**\r\n * Query to determine if the compilation process is complete\r\n * @constant {number}\r\n */\r\nconst GL_COMPLETION_STATUS_KHR = 0x91b1;\n\nexport { GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_TEXTURE, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ALIASED_LINE_WIDTH_RANGE, GL_ALIASED_POINT_SIZE_RANGE, GL_ALPHA, GL_ALPHA_BITS, GL_ALREADY_SIGNALED, GL_ALWAYS, GL_ANY_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED_CONSERVATIVE, GL_ARRAY_BUFFER, GL_ARRAY_BUFFER_BINDING, GL_ATTACHED_SHADERS, GL_BACK, GL_BLEND, GL_BLEND_COLOR, GL_BLEND_DST_ALPHA, GL_BLEND_DST_RGB, GL_BLEND_EQUATION, GL_BLEND_EQUATION_ALPHA, GL_BLEND_EQUATION_RGB, GL_BLEND_SRC_ALPHA, GL_BLEND_SRC_RGB, GL_BLUE_BITS, GL_BOOL, GL_BOOL_VEC2, GL_BOOL_VEC3, GL_BOOL_VEC4, GL_BROWSER_DEFAULT_WEBGL, GL_BUFFER_SIZE, GL_BUFFER_USAGE, GL_BYTE, GL_CCW, GL_CLAMP_TO_EDGE, GL_COLOR, GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT0_WEBGL, GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT10, GL_COLOR_ATTACHMENT10_WEBGL, GL_COLOR_ATTACHMENT11, GL_COLOR_ATTACHMENT11_WEBGL, GL_COLOR_ATTACHMENT12, GL_COLOR_ATTACHMENT12_WEBGL, GL_COLOR_ATTACHMENT13, GL_COLOR_ATTACHMENT13_WEBGL, GL_COLOR_ATTACHMENT14, GL_COLOR_ATTACHMENT14_WEBGL, GL_COLOR_ATTACHMENT15, GL_COLOR_ATTACHMENT15_WEBGL, GL_COLOR_ATTACHMENT1_WEBGL, GL_COLOR_ATTACHMENT2, GL_COLOR_ATTACHMENT2_WEBGL, GL_COLOR_ATTACHMENT3, GL_COLOR_ATTACHMENT3_WEBGL, GL_COLOR_ATTACHMENT4, GL_COLOR_ATTACHMENT4_WEBGL, GL_COLOR_ATTACHMENT5, GL_COLOR_ATTACHMENT5_WEBGL, GL_COLOR_ATTACHMENT6, GL_COLOR_ATTACHMENT6_WEBGL, GL_COLOR_ATTACHMENT7, GL_COLOR_ATTACHMENT7_WEBGL, GL_COLOR_ATTACHMENT8, GL_COLOR_ATTACHMENT8_WEBGL, GL_COLOR_ATTACHMENT9, GL_COLOR_ATTACHMENT9_WEBGL, GL_COLOR_BUFFER_BIT, GL_COLOR_CLEAR_VALUE, GL_COLOR_WRITEMASK, GL_COMPARE_REF_TO_TEXTURE, GL_COMPILE_STATUS, GL_COMPLETION_STATUS_KHR, GL_COMPRESSED_R11_EAC, GL_COMPRESSED_RG11_EAC, GL_COMPRESSED_RGB8_ETC2, GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, GL_COMPRESSED_RGBA8_ETC2_EAC, GL_COMPRESSED_RGBA_ASTC_10X10_KHR, GL_COMPRESSED_RGBA_ASTC_10X5_KHR, GL_COMPRESSED_RGBA_ASTC_10X6_KHR, GL_COMPRESSED_RGBA_ASTC_10X8_KHR, GL_COMPRESSED_RGBA_ASTC_12X10_KHR, GL_COMPRESSED_RGBA_ASTC_12X12_KHR, GL_COMPRESSED_RGBA_ASTC_4X4_KHR, GL_COMPRESSED_RGBA_ASTC_5X4_KHR, GL_COMPRESSED_RGBA_ASTC_5X5_KHR, GL_COMPRESSED_RGBA_ASTC_6X5_KHR, GL_COMPRESSED_RGBA_ASTC_6X6_KHR, GL_COMPRESSED_RGBA_ASTC_8X5_KHR, GL_COMPRESSED_RGBA_ASTC_8X6_KHR, GL_COMPRESSED_RGBA_ASTC_8X8_KHR, GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL, GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL, GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG, GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, GL_COMPRESSED_RGBA_S3TC_DXT3_EXT, GL_COMPRESSED_RGBA_S3TC_DXT5_EXT, GL_COMPRESSED_RGB_ATC_WEBGL, GL_COMPRESSED_RGB_ETC1_WEBGL, GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG, GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG, GL_COMPRESSED_RGB_S3TC_DXT1_EXT, GL_COMPRESSED_SIGNED_R11_EAC, GL_COMPRESSED_SIGNED_RG11_EAC, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, GL_COMPRESSED_SRGB8_ETC2, GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT, GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, GL_COMPRESSED_TEXTURE_FORMATS, GL_CONDITION_SATISFIED, GL_CONSTANT_ALPHA, GL_CONSTANT_COLOR, GL_CONTEXT_LOST_WEBGL, GL_COPY_READ_BUFFER, GL_COPY_READ_BUFFER_BINDING, GL_COPY_WRITE_BUFFER, GL_COPY_WRITE_BUFFER_BINDING, GL_CULL_FACE, GL_CULL_FACE_MODE, GL_CURRENT_PROGRAM, GL_CURRENT_QUERY, GL_CURRENT_QUERY_EXT, GL_CURRENT_VERTEX_ATTRIB, GL_CW, GL_DECR, GL_DECR_WRAP, GL_DELETE_STATUS, GL_DEPTH, GL_DEPTH24_STENCIL8, GL_DEPTH32F_STENCIL8, GL_DEPTH_ATTACHMENT, GL_DEPTH_BITS, GL_DEPTH_BUFFER_BIT, GL_DEPTH_CLEAR_VALUE, GL_DEPTH_COMPONENT, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT32F, GL_DEPTH_FUNC, GL_DEPTH_RANGE, GL_DEPTH_STENCIL, GL_DEPTH_STENCIL_ATTACHMENT, GL_DEPTH_TEST, GL_DEPTH_WRITEMASK, GL_DITHER, GL_DONT_CARE, GL_DRAW_BUFFER0, GL_DRAW_BUFFER0_WEBGL, GL_DRAW_BUFFER1, GL_DRAW_BUFFER10, GL_DRAW_BUFFER10_WEBGL, GL_DRAW_BUFFER11, GL_DRAW_BUFFER11_WEBGL, GL_DRAW_BUFFER12, GL_DRAW_BUFFER12_WEBGL, GL_DRAW_BUFFER13, GL_DRAW_BUFFER13_WEBGL, GL_DRAW_BUFFER14, GL_DRAW_BUFFER14_WEBGL, GL_DRAW_BUFFER15, GL_DRAW_BUFFER15_WEBGL, GL_DRAW_BUFFER1_WEBGL, GL_DRAW_BUFFER2, GL_DRAW_BUFFER2_WEBGL, GL_DRAW_BUFFER3, GL_DRAW_BUFFER3_WEBGL, GL_DRAW_BUFFER4, GL_DRAW_BUFFER4_WEBGL, GL_DRAW_BUFFER5, GL_DRAW_BUFFER5_WEBGL, GL_DRAW_BUFFER6, GL_DRAW_BUFFER6_WEBGL, GL_DRAW_BUFFER7, GL_DRAW_BUFFER7_WEBGL, GL_DRAW_BUFFER8, GL_DRAW_BUFFER8_WEBGL, GL_DRAW_BUFFER9, GL_DRAW_BUFFER9_WEBGL, GL_DRAW_FRAMEBUFFER, GL_DRAW_FRAMEBUFFER_BINDING, GL_DST_ALPHA, GL_DST_COLOR, GL_DYNAMIC_COPY, GL_DYNAMIC_DRAW, GL_DYNAMIC_READ, GL_ELEMENT_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER_BINDING, GL_EQUAL, GL_FASTEST, GL_FLOAT, GL_FLOAT_32_UNSIGNED_INT_24_8_REV, GL_FLOAT_MAT2, GL_FLOAT_MAT2X3, GL_FLOAT_MAT2X4, GL_FLOAT_MAT3, GL_FLOAT_MAT3X2, GL_FLOAT_MAT3X4, GL_FLOAT_MAT4, GL_FLOAT_MAT4X2, GL_FLOAT_MAT4X3, GL_FLOAT_VEC2, GL_FLOAT_VEC3, GL_FLOAT_VEC4, GL_FRAGMENT_SHADER, GL_FRAGMENT_SHADER_DERIVATIVE_HINT, GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES, GL_FRAMEBUFFER, GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT, GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT, GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, GL_FRAMEBUFFER_BINDING, GL_FRAMEBUFFER_COMPLETE, GL_FRAMEBUFFER_DEFAULT, GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS, GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, GL_FRAMEBUFFER_UNSUPPORTED, GL_FRONT, GL_FRONT_AND_BACK, GL_FRONT_FACE, GL_FUNC_ADD, GL_FUNC_REVERSE_SUBTRACT, GL_FUNC_SUBSTRACT, GL_GENERATE_MIPMAP_HINT, GL_GEQUAL, GL_GPU_DISJOINT_EXT, GL_GREATER, GL_GREEN_BITS, GL_HALF_FLOAT, GL_HALF_FLOAT_OES, GL_HIGH_FLOAT, GL_HIGH_INT, GL_IMPLEMENTATION_COLOR_READ_FORMAT, GL_IMPLEMENTATION_COLOR_READ_TYPE, GL_INCR, GL_INCR_WRAP, GL_INT, GL_INTERLEAVED_ATTRIBS, GL_INT_2_10_10_10_REV, GL_INT_SAMPLER_2D, GL_INT_SAMPLER_2D_ARRAY, GL_INT_SAMPLER_3D, GL_INT_SAMPLER_CUBE, GL_INT_VEC2, GL_INT_VEC3, GL_INT_VEC4, GL_INVALID_ENUM, GL_INVALID_FRAMEBUFFER_OPERATION, GL_INVALID_INDEX, GL_INVALID_OPERATION, GL_INVALID_VALUE, GL_INVERT, GL_KEEP, GL_LEQUAL, GL_LESS, GL_LINEAR, GL_LINEAR_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_NEAREST, GL_LINES, GL_LINE_LOOP, GL_LINE_STRIP, GL_LINE_WIDTH, GL_LINK_STATUS, GL_LOW_FLOAT, GL_LOW_INT, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_MAX, GL_MAX_3D_TEXTURE_SIZE, GL_MAX_ARRAY_TEXTURE_LAYERS, GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL, GL_MAX_COLOR_ATTACHMENTS, GL_MAX_COLOR_ATTACHMENTS_WEBGL, GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS, GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, GL_MAX_COMBINED_UNIFORM_BLOCKS, GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, GL_MAX_CUBE_MAP_TEXTURE_SIZE, GL_MAX_DRAW_BUFFERS, GL_MAX_DRAW_BUFFERS_WEBGL, GL_MAX_ELEMENTS_INDICES, GL_MAX_ELEMENTS_VERTICES, GL_MAX_ELEMENT_INDEX, GL_MAX_EXT, GL_MAX_FRAGMENT_INPUT_COMPONENTS, GL_MAX_FRAGMENT_UNIFORM_BLOCKS, GL_MAX_FRAGMENT_UNIFORM_COMPONENTS, GL_MAX_FRAGMENT_UNIFORM_VECTORS, GL_MAX_PROGRAM_TEXEL_OFFSET, GL_MAX_RENDERBUFFER_SIZE, GL_MAX_SAMPLES, GL_MAX_SERVER_WAIT_TIMEOUT, GL_MAX_TEXTURE_IMAGE_UNITS, GL_MAX_TEXTURE_LOD_BIAS, GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT, GL_MAX_TEXTURE_SIZE, GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS, GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS, GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS, GL_MAX_UNIFORM_BLOCK_SIZE, GL_MAX_UNIFORM_BUFFER_BINDINGS, GL_MAX_VARYING_COMPONENTS, GL_MAX_VARYING_VECTORS, GL_MAX_VERTEX_ATTRIBS, GL_MAX_VERTEX_OUTPUT_COMPONENTS, GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, GL_MAX_VERTEX_UNIFORM_BLOCKS, GL_MAX_VERTEX_UNIFORM_COMPONENTS, GL_MAX_VERTEX_UNIFORM_VECTORS, GL_MAX_VIEWPORT_DIMS, GL_MEDIUM_FLOAT, GL_MEDIUM_INT, GL_MIN, GL_MIN_EXT, GL_MIN_PROGRAM_TEXEL_OFFSET, GL_MIRRORED_REPEAT, GL_NEAREST, GL_NEAREST_MIPMAP_LINEAR, GL_NEAREST_MIPMAP_NEAREST, GL_NEVER, GL_NICEST, GL_NONE, GL_NOTEQUAL, GL_NO_ERROR, GL_OBJECT_TYPE, GL_ONE, GL_ONE_MINUS_CONSTANT_ALPHA, GL_ONE_MINUS_CONSTANT_COLOR, GL_ONE_MINUS_DST_ALPHA, GL_ONE_MINUS_DST_COLOR, GL_ONE_MINUS_SRC_ALPHA, GL_ONE_MINUS_SRC_COLOR, GL_OUT_OF_MEMORY, GL_PACK_ALIGNMENT, GL_PACK_ROW_LENGTH, GL_PACK_SKIP_PIXELS, GL_PACK_SKIP_ROWS, GL_PIXEL_PACK_BUFFER, GL_PIXEL_PACK_BUFFER_BINDING, GL_PIXEL_UNPACK_BUFFER, GL_PIXEL_UNPACK_BUFFER_BINDING, GL_POINTS, GL_POLYGON_OFFSET_FACTOR, GL_POLYGON_OFFSET_FILL, GL_POLYGON_OFFSET_UNITS, GL_QUERY_COUNTER_BITS_EXT, GL_QUERY_RESULT, GL_QUERY_RESULT_AVAILABLE, GL_QUERY_RESULT_AVAILABLE_EXT, GL_QUERY_RESULT_EXT, GL_R11F_G11F_B10F, GL_R16F, GL_R16I, GL_R16UI, GL_R32F, GL_R32I, GL_R32UI, GL_R8, GL_R8I, GL_R8UI, GL_R8_SNORM, GL_RASTERIZER_DISCARD, GL_READ_BUFFER, GL_READ_FRAMEBUFFER, GL_READ_FRAMEBUFFER_BINDING, GL_RED, GL_RED_BITS, GL_RED_INTEGER, GL_RENDERBUFFER, GL_RENDERBUFFER_ALPHA_SIZE, GL_RENDERBUFFER_BINDING, GL_RENDERBUFFER_BLUE_SIZE, GL_RENDERBUFFER_DEPTH_SIZE, GL_RENDERBUFFER_GREEN_SIZE, GL_RENDERBUFFER_HEIGHT, GL_RENDERBUFFER_INTERNAL_FORMAT, GL_RENDERBUFFER_RED_SIZE, GL_RENDERBUFFER_SAMPLES, GL_RENDERBUFFER_STENCIL_SIZE, GL_RENDERBUFFER_WIDTH, GL_RENDERER, GL_REPEAT, GL_REPLACE, GL_RG, GL_RG16F, GL_RG16I, GL_RG16UI, GL_RG32F, GL_RG32I, GL_RG32UI, GL_RG8, GL_RG8I, GL_RG8UI, GL_RG8_SNORM, GL_RGB, GL_RGB10_A2, GL_RGB10_A2UI, GL_RGB16F, GL_RGB16I, GL_RGB16UI, GL_RGB32F, GL_RGB32F_EXT, GL_RGB32I, GL_RGB32UI, GL_RGB565, GL_RGB5_A1, GL_RGB8, GL_RGB8I, GL_RGB8UI, GL_RGB8_SNORM, GL_RGB9_E5, GL_RGBA, GL_RGBA16F, GL_RGBA16I, GL_RGBA16UI, GL_RGBA32F, GL_RGBA32F_EXT, GL_RGBA32I, GL_RGBA32UI, GL_RGBA4, GL_RGBA8, GL_RGBA8I, GL_RGBA8UI, GL_RGBA8_SNORM, GL_RGBA_INTEGER, GL_RGB_INTEGER, GL_RG_INTEGER, GL_SAMPLER_2D, GL_SAMPLER_2D_ARRAY, GL_SAMPLER_2D_ARRAY_SHADOW, GL_SAMPLER_2D_SHADOW, GL_SAMPLER_3D, GL_SAMPLER_BINDING, GL_SAMPLER_CUBE, GL_SAMPLER_CUBE_SHADOW, GL_SAMPLES, GL_SAMPLE_ALPHA_TO_COVERAGE, GL_SAMPLE_BUFFERS, GL_SAMPLE_COVERAGE, GL_SAMPLE_COVERAGE_INVERT, GL_SAMPLE_COVERAGE_VALUE, GL_SCISSOR_BOX, GL_SCISSOR_TEST, GL_SEPARATE_ATTRIBS, GL_SHADER_TYPE, GL_SHADING_LANGUAGE_VERSION, GL_SHORT, GL_SIGNALED, GL_SIGNED_NORMALIZED, GL_SRC_ALPHA, GL_SRC_ALPHA_SATURATE, GL_SRC_COLOR, GL_SRGB, GL_SRGB8, GL_SRGB8_ALPHA8, GL_SRGB8_ALPHA8_EXT, GL_SRGB_ALPHA_EXT, GL_SRGB_EXT, GL_STATIC_COPY, GL_STATIC_DRAW, GL_STATIC_READ, GL_STENCIL, GL_STENCIL_ATTACHMENT, GL_STENCIL_BACK_FAIL, GL_STENCIL_BACK_FUNC, GL_STENCIL_BACK_PASS_DEPTH_FAIL, GL_STENCIL_BACK_PASS_DEPTH_PASS, GL_STENCIL_BACK_REF, GL_STENCIL_BACK_VALUE_MASK, GL_STENCIL_BACK_WRITEMASK, GL_STENCIL_BITS, GL_STENCIL_BUFFER_BIT, GL_STENCIL_CLEAR_VALUE, GL_STENCIL_FAIL, GL_STENCIL_FUNC, GL_STENCIL_INDEX, GL_STENCIL_INDEX8, GL_STENCIL_PASS_DEPTH_FAIL, GL_STENCIL_PASS_DEPTH_PASS, GL_STENCIL_REF, GL_STENCIL_TEST, GL_STENCIL_VALUE_MASK, GL_STENCIL_WRITEMASK, GL_STREAM_COPY, GL_STREAM_DRAW, GL_STREAM_READ, GL_SUBPIXEL_BITS, GL_SYNC_CONDITION, GL_SYNC_FENCE, GL_SYNC_FLAGS, GL_SYNC_FLUSH_COMMANDS_BIT, GL_SYNC_GPU_COMMANDS_COMPLETE, GL_SYNC_STATUS, GL_TEXTURE, GL_TEXTURE0, GL_TEXTURE1, GL_TEXTURE10, GL_TEXTURE11, GL_TEXTURE12, GL_TEXTURE13, GL_TEXTURE14, GL_TEXTURE15, GL_TEXTURE16, GL_TEXTURE17, GL_TEXTURE18, GL_TEXTURE19, GL_TEXTURE2, GL_TEXTURE20, GL_TEXTURE21, GL_TEXTURE22, GL_TEXTURE23, GL_TEXTURE24, GL_TEXTURE25, GL_TEXTURE26, GL_TEXTURE27, GL_TEXTURE28, GL_TEXTURE29, GL_TEXTURE3, GL_TEXTURE30, GL_TEXTURE31, GL_TEXTURE4, GL_TEXTURE5, GL_TEXTURE6, GL_TEXTURE7, GL_TEXTURE8, GL_TEXTURE9, GL_TEXTURE_2D, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_3D, GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_BINDING_2D, GL_TEXTURE_BINDING_2D_ARRAY, GL_TEXTURE_BINDING_3D, GL_TEXTURE_BINDING_CUBE_MAP, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_CUBE_MAP, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_IMMUTABLE_FORMAT, GL_TEXTURE_IMMUTABLE_LEVELS, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MAX_ANISOTROPY_EXT, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_WRAP_R, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, GL_TIMEOUT_EXPIRED, GL_TIMEOUT_IGNORED, GL_TIMESTAMP_EXT, GL_TIME_ELAPSED_EXT, GL_TRANSFORM_FEEDBACK, GL_TRANSFORM_FEEDBACK_ACTIVE, GL_TRANSFORM_FEEDBACK_BINDING, GL_TRANSFORM_FEEDBACK_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, GL_TRANSFORM_FEEDBACK_BUFFER_START, GL_TRANSFORM_FEEDBACK_PAUSED, GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRIANGLES, GL_TRIANGLE_FAN, GL_TRIANGLE_STRIP, GL_UNIFORM_ARRAY_STRIDE, GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, GL_UNIFORM_BLOCK_BINDING, GL_UNIFORM_BLOCK_DATA_SIZE, GL_UNIFORM_BLOCK_INDEX, GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER, GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER, GL_UNIFORM_BUFFER, GL_UNIFORM_BUFFER_BINDING, GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, GL_UNIFORM_BUFFER_SIZE, GL_UNIFORM_BUFFER_START, GL_UNIFORM_IS_ROW_MAJOR, GL_UNIFORM_MATRIX_STRIDE, GL_UNIFORM_OFFSET, GL_UNIFORM_SIZE, GL_UNIFORM_TYPE, GL_UNMASKED_RENDERER_WEBGL, GL_UNMASKED_VENDOR_WEBGL, GL_UNPACK_ALIGNMENT, GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, GL_UNPACK_FLIP_Y_WEBGL, GL_UNPACK_IMAGE_HEIGHT, GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, GL_UNPACK_ROW_LENGTH, GL_UNPACK_SKIP_IMAGES, GL_UNPACK_SKIP_PIXELS, GL_UNPACK_SKIP_ROWS, GL_UNSIGNALED, GL_UNSIGNED_BYTE, GL_UNSIGNED_INT, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_24_8_WEBGL, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_5_9_9_9_REV, GL_UNSIGNED_INT_SAMPLER_2D, GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, GL_UNSIGNED_INT_SAMPLER_3D, GL_UNSIGNED_INT_SAMPLER_CUBE, GL_UNSIGNED_INT_VEC2, GL_UNSIGNED_INT_VEC3, GL_UNSIGNED_INT_VEC4, GL_UNSIGNED_NORMALIZED, GL_UNSIGNED_NORMALIZED_EXT, GL_UNSIGNED_SHORT, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_5_6_5, GL_VALIDATE_STATUS, GL_VENDOR, GL_VERSION, GL_VERTEX_ARRAY_BINDING, GL_VERTEX_ARRAY_BINDING_OES, GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_POINTER, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_SHADER, GL_VIEWPORT, GL_WAIT_FAILED, GL_ZERO };\n", "export const isSSR = typeof window === 'undefined';\n", "import { isSSR } from './ssr';\n\nexport const deviceInfo = (() => {\n  if (isSSR) {\n    return;\n  }\n\n  const { userAgent, platform, maxTouchPoints } = window.navigator;\n\n  const isIOS = /(iphone|ipod|ipad)/i.test(userAgent);\n\n  // Workaround for ipadOS, force detection as tablet\n  // SEE: https://github.com/lancedikson/bowser/issues/329\n  // SEE: https://stackoverflow.com/questions/58019463/how-to-detect-device-name-in-safari-on-ios-13-while-it-doesnt-show-the-correct\n  const isIpad =\n    platform === 'iPad' ||\n    // @ts-expect-error window.MSStream is non standard\n    (platform === 'MacIntel' && maxTouchPoints > 0 && !window.MSStream);\n\n  const isAndroid = /android/i.test(userAgent);\n\n  return {\n    isIpad,\n    isMobile: isAndroid || isIOS || isIpad,\n    isSafari12: /Version\\/12.+Safari/.test(userAgent),\n  };\n})();\n", "// Vendor\nimport {\n  GL_ARRAY_BUFFER,\n  GL_COLOR_BUFFER_BIT,\n  GL_FLOAT,\n  GL_FRAGMENT_SHADER,\n  GL_RGBA,\n  GL_STATIC_DRAW,\n  GL_TRIANGLES,\n  GL_UNSIGNED_BYTE,\n  GL_VERTEX_SHADER,\n} from 'webgl-constants';\n\n// Internal\nimport { deviceInfo } from './deviceInfo';\n\nconst debug = false ? console.warn : undefined;\n\nexport function deobfuscateAppleGPU(\n  gl: WebGLRenderingContext,\n  renderer: string,\n  isMobileTier: boolean\n) {\n  if (!isMobileTier) {\n    debug?.('Safari 14+ obfuscates its GPU type and version, using fallback');\n    return [renderer];\n  }\n  const pixelId = calculateMagicPixelId(gl);\n  const codeA = '801621810' as const;\n  const codeB = '8016218135' as const;\n  const codeC = '80162181161' as const;\n\n  // All chipsets that support at least iOS 12:\n  const possibleChipsets: [\n    string,\n    typeof codeA | typeof codeB | typeof codeC,\n    number\n  ][] = deviceInfo?.isIpad\n    ? [\n        // ['a4', 5], // ipad 1st gen\n        // ['a5', 9], // ipad 2 / ipad mini 1st gen\n        // ['a5x', 9], // ipad 3rd gen\n        // ['a6x', 10], // ipad 4th gen\n        ['a7', codeC, 12], // ipad air / ipad mini 2 / ipad mini 3\n        ['a8', codeB, 15], // pad mini 4\n        ['a8x', codeB, 15], // ipad air 2\n        ['a9', codeB, 15], // ipad 5th gen\n        ['a9x', codeB, 15], // pro 9.7 2016 / pro 12.9 2015\n        ['a10', codeB, 15], // ipad 7th gen / ipad 6th gen\n        ['a10x', codeB, 15], // pro 10.5 2017 / pro 12.9 2nd gen, 2017\n        ['a12', codeA, 15], // ipad 8th gen / ipad air 3rd gen / ipad mini 5th gen\n        ['a12x', codeA, 15], // pro 11 1st gen / pro 12.9 3rd gen\n        ['a12z', codeA, 15], // pro 12.9 4th gen / pro 11 2nd gen\n        ['a14', codeA, 15], // ipad air 4th gen\n        ['m1', codeA, 15], // ipad pro 11 2nd gen / 12.9 5th gen\n      ]\n    : [\n        // ['a4', 7], // 4 / ipod touch 4th gen\n        // ['a5', 9], // 4S / ipod touch 5th gen\n        // ['a6', 10], // 5 / 5C\n        ['a7', codeC, 12], // 5S\n        ['a8', codeB, 12], // 6 / 6 plus / ipod touch 6th gen\n        ['a9', codeB, 15], // 6s / 6s plus/ se 1st gen\n        ['a10', codeB, 15], // 7 / 7 plus / iPod Touch 7th gen\n        ['a11', codeA, 15], // 8 / 8 plus / X\n        ['a12', codeA, 15], // XS / XS Max / XR\n        ['a13', codeA, 15], // 11 / 11 pro / 11 pro max / se 2nd gen\n        ['a14', codeA, 15], // 12 / 12 mini / 12 pro / 12 pro max\n      ];\n  let chipsets: typeof possibleChipsets;\n\n  // In iOS 14.x Apple started normalizing the outcome of this hack,\n  // we use this fact to limit the list to devices that support ios 14+\n  if (pixelId === '80162181255') {\n    chipsets = possibleChipsets.filter(([, , iosVersion]) => iosVersion >= 14);\n  } else {\n    chipsets = possibleChipsets.filter(([, id]) => id === pixelId);\n    // If nothing was found to match the pixel id, include all chipsets:\n    if (!chipsets.length) {\n      chipsets = possibleChipsets;\n    }\n  }\n  const renderers = chipsets.map(([gpu]) => `apple ${gpu} gpu`);\n  debug?.(\n    `iOS 12.2+ obfuscates its GPU type and version, using closest matches: ${JSON.stringify(renderers)}`\n  );\n  return renderers;\n}\n\n// Apple GPU (iOS 12.2+, Safari 14+)\n// SEE: https://github.com/pmndrs/detect-gpu/issues/7\n// CREDIT: https://medium.com/@Samsy/detecting-apple-a10-iphone-7-to-a11-iphone-8-and-b019b8f0eb87\n// CREDIT: https://github.com/Samsy/appleGPUDetection/blob/master/index.js\nfunction calculateMagicPixelId(gl: WebGLRenderingContext) {\n  const vertexShaderSource = /* glsl */ `\n    precision highp float;\n    attribute vec3 aPosition;\n    varying float vvv;\n    void main() {\n      vvv = 0.31622776601683794;\n      gl_Position = vec4(aPosition, 1.0);\n    }\n  `;\n\n  const fragmentShaderSource = /* glsl */ `\n    precision highp float;\n    varying float vvv;\n    void main() {\n      vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * vvv;\n      enc = fract(enc);\n      enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n      gl_FragColor = enc;\n    }\n  `;\n\n  const vertexShader = gl.createShader(GL_VERTEX_SHADER);\n  const fragmentShader = gl.createShader(GL_FRAGMENT_SHADER);\n  const program = gl.createProgram();\n  if (!(fragmentShader && vertexShader && program)) return;\n  gl.shaderSource(vertexShader, vertexShaderSource);\n  gl.shaderSource(fragmentShader, fragmentShaderSource);\n  gl.compileShader(vertexShader);\n  gl.compileShader(fragmentShader);\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n\n  gl.detachShader(program, vertexShader);\n  gl.detachShader(program, fragmentShader);\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  gl.useProgram(program);\n\n  const vertexArray = gl.createBuffer();\n  gl.bindBuffer(GL_ARRAY_BUFFER, vertexArray);\n  gl.bufferData(\n    GL_ARRAY_BUFFER,\n    new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]),\n    GL_STATIC_DRAW\n  );\n\n  const aPosition = gl.getAttribLocation(program, 'aPosition');\n  gl.vertexAttribPointer(aPosition, 3, GL_FLOAT, false, 0, 0);\n  gl.enableVertexAttribArray(aPosition);\n\n  gl.clearColor(1, 1, 1, 1);\n  gl.clear(GL_COLOR_BUFFER_BIT);\n  gl.viewport(0, 0, 1, 1);\n  gl.drawArrays(GL_TRIANGLES, 0, 3);\n\n  const pixels = new Uint8Array(4);\n  gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_UNSIGNED_BYTE, pixels);\n\n  gl.deleteProgram(program);\n  gl.deleteBuffer(vertexArray);\n  return pixels.join('');\n}\n", "// Caches\nconst array: number[] = [];\nconst charCodeCache: number[] = [];\n\n// Compute the difference (distance) between two strings\n// SEE: https://en.wikipedia.org/wiki/Levenshtein_distance\n// CREDIT: https://github.com/sindresorhus/leven (version 3.1.0)\nexport function getLevenshteinDistance(left: string, right: string): number {\n  if (left === right) {\n    return 0;\n  }\n\n  const swap = left;\n\n  // Swapping the strings if `a` is longer than `b` so we know which one is the\n  // shortest & which one is the longest\n  if (left.length > right.length) {\n    left = right;\n    right = swap;\n  }\n\n  let leftLength = left.length;\n  let rightLength = right.length;\n\n  // Performing suffix trimming:\n  // We can linearly drop suffix common to both strings since they\n  // don't increase distance at all\n  // Note: `~-` is the bitwise way to perform a `- 1` operation\n  while (leftLength > 0 &&\n    left.charCodeAt(~-leftLength) === right.charCodeAt(~-rightLength)) {\n    leftLength--;\n    rightLength--;\n  }\n\n  // Performing prefix trimming\n  // We can linearly drop prefix common to both strings since they\n  // don't increase distance at all\n  let start = 0;\n\n  while (start < leftLength &&\n    left.charCodeAt(start) === right.charCodeAt(start)) {\n    start++;\n  }\n\n  leftLength -= start;\n  rightLength -= start;\n\n  if (leftLength === 0) {\n    return rightLength;\n  }\n\n  let bCharCode;\n  let result = 0;\n  let temp;\n  let temp2;\n  let i = 0;\n  let j = 0;\n\n  while (i < leftLength) {\n    charCodeCache[i] = left.charCodeAt(start + i);\n    array[i] = ++i;\n  }\n\n  while (j < rightLength) {\n    bCharCode = right.charCodeAt(start + j);\n    temp = j++;\n    result = j;\n\n    for (i = 0; i < leftLength; i++) {\n      temp2 = bCharCode === charCodeCache[i] ? temp : temp + 1;\n      temp = array[i];\n      // eslint-disable-next-line no-multi-assign\n      result = array[i] =\n        temp > result\n          ? temp2 > result\n            ? result + 1\n            : temp2\n          : temp2 > temp\n            ? temp + 1\n            : temp2;\n    }\n  }\n\n  return result;\n}\n", "export function isDefined<T>(val: T | undefined | null | void): val is T {\n  return val !== undefined && val !== null;\n}\n", "export class OutdatedBenchmarksError extends Error {\n  constructor(message?: string) {\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n", "// Data\nimport { version } from '../package.json';\n\n// Internal\nimport { BLOCKLISTED_GPUS } from './internal/blocklistedGPUS';\nimport { cleanRenderer } from './internal/cleanRenderer';\nimport { deobfuscateRenderer } from './internal/deobfuscateRenderer';\nimport { deviceInfo } from './internal/deviceInfo';\nimport { getLevenshteinDistance } from './internal/getLevenshteinDistance';\nimport { getGPUVersion } from './internal/getGPUVersion';\nimport { getWebGLContext } from './internal/getWebGLContext';\nimport { isSSR } from './internal/ssr';\nimport { isDefined } from './internal/util';\nimport { OutdatedBenchmarksError } from './internal/error';\n\n// Types\nexport interface GetGPUTier {\n  /**\n   * URL of directory where benchmark data is hosted.\n   *\n   * @default https://unpkg.com/detect-gpu@{version}/dist/benchmarks\n   */\n  benchmarksURL?: string;\n  /**\n   * Optionally pass in a WebGL context to avoid creating a temporary one\n   * internally.\n   */\n  glContext?: WebGLRenderingContext | WebGL2RenderingContext;\n  /**\n   * Whether to fail if the system performance is low or if no hardware GPU is\n   * available.\n   *\n   * @default false\n   */\n  failIfMajorPerformanceCaveat?: boolean;\n  /**\n   * Framerate per tier for mobile devices.\n   *\n   * @defaultValue [0, 15, 30, 60]\n   */\n  mobileTiers?: number[];\n  /**\n   * Framerate per tier for desktop devices.\n   *\n   * @defaultValue [0, 15, 30, 60]\n   */\n  desktopTiers?: number[];\n  /**\n   * Optionally override specific parameters. Used mainly for testing.\n   */\n  override?: {\n    renderer?: string;\n    /**\n     * Override whether device is an iPad.\n     */\n    isIpad?: boolean;\n    /**\n     * Override whether device is a mobile device.\n     */\n    isMobile?: boolean;\n    /**\n     * Override device screen size.\n     */\n    screenSize?: { width: number; height: number };\n    /**\n     * Override how benchmark data is loaded\n     */\n    loadBenchmarks?: (file: string) => Promise<ModelEntry[]>;\n  };\n}\n\nexport type TierType =\n  | 'SSR'\n  | 'WEBGL_UNSUPPORTED'\n  | 'BLOCKLISTED'\n  | 'FALLBACK'\n  | 'BENCHMARK';\n\nexport type TierResult = {\n  tier: number;\n  type: TierType;\n  isMobile?: boolean;\n  fps?: number;\n  gpu?: string;\n  device?: string;\n};\n\nexport type ModelEntryScreen = [number, number, number, string | undefined];\n\nexport type ModelEntry = [string, string, 0 | 1, ModelEntryScreen[]];\n\nconst debug = false ? console.log : undefined;\n\nexport const getGPUTier = async ({\n  mobileTiers = [0, 15, 30, 60],\n  desktopTiers = [0, 15, 30, 60],\n  override = {},\n  glContext,\n  failIfMajorPerformanceCaveat = false,\n  benchmarksURL = `https://unpkg.com/detect-gpu@${version}/dist/benchmarks`,\n}: GetGPUTier = {}): Promise<TierResult> => {\n  const queryCache: { [k: string]: Promise<ModelEntry[]> } = {};\n  if (isSSR) {\n    return {\n      tier: 0,\n      type: 'SSR',\n    };\n  }\n\n  const {\n    isIpad = !!deviceInfo?.isIpad,\n    isMobile = !!deviceInfo?.isMobile,\n    screenSize = window.screen,\n    loadBenchmarks = async (file: string) => {\n      const data: ModelEntry[] = await fetch(`${benchmarksURL}/${file}`).then(\n        (response) => response.json()\n      );\n\n      // Remove version tag and check version is supported\n      const version = parseInt(\n        (data.shift() as unknown as string).split('.')[0],\n        10\n      );\n      if (version < 4) {\n        throw new OutdatedBenchmarksError(\n          'Detect GPU benchmark data is out of date. Please update to version 4x'\n        );\n      }\n      return data;\n    },\n  } = override;\n  let { renderer } = override;\n  const getGpuType = (renderer: string) => {\n    const types = isMobile\n      ? (['adreno', 'apple', 'mali-t', 'mali', 'nvidia', 'powervr'] as const)\n      : (['intel', 'apple', 'amd', 'radeon', 'nvidia', 'geforce'] as const);\n    for (const type of types) {\n      if (renderer.includes(type)) {\n        return type;\n      }\n    }\n  };\n\n  const queryBenchmarks = async (renderer: string) => {\n    const type = getGpuType(renderer);\n    if (!type) {\n      return;\n    }\n\n    debug?.('queryBenchmarks - found type:', { type });\n\n    const benchmarkFile = `${isMobile ? 'm' : 'd'}-${type}${\n      isIpad ? '-ipad' : ''\n    }.json`;\n\n    const benchmark = (queryCache[benchmarkFile] =\n      queryCache[benchmarkFile] ?? loadBenchmarks(benchmarkFile));\n    let benchmarks: ModelEntry[];\n    try {\n      benchmarks = await benchmark;\n    } catch (error) {\n      if (error instanceof OutdatedBenchmarksError) {\n        throw error;\n      }\n      debug?.(\"queryBenchmarks - couldn't load benchmark:\", { error });\n      return;\n    }\n\n    const version = getGPUVersion(renderer);\n\n    let matched = benchmarks.filter(\n      ([, modelVersion]) => modelVersion === version\n    );\n\n    debug?.(\n      `found ${matched.length} matching entries using version '${version}':`,\n\n      matched.map(([model]) => model)\n    );\n\n    // If nothing matched, try comparing model names:\n    if (!matched.length) {\n      matched = benchmarks.filter(([model]) => model.includes(renderer));\n\n      debug?.(\n        `found ${matched.length} matching entries comparing model names`,\n        {\n          matched,\n        }\n      );\n    }\n\n    const matchCount = matched.length;\n\n    if (matchCount === 0) {\n      return;\n    }\n\n    // eslint-disable-next-line prefer-const\n    let [gpu, , , fpsesByPixelCount] =\n      matchCount > 1\n        ? matched\n            .map(\n              (match) =>\n                [match, getLevenshteinDistance(renderer, match[0])] as const\n            )\n            .sort(([, a], [, b]) => a - b)[0][0]\n        : matched[0];\n\n    debug?.(\n      `${renderer} matched closest to ${gpu} with the following screen sizes`,\n      JSON.stringify(fpsesByPixelCount)\n    );\n\n    let minDistance = Number.MAX_VALUE;\n    let closest: ModelEntryScreen | undefined;\n    const { devicePixelRatio } = window;\n    const pixelCount =\n      screenSize.width *\n      devicePixelRatio *\n      screenSize.height *\n      devicePixelRatio;\n\n    for (const match of fpsesByPixelCount) {\n      const [width, height] = match;\n      const entryPixelCount = width * height;\n      const distance = Math.abs(pixelCount - entryPixelCount);\n\n      if (distance < minDistance) {\n        minDistance = distance;\n        closest = match;\n      }\n    }\n\n    if (!closest) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const [, , fps, device] = closest!;\n\n    return [minDistance, fps, gpu, device] as const;\n  };\n\n  const toResult = (\n    tier: number,\n    type: TierType,\n    gpu?: string,\n    fps?: number,\n    device?: string\n  ) => ({\n    device,\n    fps,\n    gpu,\n    isMobile,\n    tier,\n    type,\n  });\n\n  let renderers: string[];\n  let rawRenderer = '';\n\n  if (!renderer) {\n    const gl =\n      glContext ||\n      getWebGLContext(deviceInfo?.isSafari12, failIfMajorPerformanceCaveat);\n\n    if (!gl) {\n      return toResult(0, 'WEBGL_UNSUPPORTED');\n    }\n\n    const debugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n\n    if (debugRendererInfo) {\n      renderer = gl.getParameter(debugRendererInfo.UNMASKED_RENDERER_WEBGL);\n    }\n\n    if (!renderer) {\n      return toResult(1, 'FALLBACK');\n    }\n\n    rawRenderer = renderer;\n    renderer = cleanRenderer(renderer);\n    renderers = deobfuscateRenderer(gl, renderer, isMobile);\n  } else {\n    renderer = cleanRenderer(renderer);\n    renderers = [renderer];\n  }\n\n  const results = (await Promise.all(renderers.map(queryBenchmarks)))\n    .filter(isDefined)\n    .sort(([aDis = Number.MAX_VALUE, aFps], [bDis = Number.MAX_VALUE, bFps]) =>\n      aDis === bDis ? aFps - bFps : aDis - bDis\n    );\n  if (!results.length) {\n    const blocklistedModel: string | undefined = BLOCKLISTED_GPUS.find(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      (blocklistedModel) => renderer!.includes(blocklistedModel)\n    );\n    return blocklistedModel\n      ? toResult(0, 'BLOCKLISTED', blocklistedModel)\n      : toResult(1, 'FALLBACK', `${renderer} (${rawRenderer})`);\n  }\n\n  const [, fps, model, device] = results[0];\n\n  if (fps === -1) {\n    return toResult(0, 'BLOCKLISTED', model, fps, device);\n  }\n\n  const tiers = isMobile ? mobileTiers : desktopTiers;\n  let tier = 0;\n\n  for (let i = 0; i < tiers.length; i++) {\n    if (fps >= tiers[i]) {\n      tier = i;\n    }\n  }\n\n  return toResult(tier, 'BENCHMARK', model, fps, device);\n};\n", "export function getWebGLContext(isSafari12?: boolean,\n  failIfMajorPerformanceCaveat = false) {\n  const attributes: {\n    alpha: boolean;\n    antialias: boolean;\n    depth: boolean;\n    failIfMajorPerformanceCaveat: boolean;\n    powerPreference?: string;\n    stencil: boolean;\n  } = {\n    alpha: false,\n    antialias: false,\n    depth: false,\n    failIfMajorPerformanceCaveat,\n    powerPreference: 'high-performance',\n    stencil: false,\n  };\n\n  // Workaround for Safari 12, which otherwise crashes with powerPreference set\n  // to high-performance: https://github.com/pmndrs/detect-gpu/issues/5\n  if (isSafari12) {\n    delete attributes.powerPreference;\n  }\n\n  const canvas = window.document.createElement('canvas');\n\n  const gl = (canvas.getContext('webgl', attributes) ||\n    canvas.getContext(\n      'experimental-webgl',\n      attributes\n    )) as WebGLRenderingContext | null;\n\n  return gl ?? undefined;\n}\n", "// Internal\nimport { deobfuscateAppleGPU } from './deobfuscateAppleGPU';\n\nexport function deobfuscateRenderer(\n  gl: WebGLRenderingContext | WebGL2RenderingContext,\n  renderer: string,\n  isMobileTier: boolean\n) {\n  return renderer === 'apple gpu'\n    ? deobfuscateAppleGPU(gl, renderer, isMobileTier)\n    : [renderer];\n}\n", "export function getGPUVersion(model: string) {\n  model = model.replace(/\\([^)]+\\)/, '');\n\n  const matches =\n    // First set of digits\n    model.match(/\\d+/) ||\n    // If the renderer did not contain any numbers, match letters\n    model.match(/(\\W|^)([A-Za-z]{1,3})(\\W|$)/g);\n\n  // Remove any non-word characters and also remove 'amd' which could be matched\n  // in the clause above\n  return matches?.join('').replace(/\\W|amd/g, '') ?? '';\n}\n", "import { getGPUTier } from 'detect-gpu';\r\nimport { suspend } from 'suspend-react';\r\n\r\nconst useDetectGPU = props => suspend(() => getGPUTier(props), ['useDetectGPU']);\r\n\r\nexport { useDetectGPU };\r\n", "import * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\n\r\nfunction useHelper(object3D, helperConstructor, ...args) {\r\n  const helper = React.useRef();\r\n  const scene = useThree(state => state.scene);\r\n  React.useEffect(() => {\r\n    if (object3D) {\r\n      if (helperConstructor && object3D != null && object3D.current) {\r\n        helper.current = new helperConstructor(object3D.current, ...args);\r\n\r\n        if (helper.current) {\r\n          scene.add(helper.current);\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Dispose of the helper if no object 3D is passed\r\n     */\r\n\r\n\r\n    if (!object3D && helper.current) {\r\n      scene.remove(helper.current);\r\n    }\r\n\r\n    return () => {\r\n      if (helper.current) {\r\n        scene.remove(helper.current);\r\n      }\r\n    };\r\n  }, [scene, helperConstructor, object3D, args]);\r\n  useFrame(() => {\r\n    var _helper$current;\r\n\r\n    if ((_helper$current = helper.current) != null && _helper$current.update) {\r\n      helper.current.update();\r\n    }\r\n  });\r\n  return helper;\r\n}\r\n\r\nexport { useHelper };\r\n", "import * as React from 'react';\r\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\r\n\r\nfunction useBVH(mesh, options) {\r\n  React.useEffect(() => {\r\n    if (mesh.current) {\r\n      mesh.current.raycast = acceleratedRaycast;\r\n      const geometry = mesh.current.geometry;\r\n      geometry.computeBoundsTree = computeBoundsTree;\r\n      geometry.disposeBoundsTree = disposeBoundsTree;\r\n      geometry.computeBoundsTree(options);\r\n      return () => {\r\n        if (geometry.boundsTree) {\r\n          geometry.disposeBoundsTree();\r\n        }\r\n      };\r\n    }\r\n  }, [mesh, options]);\r\n}\r\n\r\nexport { useBVH };\r\n", "import { Vector3, BufferAttribute, Box3, FrontSide, Matrix4 } from 'three';\r\nimport { CENTER, BYTES_PER_NODE, IS_LEAFNODE_FLAG } from './Constants.js';\r\nimport { buildPackedTree } from './buildFunctions.js';\r\nimport {\r\n\traycast,\r\n\traycastFirst,\r\n\tshapecast,\r\n\tintersectsGeometry,\r\n\tsetBuffer,\r\n\tclearBuffer,\r\n} from './castFunctions.js';\r\nimport { OrientedBox } from '../math/OrientedBox.js';\r\nimport { ExtendedTriangle } from '../math/ExtendedTriangle.js';\r\nimport { PrimitivePool } from '../utils/PrimitivePool.js';\r\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\r\nimport { iterateOverTriangles, setTriangle } from '../utils/TriangleUtilities.js';\r\nimport { convertRaycastIntersect } from '../utils/GeometryRayIntersectUtilities.js';\r\n\r\nconst SKIP_GENERATION = Symbol( 'skip tree generation' );\r\n\r\nconst aabb = /* @__PURE__ */ new Box3();\r\nconst aabb2 = /* @__PURE__ */ new Box3();\r\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\r\nconst obb = /* @__PURE__ */ new OrientedBox();\r\nconst obb2 = /* @__PURE__ */ new OrientedBox();\r\nconst temp = /* @__PURE__ */ new Vector3();\r\nconst temp1 = /* @__PURE__ */ new Vector3();\r\nconst temp2 = /* @__PURE__ */ new Vector3();\r\nconst temp3 = /* @__PURE__ */ new Vector3();\r\nconst temp4 = /* @__PURE__ */ new Vector3();\r\nconst tempBox = /* @__PURE__ */ new Box3();\r\nconst trianglePool = /* @__PURE__ */ new PrimitivePool( () => new ExtendedTriangle() );\r\n\r\nexport class MeshBVH {\r\n\r\n\tstatic serialize( bvh, options = {} ) {\r\n\r\n\t\tif ( options.isBufferGeometry ) {\r\n\r\n\t\t\tconsole.warn( 'MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature.' );\r\n\r\n\t\t\treturn MeshBVH.serialize(\r\n\t\t\t\targuments[ 0 ],\r\n\t\t\t\t{\r\n\t\t\t\t\tcloneBuffers: arguments[ 2 ] === undefined ? true : arguments[ 2 ],\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\toptions = {\r\n\t\t\tcloneBuffers: true,\r\n\t\t\t...options,\r\n\t\t};\r\n\r\n\t\tconst geometry = bvh.geometry;\r\n\t\tconst rootData = bvh._roots;\r\n\t\tconst indexAttribute = geometry.getIndex();\r\n\t\tlet result;\r\n\t\tif ( options.cloneBuffers ) {\r\n\r\n\t\t\tresult = {\r\n\t\t\t\troots: rootData.map( root => root.slice() ),\r\n\t\t\t\tindex: indexAttribute.array.slice(),\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult = {\r\n\t\t\t\troots: rootData,\r\n\t\t\t\tindex: indexAttribute.array,\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tstatic deserialize( data, geometry, options = {} ) {\r\n\r\n\t\tif ( typeof options === 'boolean' ) {\r\n\r\n\t\t\tconsole.warn( 'MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature.' );\r\n\r\n\t\t\treturn MeshBVH.deserialize(\r\n\t\t\t\targuments[ 0 ],\r\n\t\t\t\targuments[ 1 ],\r\n\t\t\t\t{\r\n\t\t\t\t\tsetIndex: arguments[ 2 ] === undefined ? true : arguments[ 2 ],\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\toptions = {\r\n\t\t\tsetIndex: true,\r\n\t\t\t...options,\r\n\t\t};\r\n\r\n\t\tconst { index, roots } = data;\r\n\t\tconst bvh = new MeshBVH( geometry, { ...options, [ SKIP_GENERATION ]: true } );\r\n\t\tbvh._roots = roots;\r\n\r\n\t\tif ( options.setIndex ) {\r\n\r\n\t\t\tconst indexAttribute = geometry.getIndex();\r\n\t\t\tif ( indexAttribute === null ) {\r\n\r\n\t\t\t\tconst newIndex = new BufferAttribute( data.index, 1, false );\r\n\t\t\t\tgeometry.setIndex( newIndex );\r\n\r\n\t\t\t} else if ( indexAttribute.array !== index ) {\r\n\r\n\t\t\t\tindexAttribute.array.set( index );\r\n\t\t\t\tindexAttribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn bvh;\r\n\r\n\t}\r\n\r\n\tconstructor( geometry, options = {} ) {\r\n\r\n\t\tif ( ! geometry.isBufferGeometry ) {\r\n\r\n\t\t\tthrow new Error( 'MeshBVH: Only BufferGeometries are supported.' );\r\n\r\n\t\t} else if ( geometry.index && geometry.index.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tthrow new Error( 'MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.' );\r\n\r\n\t\t}\r\n\r\n\t\t// default options\r\n\t\toptions = Object.assign( {\r\n\r\n\t\t\tstrategy: CENTER,\r\n\t\t\tmaxDepth: 40,\r\n\t\t\tmaxLeafTris: 10,\r\n\t\t\tverbose: true,\r\n\t\t\tuseSharedArrayBuffer: false,\r\n\t\t\tsetBoundingBox: true,\r\n\t\t\tonProgress: null,\r\n\r\n\t\t\t// undocumented options\r\n\r\n\t\t\t// Whether to skip generating the tree. Used for deserialization.\r\n\t\t\t[ SKIP_GENERATION ]: false,\r\n\r\n\t\t}, options );\r\n\r\n\t\tif ( options.useSharedArrayBuffer && typeof SharedArrayBuffer === 'undefined' ) {\r\n\r\n\t\t\tthrow new Error( 'MeshBVH: SharedArrayBuffer is not available.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis._roots = null;\r\n\t\tif ( ! options[ SKIP_GENERATION ] ) {\r\n\r\n\t\t\tthis._roots = buildPackedTree( geometry, options );\r\n\r\n\t\t\tif ( ! geometry.boundingBox && options.setBoundingBox ) {\r\n\r\n\t\t\t\tgeometry.boundingBox = this.getBoundingBox( new Box3() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// retain references to the geometry so we can use them it without having to\r\n\t\t// take a geometry reference in every function.\r\n\t\tthis.geometry = geometry;\r\n\r\n\t}\r\n\r\n\trefit( nodeIndices = null ) {\r\n\r\n\t\tif ( nodeIndices && Array.isArray( nodeIndices ) ) {\r\n\r\n\t\t\tnodeIndices = new Set( nodeIndices );\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst indexArr = geometry.index.array;\r\n\t\tconst posAttr = geometry.attributes.position;\r\n\t\tconst posArr = posAttr.array;\r\n\r\n\t\t// support for an interleaved position buffer\r\n\t\tconst bufferOffset = posAttr.offset || 0;\r\n\t\tlet stride = 3;\r\n\t\tif ( posAttr.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tstride = posAttr.data.stride;\r\n\r\n\t\t}\r\n\r\n\t\tlet buffer, uint32Array, uint16Array, float32Array;\r\n\t\tlet byteOffset = 0;\r\n\t\tconst roots = this._roots;\r\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\r\n\r\n\t\t\tbuffer = roots[ i ];\r\n\t\t\tuint32Array = new Uint32Array( buffer );\r\n\t\t\tuint16Array = new Uint16Array( buffer );\r\n\t\t\tfloat32Array = new Float32Array( buffer );\r\n\r\n\t\t\t_traverse( 0, byteOffset );\r\n\t\t\tbyteOffset += buffer.byteLength;\r\n\r\n\t\t}\r\n\r\n\t\tfunction _traverse( node32Index, byteOffset, force = false ) {\r\n\r\n\t\t\tconst node16Index = node32Index * 2;\r\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\r\n\t\t\tif ( isLeaf ) {\r\n\r\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\r\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\r\n\r\n\t\t\t\tlet minx = Infinity;\r\n\t\t\t\tlet miny = Infinity;\r\n\t\t\t\tlet minz = Infinity;\r\n\t\t\t\tlet maxx = - Infinity;\r\n\t\t\t\tlet maxy = - Infinity;\r\n\t\t\t\tlet maxz = - Infinity;\r\n\t\t\t\tfor ( let i = 3 * offset, l = 3 * ( offset + count ); i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst index = indexArr[ i ] * stride + bufferOffset;\r\n\t\t\t\t\tconst x = posArr[ index + 0 ];\r\n\t\t\t\t\tconst y = posArr[ index + 1 ];\r\n\t\t\t\t\tconst z = posArr[ index + 2 ];\r\n\r\n\t\t\t\t\tif ( x < minx ) minx = x;\r\n\t\t\t\t\tif ( x > maxx ) maxx = x;\r\n\r\n\t\t\t\t\tif ( y < miny ) miny = y;\r\n\t\t\t\t\tif ( y > maxy ) maxy = y;\r\n\r\n\t\t\t\t\tif ( z < minz ) minz = z;\r\n\t\t\t\t\tif ( z > maxz ) maxz = z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tfloat32Array[ node32Index + 0 ] !== minx ||\r\n\t\t\t\t\tfloat32Array[ node32Index + 1 ] !== miny ||\r\n\t\t\t\t\tfloat32Array[ node32Index + 2 ] !== minz ||\r\n\r\n\t\t\t\t\tfloat32Array[ node32Index + 3 ] !== maxx ||\r\n\t\t\t\t\tfloat32Array[ node32Index + 4 ] !== maxy ||\r\n\t\t\t\t\tfloat32Array[ node32Index + 5 ] !== maxz\r\n\t\t\t\t) {\r\n\r\n\t\t\t\t\tfloat32Array[ node32Index + 0 ] = minx;\r\n\t\t\t\t\tfloat32Array[ node32Index + 1 ] = miny;\r\n\t\t\t\t\tfloat32Array[ node32Index + 2 ] = minz;\r\n\r\n\t\t\t\t\tfloat32Array[ node32Index + 3 ] = maxx;\r\n\t\t\t\t\tfloat32Array[ node32Index + 4 ] = maxy;\r\n\t\t\t\t\tfloat32Array[ node32Index + 5 ] = maxz;\r\n\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst left = node32Index + 8;\r\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\r\n\r\n\t\t\t\t// the identifying node indices provided by the shapecast function include offsets of all\r\n\t\t\t\t// root buffers to guarantee they're unique between roots so offset left and right indices here.\r\n\t\t\t\tconst offsetLeft = left + byteOffset;\r\n\t\t\t\tconst offsetRight = right + byteOffset;\r\n\t\t\t\tlet forceChildren = force;\r\n\t\t\t\tlet includesLeft = false;\r\n\t\t\t\tlet includesRight = false;\r\n\r\n\t\t\t\tif ( nodeIndices ) {\r\n\r\n\t\t\t\t\t// if we see that neither the left or right child are included in the set that need to be updated\r\n\t\t\t\t\t// then we assume that all children need to be updated.\r\n\t\t\t\t\tif ( ! forceChildren ) {\r\n\r\n\t\t\t\t\t\tincludesLeft = nodeIndices.has( offsetLeft );\r\n\t\t\t\t\t\tincludesRight = nodeIndices.has( offsetRight );\r\n\t\t\t\t\t\tforceChildren = ! includesLeft && ! includesRight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tincludesLeft = true;\r\n\t\t\t\t\tincludesRight = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst traverseLeft = forceChildren || includesLeft;\r\n\t\t\t\tconst traverseRight = forceChildren || includesRight;\r\n\r\n\t\t\t\tlet leftChange = false;\r\n\t\t\t\tif ( traverseLeft ) {\r\n\r\n\t\t\t\t\tleftChange = _traverse( left, byteOffset, forceChildren );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet rightChange = false;\r\n\t\t\t\tif ( traverseRight ) {\r\n\r\n\t\t\t\t\trightChange = _traverse( right, byteOffset, forceChildren );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst didChange = leftChange || rightChange;\r\n\t\t\t\tif ( didChange ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst lefti = left + i;\r\n\t\t\t\t\t\tconst righti = right + i;\r\n\t\t\t\t\t\tconst minLeftValue = float32Array[ lefti ];\r\n\t\t\t\t\t\tconst maxLeftValue = float32Array[ lefti + 3 ];\r\n\t\t\t\t\t\tconst minRightValue = float32Array[ righti ];\r\n\t\t\t\t\t\tconst maxRightValue = float32Array[ righti + 3 ];\r\n\r\n\t\t\t\t\t\tfloat32Array[ node32Index + i ] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\r\n\t\t\t\t\t\tfloat32Array[ node32Index + i + 3 ] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn didChange;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttraverse( callback, rootIndex = 0 ) {\r\n\r\n\t\tconst buffer = this._roots[ rootIndex ];\r\n\t\tconst uint32Array = new Uint32Array( buffer );\r\n\t\tconst uint16Array = new Uint16Array( buffer );\r\n\t\t_traverse( 0 );\r\n\r\n\t\tfunction _traverse( node32Index, depth = 0 ) {\r\n\r\n\t\t\tconst node16Index = node32Index * 2;\r\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\r\n\t\t\tif ( isLeaf ) {\r\n\r\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\r\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\r\n\t\t\t\tcallback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), offset, count );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// TODO: use node functions here\r\n\t\t\t\tconst left = node32Index + BYTES_PER_NODE / 4;\r\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\r\n\t\t\t\tconst splitAxis = uint32Array[ node32Index + 7 ];\r\n\t\t\t\tconst stopTraversal = callback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), splitAxis );\r\n\r\n\t\t\t\tif ( ! stopTraversal ) {\r\n\r\n\t\t\t\t\t_traverse( left, depth + 1 );\r\n\t\t\t\t\t_traverse( right, depth + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Core Cast Functions */\r\n\traycast( ray, materialOrSide = FrontSide ) {\r\n\r\n\t\tconst roots = this._roots;\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst intersects = [];\r\n\t\tconst isMaterial = materialOrSide.isMaterial;\r\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\r\n\r\n\t\tconst groups = geometry.groups;\r\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\r\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\r\n\t\t\tconst startCount = intersects.length;\r\n\r\n\t\t\tsetBuffer( roots[ i ] );\r\n\t\t\traycast( 0, geometry, materialSide, ray, intersects );\r\n\t\t\tclearBuffer();\r\n\r\n\t\t\tif ( isArrayMaterial ) {\r\n\r\n\t\t\t\tconst materialIndex = groups[ i ].materialIndex;\r\n\t\t\t\tfor ( let j = startCount, jl = intersects.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tintersects[ j ].face.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n\traycastFirst( ray, materialOrSide = FrontSide ) {\r\n\r\n\t\tconst roots = this._roots;\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst isMaterial = materialOrSide.isMaterial;\r\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\r\n\r\n\t\tlet closestResult = null;\r\n\r\n\t\tconst groups = geometry.groups;\r\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\r\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\r\n\r\n\t\t\tsetBuffer( roots[ i ] );\r\n\t\t\tconst result = raycastFirst( 0, geometry, materialSide, ray );\r\n\t\t\tclearBuffer();\r\n\r\n\t\t\tif ( result != null && ( closestResult == null || result.distance < closestResult.distance ) ) {\r\n\r\n\t\t\t\tclosestResult = result;\r\n\t\t\t\tif ( isArrayMaterial ) {\r\n\r\n\t\t\t\t\tresult.face.materialIndex = groups[ i ].materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn closestResult;\r\n\r\n\t}\r\n\r\n\tintersectsGeometry( otherGeometry, geomToMesh ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tlet result = false;\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tsetBuffer( root );\r\n\t\t\tresult = intersectsGeometry( 0, geometry, otherGeometry, geomToMesh );\r\n\t\t\tclearBuffer();\r\n\r\n\t\t\tif ( result ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tshapecast( callbacks, _intersectsTriangleFunc, _orderNodesFunc ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tif ( callbacks instanceof Function ) {\r\n\r\n\t\t\tif ( _intersectsTriangleFunc ) {\r\n\r\n\t\t\t\t// Support the previous function signature that provided three sequential index buffer\r\n\t\t\t\t// indices here.\r\n\t\t\t\tconst originalTriangleFunc = _intersectsTriangleFunc;\r\n\t\t\t\t_intersectsTriangleFunc = ( tri, index, contained, depth ) => {\r\n\r\n\t\t\t\t\tconst i3 = index * 3;\r\n\t\t\t\t\treturn originalTriangleFunc( tri, i3, i3 + 1, i3 + 2, contained, depth );\r\n\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcallbacks = {\r\n\r\n\t\t\t\tboundsTraverseOrder: _orderNodesFunc,\r\n\t\t\t\tintersectsBounds: callbacks,\r\n\t\t\t\tintersectsTriangle: _intersectsTriangleFunc,\r\n\t\t\t\tintersectsRange: null,\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconsole.warn( 'MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst triangle = trianglePool.getPrimitive();\r\n\t\tlet {\r\n\t\t\tboundsTraverseOrder,\r\n\t\t\tintersectsBounds,\r\n\t\t\tintersectsRange,\r\n\t\t\tintersectsTriangle,\r\n\t\t} = callbacks;\r\n\r\n\t\tif ( intersectsRange && intersectsTriangle ) {\r\n\r\n\t\t\tconst originalIntersectsRange = intersectsRange;\r\n\t\t\tintersectsRange = ( offset, count, contained, depth, nodeIndex ) => {\r\n\r\n\t\t\t\tif ( ! originalIntersectsRange( offset, count, contained, depth, nodeIndex ) ) {\r\n\r\n\t\t\t\t\treturn iterateOverTriangles( offset, count, geometry, intersectsTriangle, contained, depth, triangle );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t};\r\n\r\n\t\t} else if ( ! intersectsRange ) {\r\n\r\n\t\t\tif ( intersectsTriangle ) {\r\n\r\n\t\t\t\tintersectsRange = ( offset, count, contained, depth ) => {\r\n\r\n\t\t\t\t\treturn iterateOverTriangles( offset, count, geometry, intersectsTriangle, contained, depth, triangle );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tintersectsRange = ( offset, count, contained ) => {\r\n\r\n\t\t\t\t\treturn contained;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet result = false;\r\n\t\tlet byteOffset = 0;\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tsetBuffer( root );\r\n\t\t\tresult = shapecast( 0, geometry, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset );\r\n\t\t\tclearBuffer();\r\n\r\n\t\t\tif ( result ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbyteOffset += root.byteLength;\r\n\r\n\t\t}\r\n\r\n\t\ttrianglePool.releasePrimitive( triangle );\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tbvhcast( otherBvh, matrixToLocal, callbacks ) {\r\n\r\n\t\t// BVHCast function for intersecting two BVHs against each other. Ultimately just uses two recursive shapecast calls rather\r\n\t\t// than an approach that walks down the tree (see bvhcast.js file for more info).\r\n\r\n\t\tlet {\r\n\t\t\tintersectsRanges,\r\n\t\t\tintersectsTriangles,\r\n\t\t} = callbacks;\r\n\r\n\t\tconst indexAttr = this.geometry.index;\r\n\t\tconst positionAttr = this.geometry.attributes.position;\r\n\r\n\t\tconst otherIndexAttr = otherBvh.geometry.index;\r\n\t\tconst otherPositionAttr = otherBvh.geometry.attributes.position;\r\n\r\n\t\ttempMatrix.copy( matrixToLocal ).invert();\r\n\r\n\t\tconst triangle = trianglePool.getPrimitive();\r\n\t\tconst triangle2 = trianglePool.getPrimitive();\r\n\r\n\t\tif ( intersectsTriangles ) {\r\n\r\n\t\t\tfunction iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\r\n\r\n\t\t\t\tfor ( let i2 = offset2, l2 = offset2 + count2; i2 < l2; i2 ++ ) {\r\n\r\n\t\t\t\t\tsetTriangle( triangle2, i2 * 3, otherIndexAttr, otherPositionAttr );\r\n\t\t\t\t\ttriangle2.a.applyMatrix4( matrixToLocal );\r\n\t\t\t\t\ttriangle2.b.applyMatrix4( matrixToLocal );\r\n\t\t\t\t\ttriangle2.c.applyMatrix4( matrixToLocal );\r\n\t\t\t\t\ttriangle2.needsUpdate = true;\r\n\r\n\t\t\t\t\tfor ( let i1 = offset1, l1 = offset1 + count1; i1 < l1; i1 ++ ) {\r\n\r\n\t\t\t\t\t\tsetTriangle( triangle, i1 * 3, indexAttr, positionAttr );\r\n\t\t\t\t\t\ttriangle.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( intersectsTriangles( triangle, triangle2, i1, i2, depth1, index1, depth2, index2 ) ) {\r\n\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( intersectsRanges ) {\r\n\r\n\t\t\t\tconst originalIntersectsRanges = intersectsRanges;\r\n\t\t\t\tintersectsRanges = function ( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\r\n\r\n\t\t\t\t\tif ( ! originalIntersectsRanges( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) ) {\r\n\r\n\t\t\t\t\t\treturn iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tintersectsRanges = iterateOverDoubleTriangles;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.getBoundingBox( aabb2 );\r\n\t\taabb2.applyMatrix4( matrixToLocal );\r\n\t\tconst result = this.shapecast( {\r\n\r\n\t\t\tintersectsBounds: box => aabb2.intersectsBox( box ),\r\n\r\n\t\t\tintersectsRange: ( offset1, count1, contained, depth1, nodeIndex1, box ) => {\r\n\r\n\t\t\t\taabb.copy( box );\r\n\t\t\t\taabb.applyMatrix4( tempMatrix );\r\n\t\t\t\treturn otherBvh.shapecast( {\r\n\r\n\t\t\t\t\tintersectsBounds: box => aabb.intersectsBox( box ),\r\n\r\n\t\t\t\t\tintersectsRange: ( offset2, count2, contained, depth2, nodeIndex2 ) => {\r\n\r\n\t\t\t\t\t\treturn intersectsRanges( offset1, count1, offset2, count2, depth1, nodeIndex1, depth2, nodeIndex2 );\r\n\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\ttrianglePool.releasePrimitive( triangle );\r\n\t\ttrianglePool.releasePrimitive( triangle2 );\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/* Derived Cast Functions */\r\n\tintersectsBox( box, boxToMesh ) {\r\n\r\n\t\tobb.set( box.min, box.max, boxToMesh );\r\n\t\tobb.needsUpdate = true;\r\n\r\n\t\treturn this.shapecast(\r\n\t\t\t{\r\n\t\t\t\tintersectsBounds: box => obb.intersectsBox( box ),\r\n\t\t\t\tintersectsTriangle: tri => obb.intersectsTriangle( tri )\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn this.shapecast(\r\n\t\t\t{\r\n\t\t\t\tintersectsBounds: box => sphere.intersectsBox( box ),\r\n\t\t\t\tintersectsTriangle: tri => tri.intersectsSphere( sphere )\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tclosestPointToGeometry( otherGeometry, geometryToBvh, target1 = { }, target2 = { }, minThreshold = 0, maxThreshold = Infinity ) {\r\n\r\n\t\tif ( ! otherGeometry.boundingBox ) {\r\n\r\n\t\t\totherGeometry.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\r\n\t\tobb.needsUpdate = true;\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst pos = geometry.attributes.position;\r\n\t\tconst index = geometry.index;\r\n\t\tconst otherPos = otherGeometry.attributes.position;\r\n\t\tconst otherIndex = otherGeometry.index;\r\n\t\tconst triangle = trianglePool.getPrimitive();\r\n\t\tconst triangle2 = trianglePool.getPrimitive();\r\n\r\n\t\tlet tempTarget1 = temp1;\r\n\t\tlet tempTargetDest1 = temp2;\r\n\t\tlet tempTarget2 = null;\r\n\t\tlet tempTargetDest2 = null;\r\n\r\n\t\tif ( target2 ) {\r\n\r\n\t\t\ttempTarget2 = temp3;\r\n\t\t\ttempTargetDest2 = temp4;\r\n\r\n\t\t}\r\n\r\n\t\tlet closestDistance = Infinity;\r\n\t\tlet closestDistanceTriIndex = null;\r\n\t\tlet closestDistanceOtherTriIndex = null;\r\n\t\ttempMatrix.copy( geometryToBvh ).invert();\r\n\t\tobb2.matrix.copy( tempMatrix );\r\n\t\tthis.shapecast(\r\n\t\t\t{\r\n\r\n\t\t\t\tboundsTraverseOrder: box => {\r\n\r\n\t\t\t\t\treturn obb.distanceToBox( box );\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\r\n\r\n\t\t\t\t\tif ( score < closestDistance && score < maxThreshold ) {\r\n\r\n\t\t\t\t\t\t// if we know the triangles of this bounds will be intersected next then\r\n\t\t\t\t\t\t// save the bounds to use during triangle checks.\r\n\t\t\t\t\t\tif ( isLeaf ) {\r\n\r\n\t\t\t\t\t\t\tobb2.min.copy( box.min );\r\n\t\t\t\t\t\t\tobb2.max.copy( box.max );\r\n\t\t\t\t\t\t\tobb2.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tintersectsRange: ( offset, count ) => {\r\n\r\n\t\t\t\t\tif ( otherGeometry.boundsTree ) {\r\n\r\n\t\t\t\t\t\t// if the other geometry has a bvh then use the accelerated path where we use shapecast to find\r\n\t\t\t\t\t\t// the closest bounds in the other geometry to check.\r\n\t\t\t\t\t\treturn otherGeometry.boundsTree.shapecast( {\r\n\t\t\t\t\t\t\tboundsTraverseOrder: box => {\r\n\r\n\t\t\t\t\t\t\t\treturn obb2.distanceToBox( box );\r\n\r\n\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\r\n\r\n\t\t\t\t\t\t\t\treturn score < closestDistance && score < maxThreshold;\r\n\r\n\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\tintersectsRange: ( otherOffset, otherCount ) => {\r\n\r\n\t\t\t\t\t\t\t\tfor ( let i2 = otherOffset * 3, l2 = ( otherOffset + otherCount ) * 3; i2 < l2; i2 += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tsetTriangle( triangle2, i2, otherIndex, otherPos );\r\n\t\t\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tsetTriangle( triangle, i, index, pos );\r\n\t\t\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\r\n\t\t\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclosestDistance = dist;\r\n\t\t\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i / 3;\r\n\t\t\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2 / 3;\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\r\n\t\t\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// If no bounds tree then we'll just check every triangle.\r\n\t\t\t\t\t\tconst triCount = otherIndex ? otherIndex.count : otherPos.count;\r\n\t\t\t\t\t\tfor ( let i2 = 0, l2 = triCount; i2 < l2; i2 += 3 ) {\r\n\r\n\t\t\t\t\t\t\tsetTriangle( triangle2, i2, otherIndex, otherPos );\r\n\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\tsetTriangle( triangle, i, index, pos );\r\n\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\r\n\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\r\n\r\n\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tclosestDistance = dist;\r\n\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i / 3;\r\n\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2 / 3;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\r\n\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\r\n\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t}\r\n\r\n\t\t);\r\n\r\n\t\ttrianglePool.releasePrimitive( triangle );\r\n\t\ttrianglePool.releasePrimitive( triangle2 );\r\n\r\n\t\tif ( closestDistance === Infinity ) return null;\r\n\r\n\t\tif ( ! target1.point ) target1.point = tempTargetDest1.clone();\r\n\t\telse target1.point.copy( tempTargetDest1 );\r\n\t\ttarget1.distance = closestDistance,\r\n\t\ttarget1.faceIndex = closestDistanceTriIndex;\r\n\r\n\t\tif ( target2 ) {\r\n\r\n\t\t\tif ( ! target2.point ) target2.point = tempTargetDest2.clone();\r\n\t\t\telse target2.point.copy( tempTargetDest2 );\r\n\t\t\ttarget2.point.applyMatrix4( tempMatrix );\r\n\t\t\ttempTargetDest1.applyMatrix4( tempMatrix );\r\n\t\t\ttarget2.distance = tempTargetDest1.sub( target2.point ).length();\r\n\t\t\ttarget2.faceIndex = closestDistanceOtherTriIndex;\r\n\r\n\t\t}\r\n\r\n\t\treturn target1;\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( point, target = { }, minThreshold = 0, maxThreshold = Infinity ) {\r\n\r\n\t\t// early out if under minThreshold\r\n\t\t// skip checking if over maxThreshold\r\n\t\t// set minThreshold = maxThreshold to quickly check if a point is within a threshold\r\n\t\t// returns Infinity if no value found\r\n\t\tconst minThresholdSq = minThreshold * minThreshold;\r\n\t\tconst maxThresholdSq = maxThreshold * maxThreshold;\r\n\t\tlet closestDistanceSq = Infinity;\r\n\t\tlet closestDistanceTriIndex = null;\r\n\t\tthis.shapecast(\r\n\r\n\t\t\t{\r\n\r\n\t\t\t\tboundsTraverseOrder: box => {\r\n\r\n\t\t\t\t\ttemp.copy( point ).clamp( box.min, box.max );\r\n\t\t\t\t\treturn temp.distanceToSquared( point );\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\r\n\r\n\t\t\t\t\treturn score < closestDistanceSq && score < maxThresholdSq;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tintersectsTriangle: ( tri, triIndex ) => {\r\n\r\n\t\t\t\t\ttri.closestPointToPoint( point, temp );\r\n\t\t\t\t\tconst distSq = point.distanceToSquared( temp );\r\n\t\t\t\t\tif ( distSq < closestDistanceSq ) {\r\n\r\n\t\t\t\t\t\ttemp1.copy( temp );\r\n\t\t\t\t\t\tclosestDistanceSq = distSq;\r\n\t\t\t\t\t\tclosestDistanceTriIndex = triIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( distSq < minThresholdSq ) {\r\n\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t}\r\n\r\n\t\t);\r\n\r\n\t\tif ( closestDistanceSq === Infinity ) return null;\r\n\r\n\t\tconst closestDistance = Math.sqrt( closestDistanceSq );\r\n\r\n\t\tif ( ! target.point ) target.point = temp1.clone();\r\n\t\telse target.point.copy( temp1 );\r\n\t\ttarget.distance = closestDistance,\r\n\t\ttarget.faceIndex = closestDistanceTriIndex;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetBoundingBox( target ) {\r\n\r\n\t\ttarget.makeEmpty();\r\n\r\n\t\tconst roots = this._roots;\r\n\t\troots.forEach( buffer => {\r\n\r\n\t\t\tarrayToBox( 0, new Float32Array( buffer ), tempBox );\r\n\t\t\ttarget.union( tempBox );\r\n\r\n\t\t} );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Deprecation\r\nconst originalRaycast = MeshBVH.prototype.raycast;\r\nMeshBVH.prototype.raycast = function ( ...args ) {\r\n\r\n\tif ( args[ 0 ].isMesh ) {\r\n\r\n\t\tconsole.warn( 'MeshBVH: The function signature and results frame for \"raycast\" has changed. See docs for new signature.' );\r\n\t\tconst [\r\n\t\t\tmesh, raycaster, ray, intersects,\r\n\t\t] = args;\r\n\r\n\t\tconst results = originalRaycast.call( this, ray, mesh.material );\r\n\t\tresults.forEach( hit => {\r\n\r\n\t\t\thit = convertRaycastIntersect( hit, mesh, raycaster );\r\n\t\t\tif ( hit ) {\r\n\r\n\t\t\t\tintersects.push( hit );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn intersects;\r\n\r\n\t} else {\r\n\r\n\t\treturn originalRaycast.apply( this, args );\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst originalRaycastFirst = MeshBVH.prototype.raycastFirst;\r\nMeshBVH.prototype.raycastFirst = function ( ...args ) {\r\n\r\n\tif ( args[ 0 ].isMesh ) {\r\n\r\n\t\tconsole.warn( 'MeshBVH: The function signature and results frame for \"raycastFirst\" has changed. See docs for new signature.' );\r\n\t\tconst [\r\n\t\t\tmesh, raycaster, ray,\r\n\t\t] = args;\r\n\r\n\t\treturn convertRaycastIntersect( originalRaycastFirst.call( this, ray, mesh.material ), mesh, raycaster );\r\n\r\n\t} else {\r\n\r\n\t\treturn originalRaycastFirst.apply( this, args );\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst originalClosestPointToPoint = MeshBVH.prototype.closestPointToPoint;\r\nMeshBVH.prototype.closestPointToPoint = function ( ...args ) {\r\n\r\n\r\n\tif ( args[ 0 ].isMesh ) {\r\n\r\n\t\tconsole.warn( 'MeshBVH: The function signature and results frame for \"closestPointToPoint\" has changed. See docs for new signature.' );\r\n\r\n\t\targs.unshift();\r\n\r\n\t\tconst target = args[ 1 ];\r\n\t\tconst result = {};\r\n\t\targs[ 1 ] = result;\r\n\r\n\t\toriginalClosestPointToPoint.apply( this, args );\r\n\r\n\t\tif ( target ) {\r\n\r\n\t\t\ttarget.copy( result.point );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.distance;\r\n\r\n\t} else {\r\n\r\n\t\treturn originalClosestPointToPoint.apply( this, args );\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst originalClosestPointToGeometry = MeshBVH.prototype.closestPointToGeometry;\r\nMeshBVH.prototype.closestPointToGeometry = function ( ...args ) {\r\n\r\n\tconst target1 = args[ 2 ];\r\n\tconst target2 = args[ 3 ];\r\n\tif ( target1 && target1.isVector3 || target2 && target2.isVector3 ) {\r\n\r\n\t\tconsole.warn( 'MeshBVH: The function signature and results frame for \"closestPointToGeometry\" has changed. See docs for new signature.' );\r\n\r\n\t\tconst result1 = {};\r\n\t\tconst result2 = {};\r\n\t\tconst geometryToBvh = args[ 1 ];\r\n\t\targs[ 2 ] = result1;\r\n\t\targs[ 3 ] = result2;\r\n\r\n\t\toriginalClosestPointToGeometry.apply( this, args );\r\n\r\n\t\tif ( target1 ) {\r\n\r\n\t\t\ttarget1.copy( result1.point );\r\n\r\n\t\t}\r\n\r\n\t\tif ( target2 ) {\r\n\r\n\t\t\ttarget2.copy( result2.point ).applyMatrix4( geometryToBvh );\r\n\r\n\t\t}\r\n\r\n\t\treturn result1.distance;\r\n\r\n\t} else {\r\n\r\n\t\treturn originalClosestPointToGeometry.apply( this, args );\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst originalRefit = MeshBVH.prototype.refit;\r\nMeshBVH.prototype.refit = function ( ...args ) {\r\n\r\n\tconst nodeIndices = args[ 0 ];\r\n\tconst terminationIndices = args[ 1 ];\r\n\tif ( terminationIndices && ( terminationIndices instanceof Set || Array.isArray( terminationIndices ) ) ) {\r\n\r\n\t\tconsole.warn( 'MeshBVH: The function signature for \"refit\" has changed. See docs for new signature.' );\r\n\r\n\t\tconst newNodeIndices = new Set();\r\n\t\tterminationIndices.forEach( v => newNodeIndices.add( v ) );\r\n\t\tif ( nodeIndices ) {\r\n\r\n\t\t\tnodeIndices.forEach( v => newNodeIndices.add( v ) );\r\n\r\n\t\t}\r\n\r\n\t\toriginalRefit.call( this, newNodeIndices );\r\n\r\n\t} else {\r\n\r\n\t\toriginalRefit.apply( this, args );\r\n\r\n\t}\r\n\r\n};\r\n\r\n[\r\n\t'intersectsGeometry',\r\n\t'shapecast',\r\n\t'intersectsBox',\r\n\t'intersectsSphere',\r\n].forEach( name => {\r\n\r\n\tconst originalFunc = MeshBVH.prototype[ name ];\r\n\tMeshBVH.prototype[ name ] = function ( ...args ) {\r\n\r\n\t\tif ( args[ 0 ] === null || args[ 0 ].isMesh ) {\r\n\r\n\t\t\targs.shift();\r\n\t\t\tconsole.warn( `MeshBVH: The function signature for \"${ name }\" has changed and no longer takes Mesh. See docs for new signature.` );\r\n\r\n\t\t}\r\n\r\n\t\treturn originalFunc.apply( this, args );\r\n\r\n\t};\r\n\r\n} );\r\n", "// Split strategy constants\r\nexport const CENTER = 0;\r\nexport const AVERAGE = 1;\r\nexport const SAH = 2;\r\n\r\n// Traversal constants\r\nexport const NOT_INTERSECTED = 0;\r\nexport const INTERSECTED = 1;\r\nexport const CONTAINED = 2;\r\n\r\n// SAH cost constants\r\n// TODO: hone these costs more. The relative difference between them should be the\r\n// difference in measured time to perform a triangle intersection vs traversing\r\n// bounds.\r\nexport const TRIANGLE_INTERSECT_COST = 1.25;\r\nexport const TRAVERSAL_COST = 1;\r\n\r\n\r\n// Build constants\r\nexport const BYTES_PER_NODE = 6 * 4 + 4 + 4;\r\nexport const IS_LEAFNODE_FLAG = 0xFFFF;\r\n\r\n// EPSILON for computing floating point error during build\r\n// https://en.wikipedia.org/wiki/Machine_epsilon#Values_for_standard_hardware_floating_point_arithmetics\r\nexport const FLOAT32_EPSILON = Math.pow( 2, - 24 );\r\n\r\n", "import { BufferAttribute } from 'three';\r\nimport { MeshBVHNode } from './MeshBVHNode.js';\r\nimport { getLongestEdgeIndex, computeSurfaceArea, copyBounds, unionBounds, expandByTriangleBounds } from '../utils/ArrayBoxUtilities.js';\r\nimport {\r\n\tCENTER, AVERAGE, SAH, TRIANGLE_INTERSECT_COST, TRAVERSAL_COST,\r\n\tBYTES_PER_NODE, FLOAT32_EPSILON, IS_LEAFNODE_FLAG,\r\n} from './Constants.js';\r\n\r\nfunction ensureIndex( geo, options ) {\r\n\r\n\tif ( ! geo.index ) {\r\n\r\n\t\tconst vertexCount = geo.attributes.position.count;\r\n\t\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\r\n\t\tlet index;\r\n\t\tif ( vertexCount > 65535 ) {\r\n\r\n\t\t\tindex = new Uint32Array( new BufferConstructor( 4 * vertexCount ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tindex = new Uint16Array( new BufferConstructor( 2 * vertexCount ) );\r\n\r\n\t\t}\r\n\r\n\t\tgeo.setIndex( new BufferAttribute( index, 1 ) );\r\n\r\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\r\n\r\n\t\t\tindex[ i ] = i;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Computes the set of { offset, count } ranges which need independent BVH roots. Each\r\n// region in the geometry index that belongs to a different set of material groups requires\r\n// a separate BVH root, so that triangles indices belonging to one group never get swapped\r\n// with triangle indices belongs to another group. For example, if the groups were like this:\r\n//\r\n// [-------------------------------------------------------------]\r\n// |__________________|\r\n//   g0 = [0, 20]  |______________________||_____________________|\r\n//                      g1 = [16, 40]           g2 = [41, 60]\r\n//\r\n// we would need four BVH roots: [0, 15], [16, 20], [21, 40], [41, 60].\r\nfunction getRootIndexRanges( geo ) {\r\n\r\n\tif ( ! geo.groups || ! geo.groups.length ) {\r\n\r\n\t\treturn [ { offset: 0, count: geo.index.count / 3 } ];\r\n\r\n\t}\r\n\r\n\tconst ranges = [];\r\n\tconst rangeBoundaries = new Set();\r\n\tfor ( const group of geo.groups ) {\r\n\r\n\t\trangeBoundaries.add( group.start );\r\n\t\trangeBoundaries.add( group.start + group.count );\r\n\r\n\t}\r\n\r\n\t// note that if you don't pass in a comparator, it sorts them lexicographically as strings :-(\r\n\tconst sortedBoundaries = Array.from( rangeBoundaries.values() ).sort( ( a, b ) => a - b );\r\n\tfor ( let i = 0; i < sortedBoundaries.length - 1; i ++ ) {\r\n\r\n\t\tconst start = sortedBoundaries[ i ], end = sortedBoundaries[ i + 1 ];\r\n\t\tranges.push( { offset: ( start / 3 ), count: ( end - start ) / 3 } );\r\n\r\n\t}\r\n\r\n\treturn ranges;\r\n\r\n}\r\n\r\n// computes the union of the bounds of all of the given triangles and puts the resulting box in target. If\r\n// centroidTarget is provided then a bounding box is computed for the centroids of the triangles, as well.\r\n// These are computed together to avoid redundant accesses to bounds array.\r\nfunction getBounds( triangleBounds, offset, count, target, centroidTarget = null ) {\r\n\r\n\tlet minx = Infinity;\r\n\tlet miny = Infinity;\r\n\tlet minz = Infinity;\r\n\tlet maxx = - Infinity;\r\n\tlet maxy = - Infinity;\r\n\tlet maxz = - Infinity;\r\n\r\n\tlet cminx = Infinity;\r\n\tlet cminy = Infinity;\r\n\tlet cminz = Infinity;\r\n\tlet cmaxx = - Infinity;\r\n\tlet cmaxy = - Infinity;\r\n\tlet cmaxz = - Infinity;\r\n\r\n\tconst includeCentroid = centroidTarget !== null;\r\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\r\n\r\n\t\tconst cx = triangleBounds[ i + 0 ];\r\n\t\tconst hx = triangleBounds[ i + 1 ];\r\n\t\tconst lx = cx - hx;\r\n\t\tconst rx = cx + hx;\r\n\t\tif ( lx < minx ) minx = lx;\r\n\t\tif ( rx > maxx ) maxx = rx;\r\n\t\tif ( includeCentroid && cx < cminx ) cminx = cx;\r\n\t\tif ( includeCentroid && cx > cmaxx ) cmaxx = cx;\r\n\r\n\t\tconst cy = triangleBounds[ i + 2 ];\r\n\t\tconst hy = triangleBounds[ i + 3 ];\r\n\t\tconst ly = cy - hy;\r\n\t\tconst ry = cy + hy;\r\n\t\tif ( ly < miny ) miny = ly;\r\n\t\tif ( ry > maxy ) maxy = ry;\r\n\t\tif ( includeCentroid && cy < cminy ) cminy = cy;\r\n\t\tif ( includeCentroid && cy > cmaxy ) cmaxy = cy;\r\n\r\n\t\tconst cz = triangleBounds[ i + 4 ];\r\n\t\tconst hz = triangleBounds[ i + 5 ];\r\n\t\tconst lz = cz - hz;\r\n\t\tconst rz = cz + hz;\r\n\t\tif ( lz < minz ) minz = lz;\r\n\t\tif ( rz > maxz ) maxz = rz;\r\n\t\tif ( includeCentroid && cz < cminz ) cminz = cz;\r\n\t\tif ( includeCentroid && cz > cmaxz ) cmaxz = cz;\r\n\r\n\t}\r\n\r\n\ttarget[ 0 ] = minx;\r\n\ttarget[ 1 ] = miny;\r\n\ttarget[ 2 ] = minz;\r\n\r\n\ttarget[ 3 ] = maxx;\r\n\ttarget[ 4 ] = maxy;\r\n\ttarget[ 5 ] = maxz;\r\n\r\n\tif ( includeCentroid ) {\r\n\r\n\t\tcentroidTarget[ 0 ] = cminx;\r\n\t\tcentroidTarget[ 1 ] = cminy;\r\n\t\tcentroidTarget[ 2 ] = cminz;\r\n\r\n\t\tcentroidTarget[ 3 ] = cmaxx;\r\n\t\tcentroidTarget[ 4 ] = cmaxy;\r\n\t\tcentroidTarget[ 5 ] = cmaxz;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// A stand alone function for retrieving the centroid bounds.\r\nfunction getCentroidBounds( triangleBounds, offset, count, centroidTarget ) {\r\n\r\n\tlet cminx = Infinity;\r\n\tlet cminy = Infinity;\r\n\tlet cminz = Infinity;\r\n\tlet cmaxx = - Infinity;\r\n\tlet cmaxy = - Infinity;\r\n\tlet cmaxz = - Infinity;\r\n\r\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\r\n\r\n\t\tconst cx = triangleBounds[ i + 0 ];\r\n\t\tif ( cx < cminx ) cminx = cx;\r\n\t\tif ( cx > cmaxx ) cmaxx = cx;\r\n\r\n\t\tconst cy = triangleBounds[ i + 2 ];\r\n\t\tif ( cy < cminy ) cminy = cy;\r\n\t\tif ( cy > cmaxy ) cmaxy = cy;\r\n\r\n\t\tconst cz = triangleBounds[ i + 4 ];\r\n\t\tif ( cz < cminz ) cminz = cz;\r\n\t\tif ( cz > cmaxz ) cmaxz = cz;\r\n\r\n\t}\r\n\r\n\tcentroidTarget[ 0 ] = cminx;\r\n\tcentroidTarget[ 1 ] = cminy;\r\n\tcentroidTarget[ 2 ] = cminz;\r\n\r\n\tcentroidTarget[ 3 ] = cmaxx;\r\n\tcentroidTarget[ 4 ] = cmaxy;\r\n\tcentroidTarget[ 5 ] = cmaxz;\r\n\r\n}\r\n\r\n\r\n// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\r\n// will be on the left and elements on the right side of the split will be on the right. returns the index\r\n// of the first element on the right side, or offset + count if there are no elements on the right side.\r\nfunction partition( index, triangleBounds, offset, count, split ) {\r\n\r\n\tlet left = offset;\r\n\tlet right = offset + count - 1;\r\n\tconst pos = split.pos;\r\n\tconst axisOffset = split.axis * 2;\r\n\r\n\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\r\n\twhile ( true ) {\r\n\r\n\t\twhile ( left <= right && triangleBounds[ left * 6 + axisOffset ] < pos ) {\r\n\r\n\t\t\tleft ++;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if a triangle center lies on the partition plane it is considered to be on the right side\r\n\t\twhile ( left <= right && triangleBounds[ right * 6 + axisOffset ] >= pos ) {\r\n\r\n\t\t\tright --;\r\n\r\n\t\t}\r\n\r\n\t\tif ( left < right ) {\r\n\r\n\t\t\t// we need to swap all of the information associated with the triangles at index\r\n\t\t\t// left and right; that's the verts in the geometry index, the bounds,\r\n\t\t\t// and perhaps the SAH planes\r\n\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tlet t0 = index[ left * 3 + i ];\r\n\t\t\t\tindex[ left * 3 + i ] = index[ right * 3 + i ];\r\n\t\t\t\tindex[ right * 3 + i ] = t0;\r\n\r\n\t\t\t\tlet t1 = triangleBounds[ left * 6 + i * 2 + 0 ];\r\n\t\t\t\ttriangleBounds[ left * 6 + i * 2 + 0 ] = triangleBounds[ right * 6 + i * 2 + 0 ];\r\n\t\t\t\ttriangleBounds[ right * 6 + i * 2 + 0 ] = t1;\r\n\r\n\t\t\t\tlet t2 = triangleBounds[ left * 6 + i * 2 + 1 ];\r\n\t\t\t\ttriangleBounds[ left * 6 + i * 2 + 1 ] = triangleBounds[ right * 6 + i * 2 + 1 ];\r\n\t\t\t\ttriangleBounds[ right * 6 + i * 2 + 1 ] = t2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tleft ++;\r\n\t\t\tright --;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn left;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst BIN_COUNT = 32;\r\nconst binsSort = ( a, b ) => a.candidate - b.candidate;\r\nconst sahBins = new Array( BIN_COUNT ).fill().map( () => {\r\n\r\n\treturn {\r\n\r\n\t\tcount: 0,\r\n\t\tbounds: new Float32Array( 6 ),\r\n\t\trightCacheBounds: new Float32Array( 6 ),\r\n\t\tleftCacheBounds: new Float32Array( 6 ),\r\n\t\tcandidate: 0,\r\n\r\n\t};\r\n\r\n} );\r\nconst leftBounds = new Float32Array( 6 );\r\n\r\nfunction getOptimalSplit( nodeBoundingData, centroidBoundingData, triangleBounds, offset, count, strategy ) {\r\n\r\n\tlet axis = - 1;\r\n\tlet pos = 0;\r\n\r\n\t// Center\r\n\tif ( strategy === CENTER ) {\r\n\r\n\t\taxis = getLongestEdgeIndex( centroidBoundingData );\r\n\t\tif ( axis !== - 1 ) {\r\n\r\n\t\t\tpos = ( centroidBoundingData[ axis ] + centroidBoundingData[ axis + 3 ] ) / 2;\r\n\r\n\t\t}\r\n\r\n\t} else if ( strategy === AVERAGE ) {\r\n\r\n\t\taxis = getLongestEdgeIndex( nodeBoundingData );\r\n\t\tif ( axis !== - 1 ) {\r\n\r\n\t\t\tpos = getAverage( triangleBounds, offset, count, axis );\r\n\r\n\t\t}\r\n\r\n\t} else if ( strategy === SAH ) {\r\n\r\n\t\tconst rootSurfaceArea = computeSurfaceArea( nodeBoundingData );\r\n\t\tlet bestCost = TRIANGLE_INTERSECT_COST * count;\r\n\r\n\t\t// iterate over all axes\r\n\t\tconst cStart = offset * 6;\r\n\t\tconst cEnd = ( offset + count ) * 6;\r\n\t\tfor ( let a = 0; a < 3; a ++ ) {\r\n\r\n\t\t\tconst axisLeft = centroidBoundingData[ a ];\r\n\t\t\tconst axisRight = centroidBoundingData[ a + 3 ];\r\n\t\t\tconst axisLength = axisRight - axisLeft;\r\n\t\t\tconst binWidth = axisLength / BIN_COUNT;\r\n\r\n\t\t\t// If we have fewer triangles than we're planning to split then just check all\r\n\t\t\t// the triangle positions because it will be faster.\r\n\t\t\tif ( count < BIN_COUNT / 4 ) {\r\n\r\n\t\t\t\t// initialize the bin candidates\r\n\t\t\t\tconst truncatedBins = [ ...sahBins ];\r\n\t\t\t\ttruncatedBins.length = count;\r\n\r\n\t\t\t\t// set the candidates\r\n\t\t\t\tlet b = 0;\r\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6, b ++ ) {\r\n\r\n\t\t\t\t\tconst bin = truncatedBins[ b ];\r\n\t\t\t\t\tbin.candidate = triangleBounds[ c + 2 * a ];\r\n\t\t\t\t\tbin.count = 0;\r\n\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tbounds,\r\n\t\t\t\t\t\tleftCacheBounds,\r\n\t\t\t\t\t\trightCacheBounds,\r\n\t\t\t\t\t} = bin;\r\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\r\n\r\n\t\t\t\t\t\trightCacheBounds[ d ] = Infinity;\r\n\t\t\t\t\t\trightCacheBounds[ d + 3 ] = - Infinity;\r\n\r\n\t\t\t\t\t\tleftCacheBounds[ d ] = Infinity;\r\n\t\t\t\t\t\tleftCacheBounds[ d + 3 ] = - Infinity;\r\n\r\n\t\t\t\t\t\tbounds[ d ] = Infinity;\r\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttruncatedBins.sort( binsSort );\r\n\r\n\t\t\t\t// remove redundant splits\r\n\t\t\t\tlet splitCount = count;\r\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\r\n\r\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\r\n\t\t\t\t\twhile ( bi + 1 < splitCount && truncatedBins[ bi + 1 ].candidate === bin.candidate ) {\r\n\r\n\t\t\t\t\t\ttruncatedBins.splice( bi + 1, 1 );\r\n\t\t\t\t\t\tsplitCount --;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// find the appropriate bin for each triangle and expand the bounds.\r\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\r\n\r\n\t\t\t\t\tconst center = triangleBounds[ c + 2 * a ];\r\n\t\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\r\n\r\n\t\t\t\t\t\tconst bin = truncatedBins[ bi ];\r\n\t\t\t\t\t\tif ( center >= bin.candidate ) {\r\n\r\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.rightCacheBounds );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.leftCacheBounds );\r\n\t\t\t\t\t\t\tbin.count ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand all the bounds\r\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\r\n\r\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\r\n\t\t\t\t\tconst leftCount = bin.count;\r\n\t\t\t\t\tconst rightCount = count - bin.count;\r\n\r\n\t\t\t\t\t// check the cost of this split\r\n\t\t\t\t\tconst leftBounds = bin.leftCacheBounds;\r\n\t\t\t\t\tconst rightBounds = bin.rightCacheBounds;\r\n\r\n\t\t\t\t\tlet leftProb = 0;\r\n\t\t\t\t\tif ( leftCount !== 0 ) {\r\n\r\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet rightProb = 0;\r\n\t\t\t\t\tif ( rightCount !== 0 ) {\r\n\r\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\r\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif ( cost < bestCost ) {\r\n\r\n\t\t\t\t\t\taxis = a;\r\n\t\t\t\t\t\tbestCost = cost;\r\n\t\t\t\t\t\tpos = bin.candidate;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset the bins\r\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT; i ++ ) {\r\n\r\n\t\t\t\t\tconst bin = sahBins[ i ];\r\n\t\t\t\t\tbin.count = 0;\r\n\t\t\t\t\tbin.candidate = axisLeft + binWidth + i * binWidth;\r\n\r\n\t\t\t\t\tconst bounds = bin.bounds;\r\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\r\n\r\n\t\t\t\t\t\tbounds[ d ] = Infinity;\r\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// iterate over all center positions\r\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\r\n\r\n\t\t\t\t\tconst triCenter = triangleBounds[ c + 2 * a ];\r\n\t\t\t\t\tconst relativeCenter = triCenter - axisLeft;\r\n\r\n\t\t\t\t\t// in the partition function if the centroid lies on the split plane then it is\r\n\t\t\t\t\t// considered to be on the right side of the split\r\n\t\t\t\t\tlet binIndex = ~ ~ ( relativeCenter / binWidth );\r\n\t\t\t\t\tif ( binIndex >= BIN_COUNT ) binIndex = BIN_COUNT - 1;\r\n\r\n\t\t\t\t\tconst bin = sahBins[ binIndex ];\r\n\t\t\t\t\tbin.count ++;\r\n\r\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.bounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// cache the unioned bounds from right to left so we don't have to regenerate them each time\r\n\t\t\t\tconst lastBin = sahBins[ BIN_COUNT - 1 ];\r\n\t\t\t\tcopyBounds( lastBin.bounds, lastBin.rightCacheBounds );\r\n\t\t\t\tfor ( let i = BIN_COUNT - 2; i >= 0; i -- ) {\r\n\r\n\t\t\t\t\tconst bin = sahBins[ i ];\r\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\r\n\t\t\t\t\tunionBounds( bin.bounds, nextBin.rightCacheBounds, bin.rightCacheBounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet leftCount = 0;\r\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT - 1; i ++ ) {\r\n\r\n\t\t\t\t\tconst bin = sahBins[ i ];\r\n\t\t\t\t\tconst binCount = bin.count;\r\n\t\t\t\t\tconst bounds = bin.bounds;\r\n\r\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\r\n\t\t\t\t\tconst rightBounds = nextBin.rightCacheBounds;\r\n\r\n\t\t\t\t\t// dont do anything with the bounds if the new bounds have no triangles\r\n\t\t\t\t\tif ( binCount !== 0 ) {\r\n\r\n\t\t\t\t\t\tif ( leftCount === 0 ) {\r\n\r\n\t\t\t\t\t\t\tcopyBounds( bounds, leftBounds );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tunionBounds( bounds, leftBounds, leftBounds );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tleftCount += binCount;\r\n\r\n\t\t\t\t\t// check the cost of this split\r\n\t\t\t\t\tlet leftProb = 0;\r\n\t\t\t\t\tlet rightProb = 0;\r\n\r\n\t\t\t\t\tif ( leftCount !== 0 ) {\r\n\r\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst rightCount = count - leftCount;\r\n\t\t\t\t\tif ( rightCount !== 0 ) {\r\n\r\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\r\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif ( cost < bestCost ) {\r\n\r\n\t\t\t\t\t\taxis = a;\r\n\t\t\t\t\t\tbestCost = cost;\r\n\t\t\t\t\t\tpos = bin.candidate;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( `MeshBVH: Invalid build strategy value ${ strategy } used.` );\r\n\r\n\t}\r\n\r\n\treturn { axis, pos };\r\n\r\n}\r\n\r\n// returns the average coordinate on the specified axis of the all the provided triangles\r\nfunction getAverage( triangleBounds, offset, count, axis ) {\r\n\r\n\tlet avg = 0;\r\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\tavg += triangleBounds[ i * 6 + axis * 2 ];\r\n\r\n\t}\r\n\r\n\treturn avg / count;\r\n\r\n}\r\n\r\n// precomputes the bounding box for each triangle; required for quickly calculating tree splits.\r\n// result is an array of size tris.length * 6 where triangle i maps to a\r\n// [x_center, x_delta, y_center, y_delta, z_center, z_delta] tuple starting at index i * 6,\r\n// representing the center and half-extent in each dimension of triangle i\r\nfunction computeTriangleBounds( geo, fullBounds ) {\r\n\r\n\tconst posAttr = geo.attributes.position;\r\n\tconst posArr = posAttr.array;\r\n\tconst index = geo.index.array;\r\n\tconst triCount = index.length / 3;\r\n\tconst triangleBounds = new Float32Array( triCount * 6 );\r\n\r\n\t// support for an interleaved position buffer\r\n\tconst bufferOffset = posAttr.offset || 0;\r\n\tlet stride = 3;\r\n\tif ( posAttr.isInterleavedBufferAttribute ) {\r\n\r\n\t\tstride = posAttr.data.stride;\r\n\r\n\t}\r\n\r\n\tfor ( let tri = 0; tri < triCount; tri ++ ) {\r\n\r\n\t\tconst tri3 = tri * 3;\r\n\t\tconst tri6 = tri * 6;\r\n\t\tconst ai = index[ tri3 + 0 ] * stride + bufferOffset;\r\n\t\tconst bi = index[ tri3 + 1 ] * stride + bufferOffset;\r\n\t\tconst ci = index[ tri3 + 2 ] * stride + bufferOffset;\r\n\r\n\t\tfor ( let el = 0; el < 3; el ++ ) {\r\n\r\n\t\t\tconst a = posArr[ ai + el ];\r\n\t\t\tconst b = posArr[ bi + el ];\r\n\t\t\tconst c = posArr[ ci + el ];\r\n\r\n\t\t\tlet min = a;\r\n\t\t\tif ( b < min ) min = b;\r\n\t\t\tif ( c < min ) min = c;\r\n\r\n\t\t\tlet max = a;\r\n\t\t\tif ( b > max ) max = b;\r\n\t\t\tif ( c > max ) max = c;\r\n\r\n\t\t\t// Increase the bounds size by float32 epsilon to avoid precision errors when\r\n\t\t\t// converting to 32 bit float. Scale the epsilon by the size of the numbers being\r\n\t\t\t// worked with.\r\n\t\t\tconst halfExtents = ( max - min ) / 2;\r\n\t\t\tconst el2 = el * 2;\r\n\t\t\ttriangleBounds[ tri6 + el2 + 0 ] = min + halfExtents;\r\n\t\t\ttriangleBounds[ tri6 + el2 + 1 ] = halfExtents + ( Math.abs( min ) + halfExtents ) * FLOAT32_EPSILON;\r\n\r\n\t\t\tif ( min < fullBounds[ el ] ) fullBounds[ el ] = min;\r\n\t\t\tif ( max > fullBounds[ el + 3 ] ) fullBounds[ el + 3 ] = max;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn triangleBounds;\r\n\r\n}\r\n\r\nexport function buildTree( geo, options ) {\r\n\r\n\tfunction triggerProgress( trianglesProcessed ) {\r\n\r\n\t\tif ( onProgress ) {\r\n\r\n\t\t\tonProgress( trianglesProcessed / totalTriangles );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// either recursively splits the given node, creating left and right subtrees for it, or makes it a leaf node,\r\n\t// recording the offset and count of its triangles and writing them into the reordered geometry index.\r\n\tfunction splitNode( node, offset, count, centroidBoundingData = null, depth = 0 ) {\r\n\r\n\t\tif ( ! reachedMaxDepth && depth >= maxDepth ) {\r\n\r\n\t\t\treachedMaxDepth = true;\r\n\t\t\tif ( verbose ) {\r\n\r\n\t\t\t\tconsole.warn( `MeshBVH: Max depth of ${ maxDepth } reached when generating BVH. Consider increasing maxDepth.` );\r\n\t\t\t\tconsole.warn( geo );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// early out if we've met our capacity\r\n\t\tif ( count <= maxLeafTris || depth >= maxDepth ) {\r\n\r\n\t\t\ttriggerProgress( offset + count );\r\n\t\t\tnode.offset = offset;\r\n\t\t\tnode.count = count;\r\n\t\t\treturn node;\r\n\r\n\t\t}\r\n\r\n\t\t// Find where to split the volume\r\n\t\tconst split = getOptimalSplit( node.boundingData, centroidBoundingData, triangleBounds, offset, count, strategy );\r\n\t\tif ( split.axis === - 1 ) {\r\n\r\n\t\t\ttriggerProgress( offset + count );\r\n\t\t\tnode.offset = offset;\r\n\t\t\tnode.count = count;\r\n\t\t\treturn node;\r\n\r\n\t\t}\r\n\r\n\t\tconst splitOffset = partition( indexArray, triangleBounds, offset, count, split );\r\n\r\n\t\t// create the two new child nodes\r\n\t\tif ( splitOffset === offset || splitOffset === offset + count ) {\r\n\r\n\t\t\ttriggerProgress( offset + count );\r\n\t\t\tnode.offset = offset;\r\n\t\t\tnode.count = count;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnode.splitAxis = split.axis;\r\n\r\n\t\t\t// create the left child and compute its bounding box\r\n\t\t\tconst left = new MeshBVHNode();\r\n\t\t\tconst lstart = offset;\r\n\t\t\tconst lcount = splitOffset - offset;\r\n\t\t\tnode.left = left;\r\n\t\t\tleft.boundingData = new Float32Array( 6 );\r\n\r\n\t\t\tgetBounds( triangleBounds, lstart, lcount, left.boundingData, cacheCentroidBoundingData );\r\n\t\t\tsplitNode( left, lstart, lcount, cacheCentroidBoundingData, depth + 1 );\r\n\r\n\t\t\t// repeat for right\r\n\t\t\tconst right = new MeshBVHNode();\r\n\t\t\tconst rstart = splitOffset;\r\n\t\t\tconst rcount = count - lcount;\r\n\t\t\tnode.right = right;\r\n\t\t\tright.boundingData = new Float32Array( 6 );\r\n\r\n\t\t\tgetBounds( triangleBounds, rstart, rcount, right.boundingData, cacheCentroidBoundingData );\r\n\t\t\tsplitNode( right, rstart, rcount, cacheCentroidBoundingData, depth + 1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tensureIndex( geo, options );\r\n\r\n\t// Compute the full bounds of the geometry at the same time as triangle bounds because\r\n\t// we'll need it for the root bounds in the case with no groups and it should be fast here.\r\n\t// We can't use the geometrying bounding box if it's available because it may be out of date.\r\n\tconst fullBounds = new Float32Array( 6 );\r\n\tconst cacheCentroidBoundingData = new Float32Array( 6 );\r\n\tconst triangleBounds = computeTriangleBounds( geo, fullBounds );\r\n\tconst indexArray = geo.index.array;\r\n\tconst maxDepth = options.maxDepth;\r\n\tconst verbose = options.verbose;\r\n\tconst maxLeafTris = options.maxLeafTris;\r\n\tconst strategy = options.strategy;\r\n\tconst onProgress = options.onProgress;\r\n\tconst totalTriangles = geo.index.count / 3;\r\n\tlet reachedMaxDepth = false;\r\n\r\n\tconst roots = [];\r\n\tconst ranges = getRootIndexRanges( geo );\r\n\r\n\tif ( ranges.length === 1 ) {\r\n\r\n\t\tconst range = ranges[ 0 ];\r\n\t\tconst root = new MeshBVHNode();\r\n\t\troot.boundingData = fullBounds;\r\n\t\tgetCentroidBounds( triangleBounds, range.offset, range.count, cacheCentroidBoundingData );\r\n\r\n\t\tsplitNode( root, range.offset, range.count, cacheCentroidBoundingData );\r\n\t\troots.push( root );\r\n\r\n\t} else {\r\n\r\n\t\tfor ( let range of ranges ) {\r\n\r\n\t\t\tconst root = new MeshBVHNode();\r\n\t\t\troot.boundingData = new Float32Array( 6 );\r\n\t\t\tgetBounds( triangleBounds, range.offset, range.count, root.boundingData, cacheCentroidBoundingData );\r\n\r\n\t\t\tsplitNode( root, range.offset, range.count, cacheCentroidBoundingData );\r\n\t\t\troots.push( root );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn roots;\r\n\r\n}\r\n\r\nexport function buildPackedTree( geo, options ) {\r\n\r\n\t// boundingData  \t\t\t\t: 6 float32\r\n\t// right / offset \t\t\t\t: 1 uint32\r\n\t// splitAxis / isLeaf + count \t: 1 uint32 / 2 uint16\r\n\tconst roots = buildTree( geo, options );\r\n\r\n\tlet float32Array;\r\n\tlet uint32Array;\r\n\tlet uint16Array;\r\n\tconst packedRoots = [];\r\n\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\r\n\tfor ( let i = 0; i < roots.length; i ++ ) {\r\n\r\n\t\tconst root = roots[ i ];\r\n\t\tlet nodeCount = countNodes( root );\r\n\r\n\t\tconst buffer = new BufferConstructor( BYTES_PER_NODE * nodeCount );\r\n\t\tfloat32Array = new Float32Array( buffer );\r\n\t\tuint32Array = new Uint32Array( buffer );\r\n\t\tuint16Array = new Uint16Array( buffer );\r\n\t\tpopulateBuffer( 0, root );\r\n\t\tpackedRoots.push( buffer );\r\n\r\n\t}\r\n\r\n\treturn packedRoots;\r\n\r\n\tfunction countNodes( node ) {\r\n\r\n\t\tif ( node.count ) {\r\n\r\n\t\t\treturn 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn 1 + countNodes( node.left ) + countNodes( node.right );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction populateBuffer( byteOffset, node ) {\r\n\r\n\t\tconst stride4Offset = byteOffset / 4;\r\n\t\tconst stride2Offset = byteOffset / 2;\r\n\t\tconst isLeaf = ! ! node.count;\r\n\t\tconst boundingData = node.boundingData;\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tfloat32Array[ stride4Offset + i ] = boundingData[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( isLeaf ) {\r\n\r\n\t\t\tconst offset = node.offset;\r\n\t\t\tconst count = node.count;\r\n\t\t\tuint32Array[ stride4Offset + 6 ] = offset;\r\n\t\t\tuint16Array[ stride2Offset + 14 ] = count;\r\n\t\t\tuint16Array[ stride2Offset + 15 ] = IS_LEAFNODE_FLAG;\r\n\t\t\treturn byteOffset + BYTES_PER_NODE;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst left = node.left;\r\n\t\t\tconst right = node.right;\r\n\t\t\tconst splitAxis = node.splitAxis;\r\n\r\n\t\t\tlet nextUnusedPointer;\r\n\t\t\tnextUnusedPointer = populateBuffer( byteOffset + BYTES_PER_NODE, left );\r\n\r\n\t\t\tif ( ( nextUnusedPointer / 4 ) > Math.pow( 2, 32 ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'MeshBVH: Cannot store child pointer greater than 32 bits.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuint32Array[ stride4Offset + 6 ] = nextUnusedPointer / 4;\r\n\t\t\tnextUnusedPointer = populateBuffer( nextUnusedPointer, right );\r\n\r\n\t\t\tuint32Array[ stride4Offset + 7 ] = splitAxis;\r\n\t\t\treturn nextUnusedPointer;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n", "export class MeshBVHNode {\r\n\r\n\tconstructor() {\r\n\r\n\t\t// internal nodes have boundingData, left, right, and splitAxis\r\n\t\t// leaf nodes have offset and count (referring to primitives in the mesh geometry)\r\n\r\n\t}\r\n\r\n}\r\n", "export function arrayToBox( nodeIndex32, array, target ) {\r\n\r\n\ttarget.min.x = array[ nodeIndex32 ];\r\n\ttarget.min.y = array[ nodeIndex32 + 1 ];\r\n\ttarget.min.z = array[ nodeIndex32 + 2 ];\r\n\r\n\ttarget.max.x = array[ nodeIndex32 + 3 ];\r\n\ttarget.max.y = array[ nodeIndex32 + 4 ];\r\n\ttarget.max.z = array[ nodeIndex32 + 5 ];\r\n\r\n\treturn target;\r\n\r\n}\r\n\r\nexport function getLongestEdgeIndex( bounds ) {\r\n\r\n\tlet splitDimIdx = - 1;\r\n\tlet splitDist = - Infinity;\r\n\r\n\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\tconst dist = bounds[ i + 3 ] - bounds[ i ];\r\n\t\tif ( dist > splitDist ) {\r\n\r\n\t\t\tsplitDist = dist;\r\n\t\t\tsplitDimIdx = i;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn splitDimIdx;\r\n\r\n}\r\n\r\n// copys bounds a into bounds b\r\nexport function copyBounds( source, target ) {\r\n\r\n\ttarget.set( source );\r\n\r\n}\r\n\r\n// sets bounds target to the union of bounds a and b\r\nexport function unionBounds( a, b, target ) {\r\n\r\n\tlet aVal, bVal;\r\n\tfor ( let d = 0; d < 3; d ++ ) {\r\n\r\n\t\tconst d3 = d + 3;\r\n\r\n\t\t// set the minimum values\r\n\t\taVal = a[ d ];\r\n\t\tbVal = b[ d ];\r\n\t\ttarget[ d ] = aVal < bVal ? aVal : bVal;\r\n\r\n\t\t// set the max values\r\n\t\taVal = a[ d3 ];\r\n\t\tbVal = b[ d3 ];\r\n\t\ttarget[ d3 ] = aVal > bVal ? aVal : bVal;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// expands the given bounds by the provided triangle bounds\r\nexport function expandByTriangleBounds( startIndex, triangleBounds, bounds ) {\r\n\r\n\tfor ( let d = 0; d < 3; d ++ ) {\r\n\r\n\t\tconst tCenter = triangleBounds[ startIndex + 2 * d ];\r\n\t\tconst tHalf = triangleBounds[ startIndex + 2 * d + 1 ];\r\n\r\n\t\tconst tMin = tCenter - tHalf;\r\n\t\tconst tMax = tCenter + tHalf;\r\n\r\n\t\tif ( tMin < bounds[ d ] ) {\r\n\r\n\t\t\tbounds[ d ] = tMin;\r\n\r\n\t\t}\r\n\r\n\t\tif ( tMax > bounds[ d + 3 ] ) {\r\n\r\n\t\t\tbounds[ d + 3 ] = tMax;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// compute bounds surface area\r\nexport function computeSurfaceArea( bounds ) {\r\n\r\n\tconst d0 = bounds[ 3 ] - bounds[ 0 ];\r\n\tconst d1 = bounds[ 4 ] - bounds[ 1 ];\r\n\tconst d2 = bounds[ 5 ] - bounds[ 2 ];\r\n\r\n\treturn 2 * ( d0 * d1 + d1 * d2 + d2 * d0 );\r\n\r\n}\r\n", "import { Box3, Vector3, Matrix4 } from 'three';\r\nimport { CONTAINED } from './Constants.js';\r\n\r\nimport { OrientedBox } from '../math/OrientedBox.js';\r\nimport { ExtendedTriangle } from '../math/ExtendedTriangle.js';\r\nimport { intersectTris, intersectClosestTri } from '../utils/GeometryRayIntersectUtilities.js';\r\nimport { setTriangle } from '../utils/TriangleUtilities.js';\r\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\r\nimport { PrimitivePool } from '../utils/PrimitivePool.js';\r\nimport { COUNT, OFFSET, LEFT_NODE, RIGHT_NODE, IS_LEAF, BOUNDING_DATA_INDEX, SPLIT_AXIS } from './nodeBufferFunctions.js';\r\n\r\nconst boundingBox = new Box3();\r\nconst boxIntersection = new Vector3();\r\nconst xyzFields = [ 'x', 'y', 'z' ];\r\n\r\nexport function raycast( nodeIndex32, geometry, side, ray, intersects ) {\r\n\r\n\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\r\n\r\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\r\n\tif ( isLeaf ) {\r\n\r\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\r\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\r\n\r\n\t\tintersectTris( geometry, side, ray, offset, count, intersects );\r\n\r\n\t} else {\r\n\r\n\t\tconst leftIndex = LEFT_NODE( nodeIndex32 );\r\n\t\tif ( intersectRay( leftIndex, float32Array, ray, boxIntersection ) ) {\r\n\r\n\t\t\traycast( leftIndex, geometry, side, ray, intersects );\r\n\r\n\t\t}\r\n\r\n\t\tconst rightIndex = RIGHT_NODE( nodeIndex32, uint32Array );\r\n\t\tif ( intersectRay( rightIndex, float32Array, ray, boxIntersection ) ) {\r\n\r\n\t\t\traycast( rightIndex, geometry, side, ray, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport function raycastFirst( nodeIndex32, geometry, side, ray ) {\r\n\r\n\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\r\n\r\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\r\n\tif ( isLeaf ) {\r\n\r\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\r\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\r\n\t\treturn intersectClosestTri( geometry, side, ray, offset, count );\r\n\r\n\t} else {\r\n\r\n\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\r\n\t\t// the ray is coming from, look for an intersection among that side of the tree first\r\n\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\r\n\t\tconst xyzAxis = xyzFields[ splitAxis ];\r\n\t\tconst rayDir = ray.direction[ xyzAxis ];\r\n\t\tconst leftToRight = rayDir >= 0;\r\n\r\n\t\t// c1 is the child to check first\r\n\t\tlet c1, c2;\r\n\t\tif ( leftToRight ) {\r\n\r\n\t\t\tc1 = LEFT_NODE( nodeIndex32 );\r\n\t\t\tc2 = RIGHT_NODE( nodeIndex32, uint32Array );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tc1 = RIGHT_NODE( nodeIndex32, uint32Array );\r\n\t\t\tc2 = LEFT_NODE( nodeIndex32 );\r\n\r\n\t\t}\r\n\r\n\t\tconst c1Intersection = intersectRay( c1, float32Array, ray, boxIntersection );\r\n\t\tconst c1Result = c1Intersection ? raycastFirst( c1, geometry, side, ray ) : null;\r\n\r\n\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\r\n\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\r\n\t\tif ( c1Result ) {\r\n\r\n\t\t\t// check if the point is within the second bounds\r\n\t\t\t// \"point\" is in the local frame of the bvh\r\n\t\t\tconst point = c1Result.point[ xyzAxis ];\r\n\t\t\tconst isOutside = leftToRight ?\r\n\t\t\t\tpoint <= float32Array[ c2 + splitAxis ] : // min bounding data\r\n\t\t\t\tpoint >= float32Array[ c2 + splitAxis + 3 ]; // max bounding data\r\n\r\n\t\t\tif ( isOutside ) {\r\n\r\n\t\t\t\treturn c1Result;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// either there was no intersection in the first node, or there could still be a closer\r\n\t\t// intersection in the second, so check the second node and then take the better of the two\r\n\t\tconst c2Intersection = intersectRay( c2, float32Array, ray, boxIntersection );\r\n\t\tconst c2Result = c2Intersection ? raycastFirst( c2, geometry, side, ray ) : null;\r\n\r\n\t\tif ( c1Result && c2Result ) {\r\n\r\n\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn c1Result || c2Result || null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const shapecast = ( function () {\r\n\r\n\tlet _box1, _box2;\r\n\tconst boxStack = [];\r\n\tconst boxPool = new PrimitivePool( () => new Box3() );\r\n\r\n\treturn function shapecast( ...args ) {\r\n\r\n\t\t_box1 = boxPool.getPrimitive();\r\n\t\t_box2 = boxPool.getPrimitive();\r\n\t\tboxStack.push( _box1, _box2 );\r\n\r\n\t\tconst result = shapecastTraverse( ...args );\r\n\r\n\t\tboxPool.releasePrimitive( _box1 );\r\n\t\tboxPool.releasePrimitive( _box2 );\r\n\t\tboxStack.pop();\r\n\t\tboxStack.pop();\r\n\r\n\t\tconst length = boxStack.length;\r\n\t\tif ( length > 0 ) {\r\n\r\n\t\t\t_box2 = boxStack[ length - 1 ];\r\n\t\t\t_box1 = boxStack[ length - 2 ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\tfunction shapecastTraverse(\r\n\t\tnodeIndex32,\r\n\t\tgeometry,\r\n\t\tintersectsBoundsFunc,\r\n\t\tintersectsRangeFunc,\r\n\t\tnodeScoreFunc = null,\r\n\t\tnodeIndexByteOffset = 0, // offset for unique node identifier\r\n\t\tdepth = 0\r\n\t) {\r\n\r\n\t\t// Define these inside the function so it has access to the local variables needed\r\n\t\t// when converting to the buffer equivalents\r\n\t\tfunction getLeftOffset( nodeIndex32 ) {\r\n\r\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2, uint16Array = _uint16Array, uint32Array = _uint32Array;\r\n\r\n\t\t\t// traverse until we find a leaf\r\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\r\n\r\n\t\t\t\tnodeIndex32 = LEFT_NODE( nodeIndex32 );\r\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn OFFSET( nodeIndex32, uint32Array );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getRightEndOffset( nodeIndex32 ) {\r\n\r\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2, uint16Array = _uint16Array, uint32Array = _uint32Array;\r\n\r\n\t\t\t// traverse until we find a leaf\r\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\r\n\r\n\t\t\t\t// adjust offset to point to the right node\r\n\t\t\t\tnodeIndex32 = RIGHT_NODE( nodeIndex32, uint32Array );\r\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// return the end offset of the triangle range\r\n\t\t\treturn OFFSET( nodeIndex32, uint32Array ) + COUNT( nodeIndex16, uint16Array );\r\n\r\n\t\t}\r\n\r\n\t\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\r\n\r\n\t\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\r\n\t\tif ( isLeaf ) {\r\n\r\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\r\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\r\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, _box1 );\r\n\t\t\treturn intersectsRangeFunc( offset, count, false, depth, nodeIndexByteOffset + nodeIndex32, _box1 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst left = LEFT_NODE( nodeIndex32 );\r\n\t\t\tconst right = RIGHT_NODE( nodeIndex32, uint32Array );\r\n\t\t\tlet c1 = left;\r\n\t\t\tlet c2 = right;\r\n\r\n\t\t\tlet score1, score2;\r\n\t\t\tlet box1, box2;\r\n\t\t\tif ( nodeScoreFunc ) {\r\n\r\n\t\t\t\tbox1 = _box1;\r\n\t\t\t\tbox2 = _box2;\r\n\r\n\t\t\t\t// bounding data is not offset\r\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\r\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\r\n\r\n\t\t\t\tscore1 = nodeScoreFunc( box1 );\r\n\t\t\t\tscore2 = nodeScoreFunc( box2 );\r\n\r\n\t\t\t\tif ( score2 < score1 ) {\r\n\r\n\t\t\t\t\tc1 = right;\r\n\t\t\t\t\tc2 = left;\r\n\r\n\t\t\t\t\tconst temp = score1;\r\n\t\t\t\t\tscore1 = score2;\r\n\t\t\t\t\tscore2 = temp;\r\n\r\n\t\t\t\t\tbox1 = box2;\r\n\t\t\t\t\t// box2 is always set before use below\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check box 1 intersection\r\n\t\t\tif ( ! box1 ) {\r\n\r\n\t\t\t\tbox1 = _box1;\r\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst isC1Leaf = IS_LEAF( c1 * 2, uint16Array );\r\n\t\t\tconst c1Intersection = intersectsBoundsFunc( box1, isC1Leaf, score1, depth + 1, nodeIndexByteOffset + c1 );\r\n\r\n\t\t\tlet c1StopTraversal;\r\n\t\t\tif ( c1Intersection === CONTAINED ) {\r\n\r\n\t\t\t\tconst offset = getLeftOffset( c1 );\r\n\t\t\t\tconst end = getRightEndOffset( c1 );\r\n\t\t\t\tconst count = end - offset;\r\n\r\n\t\t\t\tc1StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c1, box1 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tc1StopTraversal =\r\n\t\t\t\t\tc1Intersection &&\r\n\t\t\t\t\tshapecastTraverse(\r\n\t\t\t\t\t\tc1,\r\n\t\t\t\t\t\tgeometry,\r\n\t\t\t\t\t\tintersectsBoundsFunc,\r\n\t\t\t\t\t\tintersectsRangeFunc,\r\n\t\t\t\t\t\tnodeScoreFunc,\r\n\t\t\t\t\t\tnodeIndexByteOffset,\r\n\t\t\t\t\t\tdepth + 1\r\n\t\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( c1StopTraversal ) return true;\r\n\r\n\t\t\t// Check box 2 intersection\r\n\t\t\t// cached box2 will have been overwritten by previous traversal\r\n\t\t\tbox2 = _box2;\r\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\r\n\r\n\t\t\tconst isC2Leaf = IS_LEAF( c2 * 2, uint16Array );\r\n\t\t\tconst c2Intersection = intersectsBoundsFunc( box2, isC2Leaf, score2, depth + 1, nodeIndexByteOffset + c2 );\r\n\r\n\t\t\tlet c2StopTraversal;\r\n\t\t\tif ( c2Intersection === CONTAINED ) {\r\n\r\n\t\t\t\tconst offset = getLeftOffset( c2 );\r\n\t\t\t\tconst end = getRightEndOffset( c2 );\r\n\t\t\t\tconst count = end - offset;\r\n\r\n\t\t\t\tc2StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c2, box2 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tc2StopTraversal =\r\n\t\t\t\t\tc2Intersection &&\r\n\t\t\t\t\tshapecastTraverse(\r\n\t\t\t\t\t\tc2,\r\n\t\t\t\t\t\tgeometry,\r\n\t\t\t\t\t\tintersectsBoundsFunc,\r\n\t\t\t\t\t\tintersectsRangeFunc,\r\n\t\t\t\t\t\tnodeScoreFunc,\r\n\t\t\t\t\t\tnodeIndexByteOffset,\r\n\t\t\t\t\t\tdepth + 1\r\n\t\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( c2StopTraversal ) return true;\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} )();\r\n\r\nexport const intersectsGeometry = ( function () {\r\n\r\n\tconst triangle = new ExtendedTriangle();\r\n\tconst triangle2 = new ExtendedTriangle();\r\n\tconst invertedMat = new Matrix4();\r\n\r\n\tconst obb = new OrientedBox();\r\n\tconst obb2 = new OrientedBox();\r\n\r\n\treturn function intersectsGeometry( nodeIndex32, geometry, otherGeometry, geometryToBvh, cachedObb = null ) {\r\n\r\n\t\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\r\n\r\n\t\tif ( cachedObb === null ) {\r\n\r\n\t\t\tif ( ! otherGeometry.boundingBox ) {\r\n\r\n\t\t\t\totherGeometry.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\r\n\t\t\tcachedObb = obb;\r\n\r\n\t\t}\r\n\r\n\t\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\r\n\t\tif ( isLeaf ) {\r\n\r\n\t\t\tconst thisGeometry = geometry;\r\n\t\t\tconst thisIndex = thisGeometry.index;\r\n\t\t\tconst thisPos = thisGeometry.attributes.position;\r\n\r\n\t\t\tconst index = otherGeometry.index;\r\n\t\t\tconst pos = otherGeometry.attributes.position;\r\n\r\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\r\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\r\n\r\n\t\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\r\n\t\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\r\n\t\t\t// here.\r\n\t\t\tinvertedMat.copy( geometryToBvh ).invert();\r\n\r\n\t\t\tif ( otherGeometry.boundsTree ) {\r\n\r\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, obb2 );\r\n\t\t\t\tobb2.matrix.copy( invertedMat );\r\n\t\t\t\tobb2.needsUpdate = true;\r\n\r\n\t\t\t\tconst res = otherGeometry.boundsTree.shapecast( {\r\n\r\n\t\t\t\t\tintersectsBounds: box => obb2.intersectsBox( box ),\r\n\r\n\t\t\t\t\tintersectsTriangle: tri => {\r\n\r\n\t\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\t\ttri.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\r\n\t\t\t\t\t\t\tsetTriangle( triangle2, i, thisIndex, thisPos );\r\n\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\r\n\t\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\r\n\r\n\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\treturn res;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( let i = offset * 3, l = ( count + offset * 3 ); i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\r\n\t\t\t\t\tsetTriangle( triangle, i, thisIndex, thisPos );\r\n\t\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\r\n\t\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\r\n\t\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\r\n\t\t\t\t\ttriangle.needsUpdate = true;\r\n\r\n\t\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\r\n\r\n\t\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\r\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\r\n\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst left = nodeIndex32 + 8;\r\n\t\t\tconst right = uint32Array[ nodeIndex32 + 6 ];\r\n\r\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( left ), float32Array, boundingBox );\r\n\t\t\tconst leftIntersection =\r\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\r\n\t\t\t\tintersectsGeometry( left, geometry, otherGeometry, geometryToBvh, cachedObb );\r\n\r\n\t\t\tif ( leftIntersection ) return true;\r\n\r\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( right ), float32Array, boundingBox );\r\n\t\t\tconst rightIntersection =\r\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\r\n\t\t\t\tintersectsGeometry( right, geometry, otherGeometry, geometryToBvh, cachedObb );\r\n\r\n\t\t\tif ( rightIntersection ) return true;\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nfunction intersectRay( nodeIndex32, array, ray, target ) {\r\n\r\n\tarrayToBox( nodeIndex32, array, boundingBox );\r\n\treturn ray.intersectBox( boundingBox, target );\r\n\r\n}\r\n\r\nconst bufferStack = [];\r\nlet _prevBuffer;\r\nlet _float32Array;\r\nlet _uint16Array;\r\nlet _uint32Array;\r\nexport function setBuffer( buffer ) {\r\n\r\n\tif ( _prevBuffer ) {\r\n\r\n\t\tbufferStack.push( _prevBuffer );\r\n\r\n\t}\r\n\r\n\t_prevBuffer = buffer;\r\n\t_float32Array = new Float32Array( buffer );\r\n\t_uint16Array = new Uint16Array( buffer );\r\n\t_uint32Array = new Uint32Array( buffer );\r\n\r\n}\r\n\r\nexport function clearBuffer() {\r\n\r\n\t_prevBuffer = null;\r\n\t_float32Array = null;\r\n\t_uint16Array = null;\r\n\t_uint32Array = null;\r\n\r\n\tif ( bufferStack.length ) {\r\n\r\n\t\tsetBuffer( bufferStack.pop() );\r\n\r\n\t}\r\n\r\n}\r\n", "import { Box3, Vector3, Matrix4, Line3 } from 'three';\r\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\r\nimport { ExtendedTriangle } from './ExtendedTriangle.js';\r\nimport { closestPointsSegmentToSegment } from './MathUtilities.js';\r\n\r\nexport class OrientedBox extends Box3 {\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\r\n\t\tthis.isOrientedBox = true;\r\n\t\tthis.matrix = new Matrix4();\r\n\t\tthis.invMatrix = new Matrix4();\r\n\t\tthis.points = new Array( 8 ).fill().map( () => new Vector3() );\r\n\t\tthis.satAxes = new Array( 3 ).fill().map( () => new Vector3() );\r\n\t\tthis.satBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\r\n\t\tthis.alignedSatBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t}\r\n\r\n\tset( min, max, matrix ) {\r\n\r\n\t\tsuper.set( min, max );\r\n\t\tthis.matrix.copy( matrix );\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tsuper.copy( other );\r\n\t\tthis.matrix.copy( other.matrix );\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nOrientedBox.prototype.update = ( function () {\r\n\r\n\treturn function update() {\r\n\r\n\t\tconst matrix = this.matrix;\r\n\t\tconst min = this.min;\r\n\t\tconst max = this.max;\r\n\r\n\t\tconst points = this.points;\r\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\r\n\r\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\r\n\r\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\r\n\r\n\t\t\t\t\tconst i = ( ( 1 << 0 ) * x ) | ( ( 1 << 1 ) * y ) | ( ( 1 << 2 ) * z );\r\n\t\t\t\t\tconst v = points[ i ];\r\n\t\t\t\t\tv.x = x ? max.x : min.x;\r\n\t\t\t\t\tv.y = y ? max.y : min.y;\r\n\t\t\t\t\tv.z = z ? max.z : min.z;\r\n\r\n\t\t\t\t\tv.applyMatrix4( matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst satBounds = this.satBounds;\r\n\t\tconst satAxes = this.satAxes;\r\n\t\tconst minVec = points[ 0 ];\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst axis = satAxes[ i ];\r\n\t\t\tconst sb = satBounds[ i ];\r\n\t\t\tconst index = 1 << i;\r\n\t\t\tconst pi = points[ index ];\r\n\r\n\t\t\taxis.subVectors( minVec, pi );\r\n\t\t\tsb.setFromPoints( axis, points );\r\n\r\n\t\t}\r\n\r\n\t\tconst alignedSatBounds = this.alignedSatBounds;\r\n\t\talignedSatBounds[ 0 ].setFromPointsField( points, 'x' );\r\n\t\talignedSatBounds[ 1 ].setFromPointsField( points, 'y' );\r\n\t\talignedSatBounds[ 2 ].setFromPointsField( points, 'z' );\r\n\r\n\t\tthis.invMatrix.copy( this.matrix ).invert();\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.intersectsBox = ( function () {\r\n\r\n\tconst aabbBounds = new SeparatingAxisBounds();\r\n\treturn function intersectsBox( box ) {\r\n\r\n\t\t// TODO: should this be doing SAT against the AABB?\r\n\t\tif ( this.needsUpdate ) {\r\n\r\n\t\t\tthis.update();\r\n\r\n\t\t}\r\n\r\n\t\tconst min = box.min;\r\n\t\tconst max = box.max;\r\n\t\tconst satBounds = this.satBounds;\r\n\t\tconst satAxes = this.satAxes;\r\n\t\tconst alignedSatBounds = this.alignedSatBounds;\r\n\r\n\t\taabbBounds.min = min.x;\r\n\t\taabbBounds.max = max.x;\r\n\t\tif ( alignedSatBounds[ 0 ].isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\taabbBounds.min = min.y;\r\n\t\taabbBounds.max = max.y;\r\n\t\tif ( alignedSatBounds[ 1 ].isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\taabbBounds.min = min.z;\r\n\t\taabbBounds.max = max.z;\r\n\t\tif ( alignedSatBounds[ 2 ].isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst axis = satAxes[ i ];\r\n\t\t\tconst sb = satBounds[ i ];\r\n\t\t\taabbBounds.setFromBox( axis, box );\r\n\t\t\tif ( sb.isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.intersectsTriangle = ( function () {\r\n\r\n\tconst saTri = new ExtendedTriangle();\r\n\tconst pointsArr = new Array( 3 );\r\n\tconst cachedSatBounds = new SeparatingAxisBounds();\r\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\r\n\tconst cachedAxis = new Vector3();\r\n\treturn function intersectsTriangle( triangle ) {\r\n\r\n\t\tif ( this.needsUpdate ) {\r\n\r\n\t\t\tthis.update();\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! triangle.isExtendedTriangle ) {\r\n\r\n\t\t\tsaTri.copy( triangle );\r\n\t\t\tsaTri.update();\r\n\t\t\ttriangle = saTri;\r\n\r\n\t\t} else if ( triangle.needsUpdate ) {\r\n\r\n\t\t\ttriangle.update();\r\n\r\n\t\t}\r\n\r\n\t\tconst satBounds = this.satBounds;\r\n\t\tconst satAxes = this.satAxes;\r\n\r\n\t\tpointsArr[ 0 ] = triangle.a;\r\n\t\tpointsArr[ 1 ] = triangle.b;\r\n\t\tpointsArr[ 2 ] = triangle.c;\r\n\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = satBounds[ i ];\r\n\t\t\tconst sa = satAxes[ i ];\r\n\t\t\tcachedSatBounds.setFromPoints( sa, pointsArr );\r\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\tconst triSatBounds = triangle.satBounds;\r\n\t\tconst triSatAxes = triangle.satAxes;\r\n\t\tconst points = this.points;\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = triSatBounds[ i ];\r\n\t\t\tconst sa = triSatAxes[ i ];\r\n\t\t\tcachedSatBounds.setFromPoints( sa, points );\r\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\t// check crossed axes\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sa1 = satAxes[ i ];\r\n\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\r\n\r\n\t\t\t\tconst sa2 = triSatAxes[ i2 ];\r\n\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\r\n\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, pointsArr );\r\n\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, points );\r\n\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.closestPointToPoint = ( function () {\r\n\r\n\treturn function closestPointToPoint( point, target1 ) {\r\n\r\n\t\tif ( this.needsUpdate ) {\r\n\r\n\t\t\tthis.update();\r\n\r\n\t\t}\r\n\r\n\t\ttarget1\r\n\t\t\t.copy( point )\r\n\t\t\t.applyMatrix4( this.invMatrix )\r\n\t\t\t.clamp( this.min, this.max )\r\n\t\t\t.applyMatrix4( this.matrix );\r\n\r\n\t\treturn target1;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.distanceToPoint = ( function () {\r\n\r\n\tconst target = new Vector3();\r\n\treturn function distanceToPoint( point ) {\r\n\r\n\t\tthis.closestPointToPoint( point, target );\r\n\t\treturn point.distanceTo( target );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.distanceToBox = ( function () {\r\n\r\n\tconst xyzFields = [ 'x', 'y', 'z' ];\r\n\tconst segments1 = new Array( 12 ).fill().map( () => new Line3() );\r\n\tconst segments2 = new Array( 12 ).fill().map( () => new Line3() );\r\n\r\n\tconst point1 = new Vector3();\r\n\tconst point2 = new Vector3();\r\n\r\n\t// early out if we find a value below threshold\r\n\treturn function distanceToBox( box, threshold = 0, target1 = null, target2 = null ) {\r\n\r\n\t\tif ( this.needsUpdate ) {\r\n\r\n\t\t\tthis.update();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.intersectsBox( box ) ) {\r\n\r\n\t\t\tif ( target1 || target2 ) {\r\n\r\n\t\t\t\tbox.getCenter( point2 );\r\n\t\t\t\tthis.closestPointToPoint( point2, point1 );\r\n\t\t\t\tbox.closestPointToPoint( point1, point2 );\r\n\r\n\t\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\tconst threshold2 = threshold * threshold;\r\n\t\tconst min = box.min;\r\n\t\tconst max = box.max;\r\n\t\tconst points = this.points;\r\n\r\n\r\n\t\t// iterate over every edge and compare distances\r\n\t\tlet closestDistanceSq = Infinity;\r\n\r\n\t\t// check over all these points\r\n\t\tfor ( let i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tconst p = points[ i ];\r\n\t\t\tpoint2.copy( p ).clamp( min, max );\r\n\r\n\t\t\tconst dist = p.distanceToSquared( point2 );\r\n\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\tif ( target1 ) target1.copy( p );\r\n\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate and check all line segment distances\r\n\t\tlet count = 0;\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tfor ( let i1 = 0; i1 <= 1; i1 ++ ) {\r\n\r\n\t\t\t\tfor ( let i2 = 0; i2 <= 1; i2 ++ ) {\r\n\r\n\t\t\t\t\tconst nextIndex = ( i + 1 ) % 3;\r\n\t\t\t\t\tconst nextIndex2 = ( i + 2 ) % 3;\r\n\r\n\t\t\t\t\t// get obb line segments\r\n\t\t\t\t\tconst index = i1 << nextIndex | i2 << nextIndex2;\r\n\t\t\t\t\tconst index2 = 1 << i | i1 << nextIndex | i2 << nextIndex2;\r\n\t\t\t\t\tconst p1 = points[ index ];\r\n\t\t\t\t\tconst p2 = points[ index2 ];\r\n\t\t\t\t\tconst line1 = segments1[ count ];\r\n\t\t\t\t\tline1.set( p1, p2 );\r\n\r\n\r\n\t\t\t\t\t// get aabb line segments\r\n\t\t\t\t\tconst f1 = xyzFields[ i ];\r\n\t\t\t\t\tconst f2 = xyzFields[ nextIndex ];\r\n\t\t\t\t\tconst f3 = xyzFields[ nextIndex2 ];\r\n\t\t\t\t\tconst line2 = segments2[ count ];\r\n\t\t\t\t\tconst start = line2.start;\r\n\t\t\t\t\tconst end = line2.end;\r\n\r\n\t\t\t\t\tstart[ f1 ] = min[ f1 ];\r\n\t\t\t\t\tstart[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\r\n\t\t\t\t\tstart[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\r\n\r\n\t\t\t\t\tend[ f1 ] = max[ f1 ];\r\n\t\t\t\t\tend[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\r\n\t\t\t\t\tend[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\r\n\r\n\t\t\t\t\tcount ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// check all the other boxes point\r\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\r\n\r\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\r\n\r\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\r\n\r\n\t\t\t\t\tpoint2.x = x ? max.x : min.x;\r\n\t\t\t\t\tpoint2.y = y ? max.y : min.y;\r\n\t\t\t\t\tpoint2.z = z ? max.z : min.z;\r\n\r\n\t\t\t\t\tthis.closestPointToPoint( point2, point1 );\r\n\t\t\t\t\tconst dist = point2.distanceToSquared( point1 );\r\n\t\t\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < 12; i ++ ) {\r\n\r\n\t\t\tconst l1 = segments1[ i ];\r\n\t\t\tfor ( let i2 = 0; i2 < 12; i2 ++ ) {\r\n\r\n\t\t\t\tconst l2 = segments2[ i2 ];\r\n\t\t\t\tclosestPointsSegmentToSegment( l1, l2, point1, point2 );\r\n\t\t\t\tconst dist = point1.distanceToSquared( point2 );\r\n\t\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.sqrt( closestDistanceSq );\r\n\r\n\t};\r\n\r\n} )();\r\n", "import { Vector3 } from 'three';\r\n\r\nexport class SeparatingAxisBounds {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.min = Infinity;\r\n\t\tthis.max = - Infinity;\r\n\r\n\t}\r\n\r\n\tsetFromPointsField( points, field ) {\r\n\r\n\t\tlet min = Infinity;\r\n\t\tlet max = - Infinity;\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst p = points[ i ];\r\n\t\t\tconst val = p[ field ];\r\n\t\t\tmin = val < min ? val : min;\r\n\t\t\tmax = val > max ? val : max;\r\n\r\n\t\t}\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( axis, points ) {\r\n\r\n\t\tlet min = Infinity;\r\n\t\tlet max = - Infinity;\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst p = points[ i ];\r\n\t\t\tconst val = axis.dot( p );\r\n\t\t\tmin = val < min ? val : min;\r\n\t\t\tmax = val > max ? val : max;\r\n\r\n\t\t}\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tisSeparated( other ) {\r\n\r\n\t\treturn this.min > other.max || other.min > this.max;\r\n\r\n\t}\r\n\r\n}\r\n\r\nSeparatingAxisBounds.prototype.setFromBox = ( function () {\r\n\r\n\tconst p = new Vector3();\r\n\treturn function setFromBox( axis, box ) {\r\n\r\n\t\tconst boxMin = box.min;\r\n\t\tconst boxMax = box.max;\r\n\t\tlet min = Infinity;\r\n\t\tlet max = - Infinity;\r\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\r\n\r\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\r\n\r\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\r\n\r\n\t\t\t\t\tp.x = boxMin.x * x + boxMax.x * ( 1 - x );\r\n\t\t\t\t\tp.y = boxMin.y * y + boxMax.y * ( 1 - y );\r\n\t\t\t\t\tp.z = boxMin.z * z + boxMax.z * ( 1 - z );\r\n\r\n\t\t\t\t\tconst val = axis.dot( p );\r\n\t\t\t\t\tmin = Math.min( val, min );\r\n\t\t\t\t\tmax = Math.max( val, max );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nexport const areIntersecting = ( function () {\r\n\r\n\tconst cacheSatBounds = new SeparatingAxisBounds();\r\n\treturn function areIntersecting( shape1, shape2 ) {\r\n\r\n\t\tconst points1 = shape1.points;\r\n\t\tconst satAxes1 = shape1.satAxes;\r\n\t\tconst satBounds1 = shape1.satBounds;\r\n\r\n\t\tconst points2 = shape2.points;\r\n\t\tconst satAxes2 = shape2.satAxes;\r\n\t\tconst satBounds2 = shape2.satBounds;\r\n\r\n\t\t// check axes of the first shape\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = satBounds1[ i ];\r\n\t\t\tconst sa = satAxes1[ i ];\r\n\t\t\tcacheSatBounds.setFromPoints( sa, points2 );\r\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\t// check axes of the second shape\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = satBounds2[ i ];\r\n\t\t\tconst sa = satAxes2[ i ];\r\n\t\t\tcacheSatBounds.setFromPoints( sa, points1 );\r\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n", "import { Triangle, Vector3, Line3, Sphere, Plane } from 'three';\r\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\r\nimport { closestPointsSegmentToSegment, sphereIntersectTriangle } from './MathUtilities.js';\r\n\r\nexport class ExtendedTriangle extends Triangle {\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\r\n\t\tthis.isExtendedTriangle = true;\r\n\t\tthis.satAxes = new Array( 4 ).fill().map( () => new Vector3() );\r\n\t\tthis.satBounds = new Array( 4 ).fill().map( () => new SeparatingAxisBounds() );\r\n\t\tthis.points = [ this.a, this.b, this.c ];\r\n\t\tthis.sphere = new Sphere();\r\n\t\tthis.plane = new Plane();\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn sphereIntersectTriangle( sphere, this );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst a = this.a;\r\n\t\tconst b = this.b;\r\n\t\tconst c = this.c;\r\n\t\tconst points = this.points;\r\n\r\n\t\tconst satAxes = this.satAxes;\r\n\t\tconst satBounds = this.satBounds;\r\n\r\n\t\tconst axis0 = satAxes[ 0 ];\r\n\t\tconst sab0 = satBounds[ 0 ];\r\n\t\tthis.getNormal( axis0 );\r\n\t\tsab0.setFromPoints( axis0, points );\r\n\r\n\t\tconst axis1 = satAxes[ 1 ];\r\n\t\tconst sab1 = satBounds[ 1 ];\r\n\t\taxis1.subVectors( a, b );\r\n\t\tsab1.setFromPoints( axis1, points );\r\n\r\n\t\tconst axis2 = satAxes[ 2 ];\r\n\t\tconst sab2 = satBounds[ 2 ];\r\n\t\taxis2.subVectors( b, c );\r\n\t\tsab2.setFromPoints( axis2, points );\r\n\r\n\t\tconst axis3 = satAxes[ 3 ];\r\n\t\tconst sab3 = satBounds[ 3 ];\r\n\t\taxis3.subVectors( c, a );\r\n\t\tsab3.setFromPoints( axis3, points );\r\n\r\n\t\tthis.sphere.setFromPoints( this.points );\r\n\t\tthis.plane.setFromNormalAndCoplanarPoint( axis0, a );\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t}\r\n\r\n}\r\n\r\nExtendedTriangle.prototype.closestPointToSegment = ( function () {\r\n\r\n\tconst point1 = new Vector3();\r\n\tconst point2 = new Vector3();\r\n\tconst edge = new Line3();\r\n\r\n\treturn function distanceToSegment( segment, target1 = null, target2 = null ) {\r\n\r\n\t\tconst { start, end } = segment;\r\n\t\tconst points = this.points;\r\n\t\tlet distSq;\r\n\t\tlet closestDistanceSq = Infinity;\r\n\r\n\t\t// check the triangle edges\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst nexti = ( i + 1 ) % 3;\r\n\t\t\tedge.start.copy( points[ i ] );\r\n\t\t\tedge.end.copy( points[ nexti ] );\r\n\r\n\t\t\tclosestPointsSegmentToSegment( edge, segment, point1, point2 );\r\n\r\n\t\t\tdistSq = point1.distanceToSquared( point2 );\r\n\t\t\tif ( distSq < closestDistanceSq ) {\r\n\r\n\t\t\t\tclosestDistanceSq = distSq;\r\n\t\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// check end points\r\n\t\tthis.closestPointToPoint( start, point1 );\r\n\t\tdistSq = start.distanceToSquared( point1 );\r\n\t\tif ( distSq < closestDistanceSq ) {\r\n\r\n\t\t\tclosestDistanceSq = distSq;\r\n\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\tif ( target2 ) target2.copy( start );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closestPointToPoint( end, point1 );\r\n\t\tdistSq = end.distanceToSquared( point1 );\r\n\t\tif ( distSq < closestDistanceSq ) {\r\n\r\n\t\t\tclosestDistanceSq = distSq;\r\n\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\tif ( target2 ) target2.copy( end );\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.sqrt( closestDistanceSq );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nExtendedTriangle.prototype.intersectsTriangle = ( function () {\r\n\r\n\tconst saTri2 = new ExtendedTriangle();\r\n\tconst arr1 = new Array( 3 );\r\n\tconst arr2 = new Array( 3 );\r\n\tconst cachedSatBounds = new SeparatingAxisBounds();\r\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\r\n\tconst cachedAxis = new Vector3();\r\n\tconst dir1 = new Vector3();\r\n\tconst dir2 = new Vector3();\r\n\tconst tempDir = new Vector3();\r\n\tconst edge = new Line3();\r\n\tconst edge1 = new Line3();\r\n\tconst edge2 = new Line3();\r\n\r\n\t// TODO: If the triangles are coplanar and intersecting the target is nonsensical. It should at least\r\n\t// be a line contained by both triangles if not a different special case somehow represented in the return result.\r\n\treturn function intersectsTriangle( other, target = null ) {\r\n\r\n\t\tif ( this.needsUpdate ) {\r\n\r\n\t\t\tthis.update();\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! other.isExtendedTriangle ) {\r\n\r\n\t\t\tsaTri2.copy( other );\r\n\t\t\tsaTri2.update();\r\n\t\t\tother = saTri2;\r\n\r\n\t\t} else if ( other.needsUpdate ) {\r\n\r\n\t\t\tother.update();\r\n\r\n\t\t}\r\n\r\n\t\tconst plane1 = this.plane;\r\n\t\tconst plane2 = other.plane;\r\n\r\n\t\tif ( Math.abs( plane1.normal.dot( plane2.normal ) ) > 1.0 - 1e-10 ) {\r\n\r\n\t\t\t// perform separating axis intersection test only for coplanar triangles\r\n\t\t\tconst satBounds1 = this.satBounds;\r\n\t\t\tconst satAxes1 = this.satAxes;\r\n\t\t\tarr2[ 0 ] = other.a;\r\n\t\t\tarr2[ 1 ] = other.b;\r\n\t\t\tarr2[ 2 ] = other.c;\r\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\tconst sb = satBounds1[ i ];\r\n\t\t\t\tconst sa = satAxes1[ i ];\r\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr2 );\r\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst satBounds2 = other.satBounds;\r\n\t\t\tconst satAxes2 = other.satAxes;\r\n\t\t\tarr1[ 0 ] = this.a;\r\n\t\t\tarr1[ 1 ] = this.b;\r\n\t\t\tarr1[ 2 ] = this.c;\r\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\tconst sb = satBounds2[ i ];\r\n\t\t\t\tconst sa = satAxes2[ i ];\r\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr1 );\r\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// check crossed axes\r\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\tconst sa1 = satAxes1[ i ];\r\n\t\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\r\n\r\n\t\t\t\t\tconst sa2 = satAxes2[ i2 ];\r\n\t\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\r\n\t\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, arr1 );\r\n\t\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, arr2 );\r\n\t\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( target ) {\r\n\r\n\t\t\t\t// TODO find two points that intersect on the edges and make that the result\r\n\t\t\t\tconsole.warn( 'ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.' );\r\n\r\n\t\t\t\ttarget.start.set( 0, 0, 0 );\r\n\t\t\t\ttarget.end.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// find the edge that intersects the other triangle plane\r\n\t\t\tconst points1 = this.points;\r\n\t\t\tlet found1 = false;\r\n\t\t\tlet count1 = 0;\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tconst p1 = points1[ i ];\r\n\t\t\t\tconst p2 = points1[ ( i + 1 ) % 3 ];\r\n\r\n\t\t\t\tedge.start.copy( p1 );\r\n\t\t\t\tedge.end.copy( p2 );\r\n\t\t\t\tedge.delta( dir1 );\r\n\t\t\t\tif ( plane2.normal.dot( dir1 ) === 0 && plane2.distanceToPoint( edge.start ) === 0 ) {\r\n\r\n\t\t\t\t\t// if the edge lies on the plane then take the line\r\n\t\t\t\t\tedge1.copy( edge );\r\n\t\t\t\t\tcount1 = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t} else if ( plane2.intersectLine( edge, found1 ? edge1.start : edge1.end ) ) {\r\n\r\n\t\t\t\t\tcount1 ++;\r\n\t\t\t\t\tif ( found1 ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfound1 = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( count1 !== 2 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// find the other triangles edge that intersects this plane\r\n\t\t\tconst points2 = other.points;\r\n\t\t\tlet found2 = false;\r\n\t\t\tlet count2 = 0;\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tconst p1 = points2[ i ];\r\n\t\t\t\tconst p2 = points2[ ( i + 1 ) % 3 ];\r\n\r\n\t\t\t\tedge.start.copy( p1 );\r\n\t\t\t\tedge.end.copy( p2 );\r\n\t\t\t\tedge.delta( dir2 );\r\n\t\t\t\tif ( plane1.normal.dot( dir2 ) === 0 && plane1.distanceToPoint( edge.start ) === 0 ) {\r\n\r\n\t\t\t\t\t// if the edge lies on the plane then take the line\r\n\t\t\t\t\tedge2.copy( edge );\r\n\t\t\t\t\tcount2 = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t} else if ( plane1.intersectLine( edge, found2 ? edge2.start : edge2.end ) ) {\r\n\r\n\t\t\t\t\tcount2 ++;\r\n\t\t\t\t\tif ( found2 ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfound2 = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( count2 !== 2 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// find swap the second edge so both lines are running the same direction\r\n\t\t\tedge1.delta( dir1 );\r\n\t\t\tedge2.delta( dir2 );\r\n\r\n\t\t\tif ( dir1.dot( dir2 ) < 0 ) {\r\n\r\n\t\t\t\tlet tmp = edge2.start;\r\n\t\t\t\tedge2.start = edge2.end;\r\n\t\t\t\tedge2.end = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// check if the edges are overlapping\r\n\t\t\tconst s1 = edge1.start.dot( dir1 );\r\n\t\t\tconst e1 = edge1.end.dot( dir1 );\r\n\t\t\tconst s2 = edge2.start.dot( dir1 );\r\n\t\t\tconst e2 = edge2.end.dot( dir1 );\r\n\t\t\tconst separated1 = e1 < s2;\r\n\t\t\tconst separated2 = s1 < e2;\r\n\t\t\tif ( s1 !== e2 && s2 !== e1 && separated1 === separated2 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// assign the target output\r\n\t\t\tif ( target ) {\r\n\r\n\t\t\t\ttempDir.subVectors( edge1.start, edge2.start );\r\n\t\t\t\tif ( tempDir.dot( dir1 ) > 0 ) {\r\n\r\n\t\t\t\t\ttarget.start.copy( edge1.start );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttarget.start.copy( edge2.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDir.subVectors( edge1.end, edge2.end );\r\n\t\t\t\tif ( tempDir.dot( dir1 ) < 0 ) {\r\n\r\n\t\t\t\t\ttarget.end.copy( edge1.end );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttarget.end.copy( edge2.end );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n\r\nExtendedTriangle.prototype.distanceToPoint = ( function () {\r\n\r\n\tconst target = new Vector3();\r\n\treturn function distanceToPoint( point ) {\r\n\r\n\t\tthis.closestPointToPoint( point, target );\r\n\t\treturn point.distanceTo( target );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n\r\nExtendedTriangle.prototype.distanceToTriangle = ( function () {\r\n\r\n\tconst point = new Vector3();\r\n\tconst point2 = new Vector3();\r\n\tconst cornerFields = [ 'a', 'b', 'c' ];\r\n\tconst line1 = new Line3();\r\n\tconst line2 = new Line3();\r\n\r\n\treturn function distanceToTriangle( other, target1 = null, target2 = null ) {\r\n\r\n\t\tconst lineTarget = target1 || target2 ? line1 : null;\r\n\t\tif ( this.intersectsTriangle( other, lineTarget ) ) {\r\n\r\n\t\t\tif ( target1 || target2 ) {\r\n\r\n\t\t\t\tif ( target1 ) lineTarget.getCenter( target1 );\r\n\t\t\t\tif ( target2 ) lineTarget.getCenter( target2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\tlet closestDistanceSq = Infinity;\r\n\r\n\t\t// check all point distances\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tlet dist;\r\n\t\t\tconst field = cornerFields[ i ];\r\n\t\t\tconst otherVec = other[ field ];\r\n\t\t\tthis.closestPointToPoint( otherVec, point );\r\n\r\n\t\t\tdist = otherVec.distanceToSquared( point );\r\n\r\n\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\tif ( target1 ) target1.copy( point );\r\n\t\t\t\tif ( target2 ) target2.copy( otherVec );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst thisVec = this[ field ];\r\n\t\t\tother.closestPointToPoint( thisVec, point );\r\n\r\n\t\t\tdist = thisVec.distanceToSquared( point );\r\n\r\n\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\tif ( target1 ) target1.copy( thisVec );\r\n\t\t\t\tif ( target2 ) target2.copy( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst f11 = cornerFields[ i ];\r\n\t\t\tconst f12 = cornerFields[ ( i + 1 ) % 3 ];\r\n\t\t\tline1.set( this[ f11 ], this[ f12 ] );\r\n\t\t\tfor ( let i2 = 0; i2 < 3; i2 ++ ) {\r\n\r\n\t\t\t\tconst f21 = cornerFields[ i2 ];\r\n\t\t\t\tconst f22 = cornerFields[ ( i2 + 1 ) % 3 ];\r\n\t\t\t\tline2.set( other[ f21 ], other[ f22 ] );\r\n\r\n\t\t\t\tclosestPointsSegmentToSegment( line1, line2, point, point2 );\r\n\r\n\t\t\t\tconst dist = point.distanceToSquared( point2 );\r\n\t\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\t\tif ( target1 ) target1.copy( point );\r\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.sqrt( closestDistanceSq );\r\n\r\n\t};\r\n\r\n} )();\r\n", "import { Vector3, Vector2, Plane, Line3 } from 'three';\r\n\r\nexport const closestPointLineToLine = ( function () {\r\n\r\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/Line.cpp#L56\r\n\tconst dir1 = new Vector3();\r\n\tconst dir2 = new Vector3();\r\n\tconst v02 = new Vector3();\r\n\treturn function closestPointLineToLine( l1, l2, result ) {\r\n\r\n\t\tconst v0 = l1.start;\r\n\t\tconst v10 = dir1;\r\n\t\tconst v2 = l2.start;\r\n\t\tconst v32 = dir2;\r\n\r\n\t\tv02.subVectors( v0, v2 );\r\n\t\tdir1.subVectors( l1.end, l2.start );\r\n\t\tdir2.subVectors( l2.end, l2.start );\r\n\r\n\t\t// float d0232 = v02.Dot(v32);\r\n\t\tconst d0232 = v02.dot( v32 );\r\n\r\n\t\t// float d3210 = v32.Dot(v10);\r\n\t\tconst d3210 = v32.dot( v10 );\r\n\r\n\t\t// float d3232 = v32.Dot(v32);\r\n\t\tconst d3232 = v32.dot( v32 );\r\n\r\n\t\t// float d0210 = v02.Dot(v10);\r\n\t\tconst d0210 = v02.dot( v10 );\r\n\r\n\t\t// float d1010 = v10.Dot(v10);\r\n\t\tconst d1010 = v10.dot( v10 );\r\n\r\n\t\t// float denom = d1010*d3232 - d3210*d3210;\r\n\t\tconst denom = d1010 * d3232 - d3210 * d3210;\r\n\r\n\t\tlet d, d2;\r\n\t\tif ( denom !== 0 ) {\r\n\r\n\t\t\td = ( d0232 * d3210 - d0210 * d3232 ) / denom;\r\n\r\n\t\t} else {\r\n\r\n\t\t\td = 0;\r\n\r\n\t\t}\r\n\r\n\t\td2 = ( d0232 + d * d3210 ) / d3232;\r\n\r\n\t\tresult.x = d;\r\n\t\tresult.y = d2;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nexport const closestPointsSegmentToSegment = ( function () {\r\n\r\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/LineSegment.cpp#L187\r\n\tconst paramResult = new Vector2();\r\n\tconst temp1 = new Vector3();\r\n\tconst temp2 = new Vector3();\r\n\treturn function closestPointsSegmentToSegment( l1, l2, target1, target2 ) {\r\n\r\n\t\tclosestPointLineToLine( l1, l2, paramResult );\r\n\r\n\t\tlet d = paramResult.x;\r\n\t\tlet d2 = paramResult.y;\r\n\t\tif ( d >= 0 && d <= 1 && d2 >= 0 && d2 <= 1 ) {\r\n\r\n\t\t\tl1.at( d, target1 );\r\n\t\t\tl2.at( d2, target2 );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t} else if ( d >= 0 && d <= 1 ) {\r\n\r\n\t\t\t// Only d2 is out of bounds.\r\n\t\t\tif ( d2 < 0 ) {\r\n\r\n\t\t\t\tl2.at( 0, target2 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tl2.at( 1, target2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tl1.closestPointToPoint( target2, true, target1 );\r\n\t\t\treturn;\r\n\r\n\t\t} else if ( d2 >= 0 && d2 <= 1 ) {\r\n\r\n\t\t\t// Only d is out of bounds.\r\n\t\t\tif ( d < 0 ) {\r\n\r\n\t\t\t\tl1.at( 0, target1 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tl1.at( 1, target1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tl2.closestPointToPoint( target1, true, target2 );\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Both u and u2 are out of bounds.\r\n\t\t\tlet p;\r\n\t\t\tif ( d < 0 ) {\r\n\r\n\t\t\t\tp = l1.start;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp = l1.end;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet p2;\r\n\t\t\tif ( d2 < 0 ) {\r\n\r\n\t\t\t\tp2 = l2.start;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp2 = l2.end;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst closestPoint = temp1;\r\n\t\t\tconst closestPoint2 = temp2;\r\n\t\t\tl1.closestPointToPoint( p2, true, temp1 );\r\n\t\t\tl2.closestPointToPoint( p, true, temp2 );\r\n\r\n\t\t\tif ( closestPoint.distanceToSquared( p2 ) <= closestPoint2.distanceToSquared( p ) ) {\r\n\r\n\t\t\t\ttarget1.copy( closestPoint );\r\n\t\t\t\ttarget2.copy( p2 );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttarget1.copy( p );\r\n\t\t\t\ttarget2.copy( closestPoint2 );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n\r\nexport const sphereIntersectTriangle = ( function () {\r\n\r\n\t// https://stackoverflow.com/questions/34043955/detect-collision-between-sphere-and-triangle-in-three-js\r\n\tconst closestPointTemp = new Vector3();\r\n\tconst projectedPointTemp = new Vector3();\r\n\tconst planeTemp = new Plane();\r\n\tconst lineTemp = new Line3();\r\n\treturn function sphereIntersectTriangle( sphere, triangle ) {\r\n\r\n\t\tconst { radius, center } = sphere;\r\n\t\tconst { a, b, c } = triangle;\r\n\r\n\t\t// phase 1\r\n\t\tlineTemp.start = a;\r\n\t\tlineTemp.end = b;\r\n\t\tconst closestPoint1 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\r\n\t\tif ( closestPoint1.distanceTo( center ) <= radius ) return true;\r\n\r\n\t\tlineTemp.start = a;\r\n\t\tlineTemp.end = c;\r\n\t\tconst closestPoint2 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\r\n\t\tif ( closestPoint2.distanceTo( center ) <= radius ) return true;\r\n\r\n\t\tlineTemp.start = b;\r\n\t\tlineTemp.end = c;\r\n\t\tconst closestPoint3 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\r\n\t\tif ( closestPoint3.distanceTo( center ) <= radius ) return true;\r\n\r\n\t\t// phase 2\r\n\t\tconst plane = triangle.getPlane( planeTemp );\r\n\t\tconst dp = Math.abs( plane.distanceToPoint( center ) );\r\n\t\tif ( dp <= radius ) {\r\n\r\n\t\t\tconst pp = plane.projectPoint( center, projectedPointTemp );\r\n\t\t\tconst cp = triangle.containsPoint( pp );\r\n\t\t\tif ( cp ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t};\r\n\r\n} )();\r\n", "import { Vector3, Vector2, Triangle, DoubleSide, BackSide } from 'three';\r\n\r\n// Ripped and modified From THREE.js Mesh raycast\r\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\r\nconst vA = /* @__PURE__ */ new Vector3();\r\nconst vB = /* @__PURE__ */ new Vector3();\r\nconst vC = /* @__PURE__ */ new Vector3();\r\n\r\nconst uvA = /* @__PURE__ */ new Vector2();\r\nconst uvB = /* @__PURE__ */ new Vector2();\r\nconst uvC = /* @__PURE__ */ new Vector2();\r\n\r\nconst intersectionPoint = /* @__PURE__ */ new Vector3();\r\nfunction checkIntersection( ray, pA, pB, pC, point, side ) {\r\n\r\n\tlet intersect;\r\n\tif ( side === BackSide ) {\r\n\r\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t} else {\r\n\r\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, side !== DoubleSide, point );\r\n\r\n\t}\r\n\r\n\tif ( intersect === null ) return null;\r\n\r\n\tconst distance = ray.origin.distanceTo( point );\r\n\r\n\treturn {\r\n\r\n\t\tdistance: distance,\r\n\t\tpoint: point.clone(),\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction checkBufferGeometryIntersection( ray, position, uv, a, b, c, side ) {\r\n\r\n\tvA.fromBufferAttribute( position, a );\r\n\tvB.fromBufferAttribute( position, b );\r\n\tvC.fromBufferAttribute( position, c );\r\n\r\n\tconst intersection = checkIntersection( ray, vA, vB, vC, intersectionPoint, side );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tif ( uv ) {\r\n\r\n\t\t\tuvA.fromBufferAttribute( uv, a );\r\n\t\t\tuvB.fromBufferAttribute( uv, b );\r\n\t\t\tuvC.fromBufferAttribute( uv, c );\r\n\r\n\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2( ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst face = {\r\n\t\t\ta: a,\r\n\t\t\tb: b,\r\n\t\t\tc: c,\r\n\t\t\tnormal: new Vector3(),\r\n\t\t\tmaterialIndex: 0\r\n\t\t};\r\n\r\n\t\tTriangle.getNormal( vA, vB, vC, face.normal );\r\n\r\n\t\tintersection.face = face;\r\n\t\tintersection.faceIndex = a;\r\n\r\n\t}\r\n\r\n\treturn intersection;\r\n\r\n}\r\n\r\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\r\nfunction intersectTri( geo, side, ray, tri, intersections ) {\r\n\r\n\tconst triOffset = tri * 3;\r\n\tconst a = geo.index.getX( triOffset );\r\n\tconst b = geo.index.getX( triOffset + 1 );\r\n\tconst c = geo.index.getX( triOffset + 2 );\r\n\r\n\tconst intersection = checkBufferGeometryIntersection( ray, geo.attributes.position, geo.attributes.uv, a, b, c, side );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tintersection.faceIndex = tri;\r\n\t\tif ( intersections ) intersections.push( intersection );\r\n\t\treturn intersection;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\nexport { intersectTri };\r\n", "import { intersectTri } from './ThreeRayIntersectUtilities.js';\r\n\r\nexport function intersectTris( geo, side, ray, offset, count, intersections ) {\r\n\r\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\tintersectTri( geo, side, ray, i, intersections );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport function intersectClosestTri( geo, side, ray, offset, count ) {\r\n\r\n\tlet dist = Infinity;\r\n\tlet res = null;\r\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\tconst intersection = intersectTri( geo, side, ray, i );\r\n\t\tif ( intersection && intersection.distance < dist ) {\r\n\r\n\t\t\tres = intersection;\r\n\t\t\tdist = intersection.distance;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn res;\r\n\r\n}\r\n\r\n// converts the given BVH raycast intersection to align with the three.js raycast\r\n// structure (include object, world space distance and point).\r\nexport function convertRaycastIntersect( hit, object, raycaster ) {\r\n\r\n\tif ( hit === null ) {\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\thit.point.applyMatrix4( object.matrixWorld );\r\n\thit.distance = hit.point.distanceTo( raycaster.ray.origin );\r\n\thit.object = object;\r\n\r\n\tif ( hit.distance < raycaster.near || hit.distance > raycaster.far ) {\r\n\r\n\t\treturn null;\r\n\r\n\t} else {\r\n\r\n\t\treturn hit;\r\n\r\n\t}\r\n\r\n}\r\n", "\r\nimport { Vector2, Vector3, Triangle } from 'three';\r\n\r\n// sets the vertices of triangle `tri` with the 3 vertices after i\r\nexport function setTriangle( tri, i, index, pos ) {\r\n\r\n\tconst ta = tri.a;\r\n\tconst tb = tri.b;\r\n\tconst tc = tri.c;\r\n\r\n\tlet i0 = i;\r\n\tlet i1 = i + 1;\r\n\tlet i2 = i + 2;\r\n\tif ( index ) {\r\n\r\n\t\ti0 = index.getX( i );\r\n\t\ti1 = index.getX( i + 1 );\r\n\t\ti2 = index.getX( i + 2 );\r\n\r\n\t}\r\n\r\n\tta.x = pos.getX( i0 );\r\n\tta.y = pos.getY( i0 );\r\n\tta.z = pos.getZ( i0 );\r\n\r\n\ttb.x = pos.getX( i1 );\r\n\ttb.y = pos.getY( i1 );\r\n\ttb.z = pos.getZ( i1 );\r\n\r\n\ttc.x = pos.getX( i2 );\r\n\ttc.y = pos.getY( i2 );\r\n\ttc.z = pos.getZ( i2 );\r\n\r\n}\r\n\r\nexport function iterateOverTriangles(\r\n\toffset,\r\n\tcount,\r\n\tgeometry,\r\n\tintersectsTriangleFunc,\r\n\tcontained,\r\n\tdepth,\r\n\ttriangle\r\n) {\r\n\r\n\tconst index = geometry.index;\r\n\tconst pos = geometry.attributes.position;\r\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\r\n\r\n\t\tsetTriangle( triangle, i * 3, index, pos );\r\n\t\ttriangle.needsUpdate = true;\r\n\r\n\t\tif ( intersectsTriangleFunc( triangle, i, contained, depth ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nconst tempV1 = /* @__PURE__ */ new Vector3();\r\nconst tempV2 = /* @__PURE__ */ new Vector3();\r\nconst tempV3 = /* @__PURE__ */ new Vector3();\r\nconst tempUV1 = /* @__PURE__ */ new Vector2();\r\nconst tempUV2 = /* @__PURE__ */ new Vector2();\r\nconst tempUV3 = /* @__PURE__ */ new Vector2();\r\n\r\nexport function getTriangleHitPointInfo( point, geometry, triangleIndex, target ) {\r\n\r\n\tconst indices = geometry.getIndex().array;\r\n\tconst positions = geometry.getAttribute( 'position' );\r\n\tconst uvs = geometry.getAttribute( 'uv' );\r\n\r\n\tconst a = indices[ triangleIndex * 3 ];\r\n\tconst b = indices[ triangleIndex * 3 + 1 ];\r\n\tconst c = indices[ triangleIndex * 3 + 2 ];\r\n\r\n\ttempV1.fromBufferAttribute( positions, a );\r\n\ttempV2.fromBufferAttribute( positions, b );\r\n\ttempV3.fromBufferAttribute( positions, c );\r\n\r\n\t// find the associated material index\r\n\tlet materialIndex = 0;\r\n\tconst groups = geometry.groups;\r\n\tconst firstVertexIndex = triangleIndex * 3;\r\n\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tconst group = groups[ i ];\r\n\t\tconst { start, count } = group;\r\n\t\tif ( firstVertexIndex >= start && firstVertexIndex < start + count ) {\r\n\r\n\t\t\tmaterialIndex = group.materialIndex;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// extract uvs\r\n\tlet uv = null;\r\n\tif ( uvs ) {\r\n\r\n\t\ttempUV1.fromBufferAttribute( uvs, a );\r\n\t\ttempUV2.fromBufferAttribute( uvs, b );\r\n\t\ttempUV3.fromBufferAttribute( uvs, c );\r\n\r\n\t\tif ( target && target.uv ) uv = target.uv;\r\n\t\telse uv = new Vector2();\r\n\r\n\t\tTriangle.getUV( point, tempV1, tempV2, tempV3, tempUV1, tempUV2, tempUV3, uv );\r\n\r\n\t}\r\n\r\n\t// adjust the provided target or create a new one\r\n\tif ( target ) {\r\n\r\n\t\tif ( ! target.face ) target.face = { };\r\n\t\ttarget.face.a = a;\r\n\t\ttarget.face.b = b;\r\n\t\ttarget.face.c = c;\r\n\t\ttarget.face.materialIndex = materialIndex;\r\n\t\tif ( ! target.face.normal ) target.face.normal = new Vector3();\r\n\t\tTriangle.getNormal( tempV1, tempV2, tempV3, target.face.normal );\r\n\r\n\t\tif ( ! target.uv ) target.uv = new Vector2();\r\n\t\ttarget.uv.copy( uv );\r\n\r\n\t\treturn target;\r\n\r\n\t} else {\r\n\r\n\t\treturn {\r\n\t\t\tface: {\r\n\t\t\t\ta: a,\r\n\t\t\t\tb: b,\r\n\t\t\t\tc: c,\r\n\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\tnormal: Triangle.getNormal( tempV1, tempV2, tempV3, new Vector3() )\r\n\t\t\t},\r\n\t\t\tuv: uv\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n", "export class PrimitivePool {\r\n\r\n\tconstructor( getNewPrimitive ) {\r\n\r\n\t\tthis._getNewPrimitive = getNewPrimitive;\r\n\t\tthis._primitives = [];\r\n\r\n\t}\r\n\r\n\tgetPrimitive() {\r\n\r\n\t\tconst primitives = this._primitives;\r\n\t\tif ( primitives.length === 0 ) {\r\n\r\n\t\t\treturn this._getNewPrimitive();\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn primitives.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treleasePrimitive( primitive ) {\r\n\r\n\t\tthis._primitives.push( primitive );\r\n\r\n\t}\r\n\r\n}\r\n", "export function IS_LEAF( n16, uint16Array ) {\r\n\r\n\treturn uint16Array[ n16 + 15 ] === 0xFFFF;\r\n\r\n}\r\n\r\nexport function OFFSET( n32, uint32Array ) {\r\n\r\n\treturn uint32Array[ n32 + 6 ];\r\n\r\n}\r\n\r\nexport function COUNT( n16, uint16Array ) {\r\n\r\n\treturn uint16Array[ n16 + 14 ];\r\n\r\n}\r\n\r\nexport function LEFT_NODE( n32 ) {\r\n\r\n\treturn n32 + 8;\r\n\r\n}\r\n\r\nexport function RIGHT_NODE( n32, uint32Array ) {\r\n\r\n\treturn uint32Array[ n32 + 6 ];\r\n\r\n}\r\n\r\nexport function SPLIT_AXIS( n32, uint32Array ) {\r\n\r\n\treturn uint32Array[ n32 + 7 ];\r\n\r\n}\r\n\r\nexport function BOUNDING_DATA_INDEX( n32 ) {\r\n\r\n\treturn n32;\r\n\r\n}\r\n", "import { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry } from 'three';\r\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\r\n\r\nconst boundingBox = /* @__PURE__ */ new Box3();\r\nclass MeshBVHRootVisualizer extends Object3D {\r\n\r\n\tget isMesh() {\r\n\r\n\t\treturn ! this.displayEdges;\r\n\r\n\t}\r\n\r\n\tget isLineSegments() {\r\n\r\n\t\treturn this.displayEdges;\r\n\r\n\t}\r\n\r\n\tget isLine() {\r\n\r\n\t\treturn this.displayEdges;\r\n\r\n\t}\r\n\r\n\tconstructor( mesh, material, depth = 10, group = 0 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.material = material;\r\n\t\tthis.geometry = new BufferGeometry();\r\n\t\tthis.name = 'MeshBVHRootVisualizer';\r\n\t\tthis.depth = depth;\r\n\t\tthis.displayParents = false;\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.displayEdges = true;\r\n\t\tthis._group = group;\r\n\r\n\t}\r\n\r\n\traycast() {}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst boundsTree = this.mesh.geometry.boundsTree;\r\n\t\tconst group = this._group;\r\n\t\tgeometry.dispose();\r\n\t\tthis.visible = false;\r\n\t\tif ( boundsTree ) {\r\n\r\n\t\t\t// count the number of bounds required\r\n\t\t\tconst targetDepth = this.depth - 1;\r\n\t\t\tconst displayParents = this.displayParents;\r\n\t\t\tlet boundsCount = 0;\r\n\t\t\tboundsTree.traverse( ( depth, isLeaf ) => {\r\n\r\n\t\t\t\tif ( depth === targetDepth || isLeaf ) {\r\n\r\n\t\t\t\t\tboundsCount ++;\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t} else if ( displayParents ) {\r\n\r\n\t\t\t\t\tboundsCount ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, group );\r\n\r\n\t\t\t// fill in the position buffer with the bounds corners\r\n\t\t\tlet posIndex = 0;\r\n\t\t\tconst positionArray = new Float32Array( 8 * 3 * boundsCount );\r\n\t\t\tboundsTree.traverse( ( depth, isLeaf, boundingData ) => {\r\n\r\n\t\t\t\tconst terminate = depth === targetDepth || isLeaf;\r\n\t\t\t\tif ( terminate || displayParents ) {\r\n\r\n\t\t\t\t\tarrayToBox( 0, boundingData, boundingBox );\r\n\r\n\t\t\t\t\tconst { min, max } = boundingBox;\r\n\t\t\t\t\tfor ( let x = - 1; x <= 1; x += 2 ) {\r\n\r\n\t\t\t\t\t\tconst xVal = x < 0 ? min.x : max.x;\r\n\t\t\t\t\t\tfor ( let y = - 1; y <= 1; y += 2 ) {\r\n\r\n\t\t\t\t\t\t\tconst yVal = y < 0 ? min.y : max.y;\r\n\t\t\t\t\t\t\tfor ( let z = - 1; z <= 1; z += 2 ) {\r\n\r\n\t\t\t\t\t\t\t\tconst zVal = z < 0 ? min.z : max.z;\r\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 0 ] = xVal;\r\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 1 ] = yVal;\r\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 2 ] = zVal;\r\n\r\n\t\t\t\t\t\t\t\tposIndex += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn terminate;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, group );\r\n\r\n\t\t\tlet indexArray;\r\n\t\t\tlet indices;\r\n\t\t\tif ( this.displayEdges ) {\r\n\r\n\t\t\t\t// fill in the index buffer to point to the corner points\r\n\t\t\t\tindices = new Uint8Array( [\r\n\t\t\t\t\t// x axis\r\n\t\t\t\t\t0, 4,\r\n\t\t\t\t\t1, 5,\r\n\t\t\t\t\t2, 6,\r\n\t\t\t\t\t3, 7,\r\n\r\n\t\t\t\t\t// y axis\r\n\t\t\t\t\t0, 2,\r\n\t\t\t\t\t1, 3,\r\n\t\t\t\t\t4, 6,\r\n\t\t\t\t\t5, 7,\r\n\r\n\t\t\t\t\t// z axis\r\n\t\t\t\t\t0, 1,\r\n\t\t\t\t\t2, 3,\r\n\t\t\t\t\t4, 5,\r\n\t\t\t\t\t6, 7,\r\n\t\t\t\t] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tindices = new Uint8Array( [\r\n\r\n\t\t\t\t\t// X-, X+\r\n\t\t\t\t\t0, 1, 2,\r\n\t\t\t\t\t2, 1, 3,\r\n\r\n\t\t\t\t\t4, 6, 5,\r\n\t\t\t\t\t6, 7, 5,\r\n\r\n\t\t\t\t\t// Y-, Y+\r\n\t\t\t\t\t1, 4, 5,\r\n\t\t\t\t\t0, 4, 1,\r\n\r\n\t\t\t\t\t2, 3, 6,\r\n\t\t\t\t\t3, 7, 6,\r\n\r\n\t\t\t\t\t// Z-, Z+\r\n\t\t\t\t\t0, 2, 4,\r\n\t\t\t\t\t2, 6, 4,\r\n\r\n\t\t\t\t\t1, 5, 3,\r\n\t\t\t\t\t3, 5, 7,\r\n\r\n\t\t\t\t] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positionArray.length > 65535 ) {\r\n\r\n\t\t\t\tindexArray = new Uint32Array( indices.length * boundsCount );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tindexArray = new Uint16Array( indices.length * boundsCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst indexLength = indices.length;\r\n\t\t\tfor ( let i = 0; i < boundsCount; i ++ ) {\r\n\r\n\t\t\t\tconst posOffset = i * 8;\r\n\t\t\t\tconst indexOffset = i * indexLength;\r\n\t\t\t\tfor ( let j = 0; j < indexLength; j ++ ) {\r\n\r\n\t\t\t\t\tindexArray[ indexOffset + j ] = posOffset + indices[ j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update the geometry\r\n\t\t\tgeometry.setIndex(\r\n\t\t\t\tnew BufferAttribute( indexArray, 1, false ),\r\n\t\t\t);\r\n\t\t\tgeometry.setAttribute(\r\n\t\t\t\t'position',\r\n\t\t\t\tnew BufferAttribute( positionArray, 3, false ),\r\n\t\t\t);\r\n\t\t\tthis.visible = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshBVHVisualizer extends Group {\r\n\r\n\tget color() {\r\n\r\n\t\treturn this.edgeMaterial.color;\r\n\r\n\t}\r\n\r\n\tget opacity() {\r\n\r\n\t\treturn this.edgeMaterial.opacity;\r\n\r\n\t}\r\n\r\n\tset opacity( v ) {\r\n\r\n\t\tthis.edgeMaterial.opacity = v;\r\n\t\tthis.meshMaterial.opacity = v;\r\n\r\n\t}\r\n\r\n\tconstructor( mesh, depth = 10 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.name = 'MeshBVHVisualizer';\r\n\t\tthis.depth = depth;\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.displayParents = false;\r\n\t\tthis.displayEdges = true;\r\n\t\tthis._roots = [];\r\n\r\n\t\tconst edgeMaterial = new LineBasicMaterial( {\r\n\t\t\tcolor: 0x00FF88,\r\n\t\t\ttransparent: true,\r\n\t\t\topacity: 0.3,\r\n\t\t\tdepthWrite: false,\r\n\t\t} );\r\n\r\n\t\tconst meshMaterial = new MeshBasicMaterial( {\r\n\t\t\tcolor: 0x00FF88,\r\n\t\t\ttransparent: true,\r\n\t\t\topacity: 0.3,\r\n\t\t\tdepthWrite: false,\r\n\t\t} );\r\n\r\n\t\tmeshMaterial.color = edgeMaterial.color;\r\n\r\n\t\tthis.edgeMaterial = edgeMaterial;\r\n\t\tthis.meshMaterial = meshMaterial;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst bvh = this.mesh.geometry.boundsTree;\r\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\r\n\t\twhile ( this._roots.length > totalRoots ) {\r\n\r\n\t\t\tthis._roots.pop();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\r\n\r\n\t\t\tif ( i >= this._roots.length ) {\r\n\r\n\t\t\t\tconst root = new MeshBVHRootVisualizer( this.mesh, this.edgeMaterial, this.depth, i );\r\n\t\t\t\tthis.add( root );\r\n\t\t\t\tthis._roots.push( root );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst root = this._roots[ i ];\r\n\t\t\troot.depth = this.depth;\r\n\t\t\troot.mesh = this.mesh;\r\n\t\t\troot.displayParents = this.displayParents;\r\n\t\t\troot.displayEdges = this.displayEdges;\r\n\t\t\troot.material = this.displayEdges ? this.edgeMaterial : this.meshMaterial;\r\n\t\t\troot.update();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( ...args ) {\r\n\r\n\t\tthis.position.copy( this.mesh.position );\r\n\t\tthis.rotation.copy( this.mesh.rotation );\r\n\t\tthis.scale.copy( this.mesh.scale );\r\n\r\n\t\tsuper.updateMatrixWorld( ...args );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.depth = source.depth;\r\n\t\tthis.mesh = source.mesh;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new MeshBVHVisualizer( this.mesh, this.depth );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.edgeMaterial.dispose();\r\n\t\tthis.meshMaterial.dispose();\r\n\r\n\t\tconst children = this.children;\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].geometry.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { MeshBVHVisualizer };\r\n", "import { Box3, Vector3 } from 'three';\r\nimport { TRAVERSAL_COST, TRIANGLE_INTERSECT_COST } from '../core/Constants.js';\r\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\r\n\r\nconst _box1 = /* @__PURE__ */ new Box3();\r\nconst _box2 = /* @__PURE__ */ new Box3();\r\nconst _vec = /* @__PURE__ */ new Vector3();\r\n\r\n// https://stackoverflow.com/questions/1248302/how-to-get-the-size-of-a-javascript-object\r\nfunction getPrimitiveSize( el ) {\r\n\r\n\tswitch ( typeof el ) {\r\n\r\n\t\tcase 'number':\r\n\t\t\treturn 8;\r\n\t\tcase 'string':\r\n\t\t\treturn el.length * 2;\r\n\t\tcase 'boolean':\r\n\t\t\treturn 4;\r\n\t\tdefault:\r\n\t\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction isTypedArray( arr ) {\r\n\r\n\tconst regex = /(Uint|Int|Float)(8|16|32)Array/;\r\n\treturn regex.test( arr.constructor.name );\r\n\r\n}\r\n\r\nfunction getRootExtremes( bvh, group ) {\r\n\r\n\tconst result = {\r\n\t\tnodeCount: 0,\r\n\t\tleafNodeCount: 0,\r\n\r\n\t\tdepth: {\r\n\t\t\tmin: Infinity, max: - Infinity\r\n\t\t},\r\n\t\ttris: {\r\n\t\t\tmin: Infinity, max: - Infinity\r\n\t\t},\r\n\t\tsplits: [ 0, 0, 0 ],\r\n\t\tsurfaceAreaScore: 0,\r\n\t};\r\n\r\n\tbvh.traverse( ( depth, isLeaf, boundingData, offsetOrSplit, count ) => {\r\n\r\n\t\tconst l0 = boundingData[ 0 + 3 ] - boundingData[ 0 ];\r\n\t\tconst l1 = boundingData[ 1 + 3 ] - boundingData[ 1 ];\r\n\t\tconst l2 = boundingData[ 2 + 3 ] - boundingData[ 2 ];\r\n\r\n\t\tconst surfaceArea = 2 * ( l0 * l1 + l1 * l2 + l2 * l0 );\r\n\r\n\t\tresult.nodeCount ++;\r\n\t\tif ( isLeaf ) {\r\n\r\n\t\t\tresult.leafNodeCount ++;\r\n\r\n\t\t\tresult.depth.min = Math.min( depth, result.depth.min );\r\n\t\t\tresult.depth.max = Math.max( depth, result.depth.max );\r\n\r\n\t\t\tresult.tris.min = Math.min( count, result.tris.min );\r\n\t\t\tresult.tris.max = Math.max( count, result.tris.max );\r\n\r\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRIANGLE_INTERSECT_COST * count;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult.splits[ offsetOrSplit ] ++;\r\n\r\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRAVERSAL_COST;\r\n\r\n\t\t}\r\n\r\n\t}, group );\r\n\r\n\t// If there are no leaf nodes because the tree hasn't finished generating yet.\r\n\tif ( result.tris.min === Infinity ) {\r\n\r\n\t\tresult.tris.min = 0;\r\n\t\tresult.tris.max = 0;\r\n\r\n\t}\r\n\r\n\tif ( result.depth.min === Infinity ) {\r\n\r\n\t\tresult.depth.min = 0;\r\n\t\tresult.depth.max = 0;\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nfunction getBVHExtremes( bvh ) {\r\n\r\n\treturn bvh._roots.map( ( root, i ) => getRootExtremes( bvh, i ) );\r\n\r\n}\r\n\r\nfunction estimateMemoryInBytes( obj ) {\r\n\r\n\tconst traversed = new Set();\r\n\tconst stack = [ obj ];\r\n\tlet bytes = 0;\r\n\r\n\twhile ( stack.length ) {\r\n\r\n\t\tconst curr = stack.pop();\r\n\t\tif ( traversed.has( curr ) ) {\r\n\r\n\t\t\tcontinue;\r\n\r\n\t\t}\r\n\r\n\t\ttraversed.add( curr );\r\n\r\n\t\tfor ( let key in curr ) {\r\n\r\n\t\t\tif ( ! curr.hasOwnProperty( key ) ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbytes += getPrimitiveSize( key );\r\n\r\n\t\t\tconst value = curr[ key ];\r\n\t\t\tif ( value && ( typeof value === 'object' || typeof value === 'function' ) ) {\r\n\r\n\t\t\t\tif ( isTypedArray( value ) ) {\r\n\r\n\t\t\t\t\tbytes += value.byteLength;\r\n\r\n\t\t\t\t} else if ( value instanceof ArrayBuffer ) {\r\n\r\n\t\t\t\t\tbytes += value.byteLength;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstack.push( value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbytes += getPrimitiveSize( value );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn bytes;\r\n\r\n}\r\n\r\nfunction validateBounds( bvh ) {\r\n\r\n\tconst geometry = bvh.geometry;\r\n\tconst depthStack = [];\r\n\tconst index = geometry.index;\r\n\tconst position = geometry.getAttribute( 'position' );\r\n\tlet passes = true;\r\n\r\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\r\n\r\n\t\tconst info = {\r\n\t\t\tdepth,\r\n\t\t\tisLeaf,\r\n\t\t\tboundingData,\r\n\t\t\toffset,\r\n\t\t\tcount,\r\n\t\t};\r\n\t\tdepthStack[ depth ] = info;\r\n\r\n\t\tarrayToBox( 0, boundingData, _box1 );\r\n\t\tconst parent = depthStack[ depth - 1 ];\r\n\r\n\t\tif ( isLeaf ) {\r\n\r\n\t\t\t// check triangles\r\n\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\tconst i0 = index.getX( i );\r\n\t\t\t\tconst i1 = index.getX( i + 1 );\r\n\t\t\t\tconst i2 = index.getX( i + 2 );\r\n\r\n\t\t\t\tlet isContained;\r\n\r\n\t\t\t\t_vec.fromBufferAttribute( position, i0 );\r\n\t\t\t\tisContained = _box1.containsPoint( _vec );\r\n\r\n\t\t\t\t_vec.fromBufferAttribute( position, i1 );\r\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\r\n\r\n\t\t\t\t_vec.fromBufferAttribute( position, i2 );\r\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\r\n\r\n\t\t\t\tconsole.assert( isContained, 'Leaf bounds does not fully contain triangle.' );\r\n\t\t\t\tpasses = passes && isContained;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( parent ) {\r\n\r\n\t\t\t// check if my bounds fit in my parents\r\n\t\t\tarrayToBox( 0, boundingData, _box2 );\r\n\r\n\t\t\tconst isContained = _box2.containsBox( _box1 );\r\n\t\t\tconsole.assert( isContained, 'Parent bounds does not fully contain child.' );\r\n\t\t\tpasses = passes && isContained;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn passes;\r\n\r\n}\r\n\r\n// Returns a simple, human readable object that represents the BVH.\r\nfunction getJSONStructure( bvh ) {\r\n\r\n\tconst depthStack = [];\r\n\r\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\r\n\r\n\t\tconst info = {\r\n\t\t\tbounds: arrayToBox( 0, boundingData, new Box3() ),\r\n\t\t};\r\n\r\n\t\tif ( isLeaf ) {\r\n\r\n\t\t\tinfo.count = count;\r\n\t\t\tinfo.offset = offset;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tinfo.left = null;\r\n\t\t\tinfo.right = null;\r\n\r\n\t\t}\r\n\r\n\t\tdepthStack[ depth ] = info;\r\n\r\n\t\t// traversal hits the left then right node\r\n\t\tconst parent = depthStack[ depth - 1 ];\r\n\t\tif ( parent ) {\r\n\r\n\t\t\tif ( parent.left === null ) {\r\n\r\n\t\t\t\tparent.left = info;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tparent.right = info;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn depthStack[ 0 ];\r\n\r\n}\r\n\r\nexport { estimateMemoryInBytes, getBVHExtremes, validateBounds, getJSONStructure };\r\n", "import { Ray, Matrix4, Mesh } from 'three';\r\nimport { convertRaycastIntersect } from './GeometryRayIntersectUtilities.js';\r\nimport { MeshBVH } from '../core/MeshBVH.js';\r\n\r\nconst ray = /* @__PURE__ */ new Ray();\r\nconst tmpInverseMatrix = /* @__PURE__ */ new Matrix4();\r\nconst origMeshRaycastFunc = Mesh.prototype.raycast;\r\n\r\nexport function acceleratedRaycast( raycaster, intersects ) {\r\n\r\n\tif ( this.geometry.boundsTree ) {\r\n\r\n\t\tif ( this.material === undefined ) return;\r\n\r\n\t\ttmpInverseMatrix.copy( this.matrixWorld ).invert();\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( tmpInverseMatrix );\r\n\r\n\t\tconst bvh = this.geometry.boundsTree;\r\n\t\tif ( raycaster.firstHitOnly === true ) {\r\n\r\n\t\t\tconst hit = convertRaycastIntersect( bvh.raycastFirst( ray, this.material ), this, raycaster );\r\n\t\t\tif ( hit ) {\r\n\r\n\t\t\t\tintersects.push( hit );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst hits = bvh.raycast( ray, this.material );\r\n\t\t\tfor ( let i = 0, l = hits.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst hit = convertRaycastIntersect( hits[ i ], this, raycaster );\r\n\t\t\t\tif ( hit ) {\r\n\r\n\t\t\t\t\tintersects.push( hit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\torigMeshRaycastFunc.call( this, raycaster, intersects );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport function computeBoundsTree( options ) {\r\n\r\n\tthis.boundsTree = new MeshBVH( this, options );\r\n\treturn this.boundsTree;\r\n\r\n}\r\n\r\nexport function disposeBoundsTree() {\r\n\r\n\tthis.boundsTree = null;\r\n\r\n}\r\n", "import {\r\n\tDataTexture,\r\n\tFloatType,\r\n\tUnsignedIntType,\r\n\tRGBAFormat,\r\n\tRGIntegerFormat,\r\n\tNearestFilter,\r\n} from 'three';\r\nimport {\r\n\tFloatVertexAttributeTexture,\r\n\tUIntVertexAttributeTexture,\r\n} from './VertexAttributeTexture.js';\r\nimport { BYTES_PER_NODE } from '../core/Constants.js';\r\nimport {\r\n\tBOUNDING_DATA_INDEX,\r\n\tCOUNT,\r\n\tIS_LEAF,\r\n\tRIGHT_NODE,\r\n\tOFFSET,\r\n\tSPLIT_AXIS,\r\n} from '../core/nodeBufferFunctions.js';\r\n\r\nfunction bvhToTextures( bvh, boundsTexture, contentsTexture ) {\r\n\r\n\tconst roots = bvh._roots;\r\n\r\n\tif ( roots.length !== 1 ) {\r\n\r\n\t\tthrow new Error( 'MeshBVHUniformStruct: Multi-root BVHs not supported.' );\r\n\r\n\t}\r\n\r\n\tconst root = roots[ 0 ];\r\n\tconst uint16Array = new Uint16Array( root );\r\n\tconst uint32Array = new Uint32Array( root );\r\n\tconst float32Array = new Float32Array( root );\r\n\r\n\t// Both bounds need two elements per node so compute the height so it's twice as long as\r\n\t// the width so we can expand the row by two and still have a square texture\r\n\tconst nodeCount = root.byteLength / BYTES_PER_NODE;\r\n\tconst boundsDimension = 2 * Math.ceil( Math.sqrt( nodeCount / 2 ) );\r\n\tconst boundsArray = new Float32Array( 4 * boundsDimension * boundsDimension );\r\n\r\n\tconst contentsDimension = Math.ceil( Math.sqrt( nodeCount ) );\r\n\tconst contentsArray = new Uint32Array( 2 * contentsDimension * contentsDimension );\r\n\r\n\tfor ( let i = 0; i < nodeCount; i ++ ) {\r\n\r\n\t\tconst nodeIndex32 = i * BYTES_PER_NODE / 4;\r\n\t\tconst nodeIndex16 = nodeIndex32 * 2;\r\n\t\tconst boundsIndex = BOUNDING_DATA_INDEX( nodeIndex32 );\r\n\t\tfor ( let b = 0; b < 3; b ++ ) {\r\n\r\n\t\t\tboundsArray[ 8 * i + 0 + b ] = float32Array[ boundsIndex + 0 + b ];\r\n\t\t\tboundsArray[ 8 * i + 4 + b ] = float32Array[ boundsIndex + 3 + b ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( IS_LEAF( nodeIndex16, uint16Array ) ) {\r\n\r\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\r\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\r\n\r\n\t\t\tconst mergedLeafCount = 0xffff0000 | count;\r\n\t\t\tcontentsArray[ i * 2 + 0 ] = mergedLeafCount;\r\n\t\t\tcontentsArray[ i * 2 + 1 ] = offset;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst rightIndex = 4 * RIGHT_NODE( nodeIndex32, uint32Array ) / BYTES_PER_NODE;\r\n\t\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\r\n\r\n\t\t\tcontentsArray[ i * 2 + 0 ] = splitAxis;\r\n\t\t\tcontentsArray[ i * 2 + 1 ] = rightIndex;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tboundsTexture.image.data = boundsArray;\r\n\tboundsTexture.image.width = boundsDimension;\r\n\tboundsTexture.image.height = boundsDimension;\r\n\tboundsTexture.format = RGBAFormat;\r\n\tboundsTexture.type = FloatType;\r\n\tboundsTexture.internalFormat = 'RGBA32F';\r\n\tboundsTexture.minFilter = NearestFilter;\r\n\tboundsTexture.magFilter = NearestFilter;\r\n\tboundsTexture.generateMipmaps = false;\r\n\tboundsTexture.needsUpdate = true;\r\n\tboundsTexture.dispose();\r\n\r\n\tcontentsTexture.image.data = contentsArray;\r\n\tcontentsTexture.image.width = contentsDimension;\r\n\tcontentsTexture.image.height = contentsDimension;\r\n\tcontentsTexture.format = RGIntegerFormat;\r\n\tcontentsTexture.type = UnsignedIntType;\r\n\tcontentsTexture.internalFormat = 'RG32UI';\r\n\tcontentsTexture.minFilter = NearestFilter;\r\n\tcontentsTexture.magFilter = NearestFilter;\r\n\tcontentsTexture.generateMipmaps = false;\r\n\tcontentsTexture.needsUpdate = true;\r\n\tcontentsTexture.dispose();\r\n\r\n}\r\n\r\nexport class MeshBVHUniformStruct {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.autoDispose = true;\r\n\t\tthis.index = new UIntVertexAttributeTexture();\r\n\t\tthis.position = new FloatVertexAttributeTexture();\r\n\t\tthis.bvhBounds = new DataTexture();\r\n\t\tthis.bvhContents = new DataTexture();\r\n\r\n\t\tthis.index.overrideItemSize = 3;\r\n\r\n\t}\r\n\r\n\tupdateFrom( bvh ) {\r\n\r\n\t\tconst { geometry } = bvh;\r\n\r\n\t\tbvhToTextures( bvh, this.bvhBounds, this.bvhContents );\r\n\r\n\t\tthis.index.updateFrom( geometry.index );\r\n\t\tthis.position.updateFrom( geometry.attributes.position );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tconst { index, position, bvhBounds, bvhContents } = this;\r\n\r\n\t\tif ( index ) index.dispose();\r\n\t\tif ( position ) position.dispose();\r\n\t\tif ( bvhBounds ) bvhBounds.dispose();\r\n\t\tif ( bvhContents ) bvhContents.dispose();\r\n\r\n\t}\r\n\r\n}\r\n", "import {\r\n\tDataTexture,\r\n\tFloatType,\r\n\tIntType,\r\n\tUnsignedIntType,\r\n\tByteType,\r\n\tUnsignedByteType,\r\n\tShortType,\r\n\tUnsignedShortType,\r\n\r\n\tRedFormat,\r\n\tRGFormat,\r\n\tRGBAFormat,\r\n\r\n\tRedIntegerFormat,\r\n\tRGIntegerFormat,\r\n\tRGBAIntegerFormat,\r\n\r\n\tNearestFilter,\r\n} from 'three';\r\n\r\nfunction countToStringFormat( count ) {\r\n\r\n\tswitch ( count ) {\r\n\r\n\t\tcase 1: return 'R';\r\n\t\tcase 2: return 'RG';\r\n\t\tcase 3: return 'RGBA';\r\n\t\tcase 4: return 'RGBA';\r\n\r\n\t}\r\n\r\n\tthrow new Error();\r\n\r\n}\r\n\r\nfunction countToFormat( count ) {\r\n\r\n\tswitch ( count ) {\r\n\r\n\t\tcase 1: return RedFormat;\r\n\t\tcase 2: return RGFormat;\r\n\t\tcase 3: return RGBAFormat;\r\n\t\tcase 4: return RGBAFormat;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction countToIntFormat( count ) {\r\n\r\n\tswitch ( count ) {\r\n\r\n\t\tcase 1: return RedIntegerFormat;\r\n\t\tcase 2: return RGIntegerFormat;\r\n\t\tcase 3: return RGBAIntegerFormat;\r\n\t\tcase 4: return RGBAIntegerFormat;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class VertexAttributeTexture extends DataTexture {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\t\tthis.minFilter = NearestFilter;\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.overrideItemSize = null;\r\n\t\tthis._forcedType = null;\r\n\r\n\t}\r\n\r\n\tupdateFrom( attr ) {\r\n\r\n\t\tconst overrideItemSize = this.overrideItemSize;\r\n\t\tconst originalItemSize = attr.itemSize;\r\n\t\tconst originalCount = attr.count;\r\n\t\tif ( overrideItemSize !== null ) {\r\n\r\n\t\t\tif ( ( originalItemSize * originalCount ) % overrideItemSize !== 0.0 ) {\r\n\r\n\t\t\t\tthrow new Error( 'VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattr.itemSize = overrideItemSize;\r\n\t\t\tattr.count = originalCount * originalItemSize / overrideItemSize;\r\n\r\n\t\t}\r\n\r\n\t\tconst itemSize = attr.itemSize;\r\n\t\tconst count = attr.count;\r\n\t\tconst normalized = attr.normalized;\r\n\t\tconst originalBufferCons = attr.array.constructor;\r\n\t\tconst byteCount = originalBufferCons.BYTES_PER_ELEMENT;\r\n\t\tlet targetType = this._forcedType;\r\n\t\tlet finalStride = itemSize;\r\n\r\n\t\t// derive the type of texture this should be in the shader\r\n\t\tif ( targetType === null ) {\r\n\r\n\t\t\tswitch ( originalBufferCons ) {\r\n\r\n\t\t\t\tcase Float32Array:\r\n\t\t\t\t\ttargetType = FloatType;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase Uint8Array:\r\n\t\t\t\tcase Uint16Array:\r\n\t\t\t\tcase Uint32Array:\r\n\t\t\t\t\ttargetType = UnsignedIntType;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase Int8Array:\r\n\t\t\t\tcase Int16Array:\r\n\t\t\t\tcase Int32Array:\r\n\t\t\t\t\ttargetType = IntType;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// get the target format to store the texture as\r\n\t\tlet type, format, normalizeValue, targetBufferCons;\r\n\t\tlet internalFormat = countToStringFormat( itemSize );\r\n\t\tswitch ( targetType ) {\r\n\r\n\t\t\tcase FloatType:\r\n\t\t\t\tnormalizeValue = 1.0;\r\n\t\t\t\tformat = countToFormat( itemSize );\r\n\r\n\t\t\t\tif ( normalized && byteCount === 1 ) {\r\n\r\n\t\t\t\t\ttargetBufferCons = originalBufferCons;\r\n\t\t\t\t\tinternalFormat += '8';\r\n\r\n\t\t\t\t\tif ( originalBufferCons === Uint8Array ) {\r\n\r\n\t\t\t\t\t\ttype = UnsignedByteType;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttype = ByteType;\r\n\t\t\t\t\t\tinternalFormat += '_SNORM';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttargetBufferCons = Float32Array;\r\n\t\t\t\t\tinternalFormat += '32F';\r\n\t\t\t\t\ttype = FloatType;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase IntType:\r\n\t\t\t\tinternalFormat += byteCount * 8 + 'I';\r\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\r\n\t\t\t\tformat = countToIntFormat( itemSize );\r\n\r\n\t\t\t\tif ( byteCount === 1 ) {\r\n\r\n\t\t\t\t\ttargetBufferCons = Int8Array;\r\n\t\t\t\t\ttype = ByteType;\r\n\r\n\t\t\t\t} else if ( byteCount === 2 ) {\r\n\r\n\t\t\t\t\ttargetBufferCons = Int16Array;\r\n\t\t\t\t\ttype = ShortType;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttargetBufferCons = Int32Array;\r\n\t\t\t\t\ttype = IntType;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase UnsignedIntType:\r\n\t\t\t\tinternalFormat += byteCount * 8 + 'UI';\r\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\r\n\t\t\t\tformat = countToIntFormat( itemSize );\r\n\r\n\t\t\t\tif ( byteCount === 1 ) {\r\n\r\n\t\t\t\t\ttargetBufferCons = Uint8Array;\r\n\t\t\t\t\ttype = UnsignedByteType;\r\n\r\n\t\t\t\t} else if ( byteCount === 2 ) {\r\n\r\n\t\t\t\t\ttargetBufferCons = Uint16Array;\r\n\t\t\t\t\ttype = UnsignedShortType;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttargetBufferCons = Uint32Array;\r\n\t\t\t\t\ttype = UnsignedIntType;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\t// there will be a mismatch between format length and final length because\r\n\t\t// RGBFormat and RGBIntegerFormat was removed\r\n\t\tif ( finalStride === 3 && ( format === RGBAFormat || format === RGBAIntegerFormat ) ) {\r\n\r\n\t\t\tfinalStride = 4;\r\n\r\n\t\t}\r\n\r\n\t\t// copy the data over to the new texture array\r\n\t\tconst dimension = Math.ceil( Math.sqrt( count ) );\r\n\t\tconst length = finalStride * dimension * dimension;\r\n\t\tconst dataArray = new targetBufferCons( length );\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tconst ii = finalStride * i;\r\n\t\t\tdataArray[ ii ] = attr.getX( i ) / normalizeValue;\r\n\r\n\t\t\tif ( itemSize >= 2 ) {\r\n\r\n\t\t\t\tdataArray[ ii + 1 ] = attr.getY( i ) / normalizeValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemSize >= 3 ) {\r\n\r\n\t\t\t\tdataArray[ ii + 2 ] = attr.getZ( i ) / normalizeValue;\r\n\r\n\t\t\t\tif ( finalStride === 4 ) {\r\n\r\n\t\t\t\t\tdataArray[ ii + 3 ] = 1.0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemSize >= 4 ) {\r\n\r\n\t\t\t\tdataArray[ ii + 3 ] = attr.getW( i ) / normalizeValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.internalFormat = internalFormat;\r\n\t\tthis.format = format;\r\n\t\tthis.type = type;\r\n\t\tthis.image.width = dimension;\r\n\t\tthis.image.height = dimension;\r\n\t\tthis.image.data = dataArray;\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.dispose();\r\n\r\n\t\tattr.itemSize = originalItemSize;\r\n\t\tattr.count = originalCount;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class UIntVertexAttributeTexture extends VertexAttributeTexture {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\t\tthis._forcedType = UnsignedIntType;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class IntVertexAttributeTexture extends VertexAttributeTexture {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\t\tthis._forcedType = IntType;\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport class FloatVertexAttributeTexture extends VertexAttributeTexture {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\t\tthis._forcedType = FloatType;\r\n\r\n\t}\r\n\r\n}\r\n", "import { BufferAttribute, BufferGeometry, Vector3, Vector4, Matrix4, Matrix3 } from 'three';\r\n\r\nconst _positionVector = /*@__PURE__*/ new Vector3();\r\nconst _normalVector = /*@__PURE__*/ new Vector3();\r\nconst _tangentVector = /*@__PURE__*/ new Vector3();\r\nconst _tangentVector4 = /*@__PURE__*/ new Vector4();\r\n\r\nconst _morphVector = /*@__PURE__*/ new Vector3();\r\nconst _temp = /*@__PURE__*/ new Vector3();\r\n\r\nconst _skinIndex = /*@__PURE__*/ new Vector4();\r\nconst _skinWeight = /*@__PURE__*/ new Vector4();\r\nconst _matrix = /*@__PURE__*/ new Matrix4();\r\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n// Confirms that the two provided attributes are compatible\r\nfunction validateAttributes( attr1, attr2 ) {\r\n\r\n\tif ( ! attr1 && ! attr2 ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tconst sameCount = attr1.count === attr2.count;\r\n\tconst sameNormalized = attr1.normalized === attr2.normalized;\r\n\tconst sameType = attr1.array.constructor === attr2.array.constructor;\r\n\tconst sameItemSize = attr1.itemSize === attr2.itemSize;\r\n\r\n\tif ( ! sameCount || ! sameNormalized || ! sameType || ! sameItemSize ) {\r\n\r\n\t\tthrow new Error();\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Clones the given attribute with a new compatible buffer attribute but no data\r\nfunction createAttributeClone( attr, countOverride = null ) {\r\n\r\n\tconst cons = attr.array.constructor;\r\n\tconst normalized = attr.normalized;\r\n\tconst itemSize = attr.itemSize;\r\n\tconst count = countOverride === null ? attr.count : countOverride;\r\n\r\n\treturn new BufferAttribute( new cons( itemSize * count ), itemSize, normalized );\r\n\r\n}\r\n\r\n// target offset is the number of elements in the target buffer stride to skip before copying the\r\n// attributes contents in to.\r\nfunction copyAttributeContents( attr, target, targetOffset = 0 ) {\r\n\r\n\tif ( attr.isInterleavedBufferAttribute ) {\r\n\r\n\t\tconst itemSize = attr.itemSize;\r\n\t\tfor ( let i = 0, l = attr.count; i < l; i ++ ) {\r\n\r\n\t\t\tconst io = i + targetOffset;\r\n\t\t\ttarget.setX( io, attr.getX( i ) );\r\n\t\t\tif ( itemSize >= 2 ) target.setY( io, attr.getY( i ) );\r\n\t\t\tif ( itemSize >= 3 ) target.setZ( io, attr.getZ( i ) );\r\n\t\t\tif ( itemSize >= 4 ) target.setW( io, attr.getW( i ) );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tconst array = target.array;\r\n\t\tconst cons = array.constructor;\r\n\t\tconst byteOffset = array.BYTES_PER_ELEMENT * attr.itemSize * targetOffset;\r\n\t\tconst temp = new cons( array.buffer, byteOffset, attr.array.length );\r\n\t\ttemp.set( attr.array );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Adds the \"matrix\" multiplied by \"scale\" to \"target\"\r\nfunction addScaledMatrix( target, matrix, scale ) {\r\n\r\n\tconst targetArray = target.elements;\r\n\tconst matrixArray = matrix.elements;\r\n\tfor ( let i = 0, l = matrixArray.length; i < l; i ++ ) {\r\n\r\n\t\ttargetArray[ i ] += matrixArray[ i ] * scale;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// A version of \"SkinnedMesh.boneTransform\" for normals\r\nfunction boneNormalTransform( mesh, index, target ) {\r\n\r\n\tconst skeleton = mesh.skeleton;\r\n\tconst geometry = mesh.geometry;\r\n\tconst bones = skeleton.bones;\r\n\tconst boneInverses = skeleton.boneInverses;\r\n\r\n\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\r\n\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\r\n\r\n\t_matrix.elements.fill( 0 );\r\n\r\n\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\tconst weight = _skinWeight.getComponent( i );\r\n\r\n\t\tif ( weight !== 0 ) {\r\n\r\n\t\t\tconst boneIndex = _skinIndex.getComponent( i );\r\n\t\t\t_boneMatrix.multiplyMatrices( bones[ boneIndex ].matrixWorld, boneInverses[ boneIndex ] );\r\n\r\n\t\t\taddScaledMatrix( _matrix, _boneMatrix, weight );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_matrix.multiply( mesh.bindMatrix ).premultiply( mesh.bindMatrixInverse );\r\n\ttarget.transformDirection( _matrix );\r\n\r\n\treturn target;\r\n\r\n}\r\n\r\n// Applies the morph target data to the target vector\r\nfunction applyMorphTarget( morphData, morphInfluences, morphTargetsRelative, i, target ) {\r\n\r\n\t_morphVector.set( 0, 0, 0 );\r\n\tfor ( let j = 0, jl = morphData.length; j < jl; j ++ ) {\r\n\r\n\t\tconst influence = morphInfluences[ j ];\r\n\t\tconst morphAttribute = morphData[ j ];\r\n\r\n\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t_temp.fromBufferAttribute( morphAttribute, i );\r\n\r\n\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t_morphVector.addScaledVector( _temp, influence );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_morphVector.addScaledVector( _temp.sub( target ), influence );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttarget.add( _morphVector );\r\n\r\n}\r\n\r\n// Modified version of BufferGeometryUtils.mergeBufferGeometries that ignores morph targets and updates a attributes in plac\r\nfunction mergeBufferGeometries( geometries, options = { useGroups: false, updateIndex: false }, targetGeometry = new BufferGeometry() ) {\r\n\r\n\tconst isIndexed = geometries[ 0 ].index !== null;\r\n\tconst { useGroups, updateIndex } = options;\r\n\r\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\r\n\tconst attributes = {};\r\n\r\n\tlet offset = 0;\r\n\r\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\tconst geometry = geometries[ i ];\r\n\t\tlet attributesCount = 0;\r\n\r\n\t\t// ensure that all geometries are indexed, or none\r\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\r\n\r\n\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\r\n\r\n\t\t}\r\n\r\n\t\t// gather attributes, exit early if they're different\r\n\t\tfor ( const name in geometry.attributes ) {\r\n\r\n\t\t\tif ( ! attributesUsed.has( name ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributes[ name ] === undefined ) {\r\n\r\n\t\t\t\tattributes[ name ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\r\n\t\t\tattributesCount ++;\r\n\r\n\t\t}\r\n\r\n\t\t// ensure geometries have the same number of attributes\r\n\t\tif ( attributesCount !== attributesUsed.size ) {\r\n\r\n\t\t\tthrow new Error( 'StaticGeometryGenerator: Make sure all geometries have the same number of attributes.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( useGroups ) {\r\n\r\n\t\t\tlet count;\r\n\t\t\tif ( isIndexed ) {\r\n\r\n\t\t\t\tcount = geometry.index.count;\r\n\r\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\r\n\r\n\t\t\t\tcount = geometry.attributes.position.count;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: The geometry must have either an index or a position attribute' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetGeometry.addGroup( offset, count, i );\r\n\t\t\toffset += count;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// merge indices\r\n\tif ( isIndexed ) {\r\n\r\n\t\tlet forceUpateIndex = false;\r\n\t\tif ( ! targetGeometry.index ) {\r\n\r\n\t\t\tlet indexCount = 0;\r\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\t\t\tindexCount += geometries[ i ].index.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetGeometry.setIndex( new BufferAttribute( new Uint32Array( indexCount ), 1, false ) );\r\n\t\t\tforceUpateIndex = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateIndex || forceUpateIndex ) {\r\n\r\n\t\t\tconst targetIndex = targetGeometry.index;\r\n\t\t\tlet targetOffset = 0;\r\n\t\t\tlet indexOffset = 0;\r\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\t\t\tconst geometry = geometries[ i ];\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\r\n\r\n\t\t\t\t\ttargetIndex.setX( targetOffset, index.getX( j ) + indexOffset );\r\n\t\t\t\t\ttargetOffset ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindexOffset += geometry.attributes.position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// merge attributes\r\n\tfor ( const name in attributes ) {\r\n\r\n\t\tconst attrList = attributes[ name ];\r\n\t\tif ( ! ( name in targetGeometry.attributes ) ) {\r\n\r\n\t\t\tlet count = 0;\r\n\t\t\tfor ( const key in attrList ) {\r\n\r\n\t\t\t\tcount += attrList[ key ].count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetGeometry.setAttribute( name, createAttributeClone( attributes[ name ][ 0 ], count ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst targetAttribute = targetGeometry.attributes[ name ];\r\n\t\tlet offset = 0;\r\n\t\tfor ( const key in attrList ) {\r\n\r\n\t\t\tconst attr = attrList[ key ];\r\n\t\t\tcopyAttributeContents( attr, targetAttribute, offset );\r\n\t\t\toffset += attr.count;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn targetGeometry;\r\n\r\n}\r\n\r\nexport class StaticGeometryGenerator {\r\n\r\n\tconstructor( meshes ) {\r\n\r\n\t\tif ( ! Array.isArray( meshes ) ) {\r\n\r\n\t\t\tmeshes = [ meshes ];\r\n\r\n\t\t}\r\n\r\n\t\tconst finalMeshes = [];\r\n\t\tmeshes.forEach( object => {\r\n\r\n\t\t\tobject.traverse( c => {\r\n\r\n\t\t\t\tif ( c.isMesh ) {\r\n\r\n\t\t\t\t\tfinalMeshes.push( c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.meshes = finalMeshes;\r\n\t\tthis.useGroups = true;\r\n\t\tthis.applyWorldTransforms = true;\r\n\t\tthis.attributes = [ 'position', 'normal', 'tangent', 'uv', 'uv2' ];\r\n\t\tthis._intermediateGeometry = new Array( finalMeshes.length ).fill().map( () => new BufferGeometry() );\r\n\r\n\t}\r\n\r\n\tgetMaterials() {\r\n\r\n\t\tconst materials = [];\r\n\t\tthis.meshes.forEach( mesh => {\r\n\r\n\t\t\tif ( Array.isArray( mesh.material ) ) {\r\n\r\n\t\t\t\tmaterials.push( ...mesh.material );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterials.push( mesh.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tgenerate( targetGeometry = new BufferGeometry() ) {\r\n\r\n\t\tconst { meshes, useGroups, _intermediateGeometry } = this;\r\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst mesh = meshes[ i ];\r\n\t\t\tconst geom = _intermediateGeometry[ i ];\r\n\t\t\tthis._convertToStaticGeometry( mesh, geom );\r\n\r\n\t\t}\r\n\r\n\t\tmergeBufferGeometries( _intermediateGeometry, { useGroups }, targetGeometry );\r\n\t\tfor ( const key in targetGeometry.attributes ) {\r\n\r\n\t\t\ttargetGeometry.attributes[ key ].needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\treturn targetGeometry;\r\n\r\n\t}\r\n\r\n\t_convertToStaticGeometry( mesh, targetGeometry = new BufferGeometry() ) {\r\n\r\n\t\tconst geometry = mesh.geometry;\r\n\t\tconst applyWorldTransforms = this.applyWorldTransforms;\r\n\t\tconst includeNormal = this.attributes.includes( 'normal' );\r\n\t\tconst includeTangent = this.attributes.includes( 'tangent' );\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tconst targetAttributes = targetGeometry.attributes;\r\n\r\n\t\t// initialize the attributes if they don't exist\r\n\t\tif ( ! targetGeometry.index ) {\r\n\r\n\t\t\ttargetGeometry.index = geometry.index;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! targetAttributes.position ) {\r\n\r\n\t\t\ttargetGeometry.setAttribute( 'position', createAttributeClone( attributes.position ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeNormal && ! targetAttributes.normal && attributes.normal ) {\r\n\r\n\t\t\ttargetGeometry.setAttribute( 'normal', createAttributeClone( attributes.normal ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeTangent && ! targetAttributes.tangent && attributes.tangent ) {\r\n\r\n\t\t\ttargetGeometry.setAttribute( 'tangent', createAttributeClone( attributes.tangent ) );\r\n\r\n\t\t}\r\n\r\n\t\t// ensure the attributes are consistent\r\n\t\tvalidateAttributes( geometry.index, targetGeometry.index );\r\n\t\tvalidateAttributes( attributes.position, targetAttributes.position );\r\n\r\n\t\tif ( includeNormal ) {\r\n\r\n\t\t\tvalidateAttributes( attributes.normal, targetAttributes.normal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeTangent ) {\r\n\r\n\t\t\tvalidateAttributes( attributes.tangent, targetAttributes.tangent );\r\n\r\n\t\t}\r\n\r\n\t\t// generate transformed vertex attribute data\r\n\t\tconst position = attributes.position;\r\n\t\tconst normal = includeNormal ? attributes.normal : null;\r\n\t\tconst tangent = includeTangent ? attributes.tangent : null;\r\n\t\tconst morphPosition = geometry.morphAttributes.position;\r\n\t\tconst morphNormal = geometry.morphAttributes.normal;\r\n\t\tconst morphTangent = geometry.morphAttributes.tangent;\r\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\t\tconst morphInfluences = mesh.morphTargetInfluences;\r\n\t\tconst normalMatrix = new Matrix3();\r\n\t\tnormalMatrix.getNormalMatrix( mesh.matrixWorld );\r\n\r\n\t\tfor ( let i = 0, l = attributes.position.count; i < l; i ++ ) {\r\n\r\n\t\t\t_positionVector.fromBufferAttribute( position, i );\r\n\t\t\tif ( normal ) {\r\n\r\n\t\t\t\t_normalVector.fromBufferAttribute( normal, i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tangent ) {\r\n\r\n\t\t\t\t_tangentVector4.fromBufferAttribute( tangent, i );\r\n\t\t\t\t_tangentVector.fromBufferAttribute( tangent, i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// apply morph target transform\r\n\t\t\tif ( morphInfluences ) {\r\n\r\n\t\t\t\tif ( morphPosition ) {\r\n\r\n\t\t\t\t\tapplyMorphTarget( morphPosition, morphInfluences, morphTargetsRelative, i, _positionVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( morphNormal ) {\r\n\r\n\t\t\t\t\tapplyMorphTarget( morphNormal, morphInfluences, morphTargetsRelative, i, _normalVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( morphTangent ) {\r\n\r\n\t\t\t\t\tapplyMorphTarget( morphTangent, morphInfluences, morphTargetsRelative, i, _tangentVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// apply bone transform\r\n\t\t\tif ( mesh.isSkinnedMesh ) {\r\n\r\n\t\t\t\tmesh.boneTransform( i, _positionVector );\r\n\t\t\t\tif ( normal ) {\r\n\r\n\t\t\t\t\tboneNormalTransform( mesh, i, _normalVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( tangent ) {\r\n\r\n\t\t\t\t\tboneNormalTransform( mesh, i, _tangentVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update the vectors of the attributes\r\n\t\t\tif ( applyWorldTransforms ) {\r\n\r\n\t\t\t\t_positionVector.applyMatrix4( mesh.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetAttributes.position.setXYZ( i, _positionVector.x, _positionVector.y, _positionVector.z );\r\n\r\n\t\t\tif ( normal ) {\r\n\r\n\t\t\t\tif ( applyWorldTransforms ) {\r\n\r\n\t\t\t\t\t_normalVector.applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetAttributes.normal.setXYZ( i, _normalVector.x, _normalVector.y, _normalVector.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tangent ) {\r\n\r\n\t\t\t\tif ( applyWorldTransforms ) {\r\n\r\n\t\t\t\t\t_tangentVector.transformDirection( mesh.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetAttributes.tangent.setXYZW( i, _tangentVector.x, _tangentVector.y, _tangentVector.z, _tangentVector4.w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// copy other attributes over\r\n\t\tfor ( const i in this.attributes ) {\r\n\r\n\t\t\tconst key = this.attributes[ i ];\r\n\t\t\tif ( key === 'position' || key === 'tangent' || key === 'normal' || ! ( key in attributes ) ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! targetAttributes[ key ] ) {\r\n\r\n\t\t\t\ttargetGeometry.setAttribute( key, createAttributeClone( attributes[ key ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvalidateAttributes( attributes[ key ], targetAttributes[ key ] );\r\n\t\t\tcopyAttributeContents( attributes[ key ], targetAttributes[ key ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn targetGeometry;\r\n\r\n\t}\r\n\r\n}\r\n", "import * as React from 'react';\r\n\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nfunction useContextBridge(...contexts) {\r\n  const cRef = React.useRef([]);\r\n  cRef.current = contexts.map(context => React.useContext(context));\r\n  return React.useMemo(() => ({\r\n    children\r\n  }) => contexts.reduceRight((acc, Context, i) => /*#__PURE__*/React.createElement(Context.Provider, {\r\n    value: cRef.current[i],\r\n    children: acc\r\n  }), children\r\n  /*\r\n   * done this way in reference to:\r\n   * https://github.com/DefinitelyTyped/DefinitelyTyped/issues/44572#issuecomment-625878049\r\n   * https://github.com/microsoft/TypeScript/issues/14729\r\n   */\r\n  ), []);\r\n}\r\n\r\nexport { useContextBridge };\r\n", "import * as React from 'react';\r\nimport { Object3D, AnimationMixer } from 'three';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nfunction useAnimations(clips, root) {\r\n  const ref = React.useRef();\r\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\r\n    current: root\r\n  } : root : ref); // eslint-disable-next-line prettier/prettier\r\n\r\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\r\n  const lazyActions = React.useRef({});\r\n  const [api] = React.useState(() => {\r\n    const actions = {};\r\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\r\n      enumerable: true,\r\n\r\n      get() {\r\n        if (actualRef.current) {\r\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\r\n        }\r\n      }\r\n\r\n    }));\r\n    return {\r\n      ref: actualRef,\r\n      clips,\r\n      actions,\r\n      names: clips.map(c => c.name),\r\n      mixer\r\n    };\r\n  });\r\n  useFrame((state, delta) => mixer.update(delta));\r\n  React.useEffect(() => {\r\n    const currentRoot = actualRef.current;\r\n    return () => {\r\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\r\n      lazyActions.current = {};\r\n      Object.values(api.actions).forEach(action => {\r\n        if (currentRoot) {\r\n          mixer.uncacheAction(action, currentRoot);\r\n        }\r\n      });\r\n    };\r\n  }, [clips]);\r\n  return api;\r\n}\r\n\r\nexport { useAnimations };\r\n", "import * as React from 'react';\r\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\r\n\r\nfunction useIntersect(onChange) {\r\n  const ref = React.useRef(null);\r\n  const check = React.useRef(false);\r\n  const temp = React.useRef(false);\r\n  React.useEffect(() => {\r\n    const obj = ref.current;\r\n\r\n    if (obj) {\r\n      // Stamp out frustum check pre-emptively\r\n      const unsub1 = addEffect(() => {\r\n        check.current = false;\r\n        return true;\r\n      }); // If the object is inside the frustum three will call onRender\r\n\r\n      const oldOnRender = obj.onBeforeRender;\r\n\r\n      obj.onBeforeRender = () => check.current = true; // Compare the check value against the temp value, if it differs set state\r\n\r\n\r\n      const unsub2 = addAfterEffect(() => {\r\n        if (check.current !== temp.current) onChange(temp.current = check.current);\r\n        return true;\r\n      });\r\n      return () => {\r\n        obj.onBeforeRender = oldOnRender;\r\n        unsub1();\r\n        unsub2();\r\n      };\r\n    }\r\n  }, []);\r\n  return ref;\r\n}\r\n\r\nexport { useIntersect };\r\n", "import * as THREE from 'three';\r\nimport * as React from 'react';\r\nimport { applyProps } from '@react-three/fiber';\r\n\r\n// and @0beqz https://gist.github.com/0beqz/8d51b4ae16d68021a09fb504af708fca\r\n\r\nconst worldposReplace =\r\n/* glsl */\r\n`\r\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\r\n  vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\r\n  #ifdef BOX_PROJECTED_ENV_MAP\r\n    vWorldPosition = worldPosition.xyz;\r\n  #endif\r\n#endif\r\n`;\r\nconst boxProjectDefinitions =\r\n/*glsl */\r\n`\r\n#ifdef BOX_PROJECTED_ENV_MAP\r\n  uniform vec3 envMapSize;\r\n  uniform vec3 envMapPosition;\r\n  varying vec3 vWorldPosition;\r\n    \r\n  vec3 parallaxCorrectNormal( vec3 v, vec3 cubeSize, vec3 cubePos ) {\r\n    vec3 nDir = normalize( v );\r\n    vec3 rbmax = ( .5 * cubeSize + cubePos - vWorldPosition ) / nDir;\r\n    vec3 rbmin = ( -.5 * cubeSize + cubePos - vWorldPosition ) / nDir;\r\n    vec3 rbminmax;\r\n    rbminmax.x = ( nDir.x > 0. ) ? rbmax.x : rbmin.x;\r\n    rbminmax.y = ( nDir.y > 0. ) ? rbmax.y : rbmin.y;\r\n    rbminmax.z = ( nDir.z > 0. ) ? rbmax.z : rbmin.z;\r\n    float correction = min( min( rbminmax.x, rbminmax.y ), rbminmax.z );\r\n    vec3 boxIntersection = vWorldPosition + nDir * correction;    \r\n    return boxIntersection - cubePos;\r\n  }\r\n#endif\r\n`; // will be inserted after \"vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\"\r\n\r\nconst getIBLIrradiance_patch =\r\n/* glsl */\r\n`\r\n#ifdef BOX_PROJECTED_ENV_MAP\r\n  worldNormal = parallaxCorrectNormal( worldNormal, envMapSize, envMapPosition );\r\n#endif\r\n`; // will be inserted after \"reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\"\r\n\r\nconst getIBLRadiance_patch =\r\n/* glsl */\r\n`\r\n#ifdef BOX_PROJECTED_ENV_MAP\r\n  reflectVec = parallaxCorrectNormal( reflectVec, envMapSize, envMapPosition );\r\n#endif\r\n`;\r\n\r\nfunction boxProjectedEnvMap(shader, envMapPosition, envMapSize) {\r\n  shader.defines.BOX_PROJECTED_ENV_MAP = true; // uniforms\r\n\r\n  shader.uniforms.envMapPosition = {\r\n    value: envMapPosition\r\n  };\r\n  shader.uniforms.envMapSize = {\r\n    value: envMapSize\r\n  }; // vertex shader\r\n\r\n  shader.vertexShader = `\r\n  varying vec3 vWorldPosition;\r\n  ${shader.vertexShader.replace('#include <worldpos_vertex>', worldposReplace)}`; // fragment shader\r\n\r\n  shader.fragmentShader = `\r\n    ${boxProjectDefinitions}\r\n    ${shader.fragmentShader.replace('#include <envmap_physical_pars_fragment>', THREE.ShaderChunk.envmap_physical_pars_fragment).replace('vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );', `vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\r\n         ${getIBLIrradiance_patch}\r\n         `).replace('reflectVec = inverseTransformDirection( reflectVec, viewMatrix );', `reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\r\n         ${getIBLRadiance_patch}\r\n        `)}`;\r\n}\r\n\r\nfunction useBoxProjectedEnv(position = new THREE.Vector3(), size = new THREE.Vector3()) {\r\n  const [config] = React.useState(() => ({\r\n    position: new THREE.Vector3(),\r\n    size: new THREE.Vector3()\r\n  }));\r\n  applyProps(config, {\r\n    position,\r\n    size\r\n  });\r\n  const ref = React.useRef(null);\r\n  const spread = React.useMemo(() => ({\r\n    ref,\r\n    onBeforeCompile: shader => boxProjectedEnvMap(shader, config.position, config.size),\r\n    customProgramCacheKey: () => JSON.stringify(config.position.toArray()) + JSON.stringify(config.size.toArray())\r\n  }), [...config.position.toArray(), ...config.size.toArray()]);\r\n  React.useLayoutEffect(() => void (ref.current.needsUpdate = true), [config]);\r\n  return spread;\r\n}\r\n\r\nexport { useBoxProjectedEnv };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nconst boundingBox = new THREE.Box3();\r\nconst boundingBoxSize = new THREE.Vector3();\r\nconst BBAnchor = ({\r\n  anchor,\r\n  ...props\r\n}) => {\r\n  const ref = React.useRef(null);\r\n  const parentRef = React.useRef(null); // Reattach group created by this component to the parent's parent,\r\n  // so it becomes a sibling of its initial parent.\r\n  // We do that so the children have no impact on a bounding box of a parent.\r\n\r\n  React.useEffect(() => {\r\n    var _ref$current, _ref$current$parent;\r\n\r\n    if ((_ref$current = ref.current) != null && (_ref$current$parent = _ref$current.parent) != null && _ref$current$parent.parent) {\r\n      parentRef.current = ref.current.parent;\r\n      ref.current.parent.parent.add(ref.current);\r\n    }\r\n  }, []);\r\n  useFrame(() => {\r\n    if (parentRef.current) {\r\n      boundingBox.setFromObject(parentRef.current);\r\n      boundingBox.getSize(boundingBoxSize);\r\n      ref.current.position.set(parentRef.current.position.x + boundingBoxSize.x * anchor[0] / 2, parentRef.current.position.y + boundingBoxSize.y * anchor[1] / 2, parentRef.current.position.z + boundingBoxSize.z * anchor[2] / 2);\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    ref: ref\r\n  }, props));\r\n};\r\n\r\nexport { BBAnchor };\r\n", "import * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { createPortal } from '@react-three/fiber';\r\nimport { Flow } from 'three-stdlib';\r\n\r\nconst CurveModifier = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  curve\r\n}, ref) => {\r\n  const [scene] = React.useState(() => new THREE.Scene());\r\n  const [obj, set] = React.useState();\r\n  const modifier = React.useRef();\r\n  React.useEffect(() => {\r\n    modifier.current = new Flow(scene.children[0]);\r\n    set(modifier.current.object3D);\r\n  }, [children]);\r\n  React.useEffect(() => {\r\n    var _modifier$current;\r\n\r\n    if (curve) (_modifier$current = modifier.current) == null ? void 0 : _modifier$current.updateCurve(0, curve);\r\n  }, [curve]);\r\n  React.useImperativeHandle(ref, () => ({\r\n    moveAlongCurve: val => {\r\n      var _modifier$current2;\r\n\r\n      (_modifier$current2 = modifier.current) == null ? void 0 : _modifier$current2.moveAlongCurve(val);\r\n    }\r\n  }));\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(children, scene), obj && /*#__PURE__*/React.createElement(\"primitive\", {\r\n    object: obj\r\n  }));\r\n});\r\n\r\nexport { CurveModifier };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { MeshPhysicalMaterial } from 'three';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\r\n\r\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\r\n  constructor(parameters = {}) {\r\n    super(parameters);\r\n    this.setValues(parameters);\r\n    this._time = {\r\n      value: 0\r\n    };\r\n    this._distort = {\r\n      value: 0.4\r\n    };\r\n    this._radius = {\r\n      value: 1\r\n    };\r\n  }\r\n\r\n  onBeforeCompile(shader) {\r\n    shader.uniforms.time = this._time;\r\n    shader.uniforms.radius = this._radius;\r\n    shader.uniforms.distort = this._distort;\r\n    shader.vertexShader = `\r\n      uniform float time;\r\n      uniform float radius;\r\n      uniform float distort;\r\n      ${distort}\r\n      ${shader.vertexShader}\r\n    `;\r\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\r\n        float updateTime = time / 50.0;\r\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\r\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\r\n        `);\r\n  }\r\n\r\n  get time() {\r\n    return this._time.value;\r\n  }\r\n\r\n  set time(v) {\r\n    this._time.value = v;\r\n  }\r\n\r\n  get distort() {\r\n    return this._distort.value;\r\n  }\r\n\r\n  set distort(v) {\r\n    this._distort.value = v;\r\n  }\r\n\r\n  get radius() {\r\n    return this._radius.value;\r\n  }\r\n\r\n  set radius(v) {\r\n    this._radius.value = v;\r\n  }\r\n\r\n}\r\n\r\nconst MeshDistortMaterial = /*#__PURE__*/React.forwardRef(({\r\n  speed = 1,\r\n  ...props\r\n}, ref) => {\r\n  const [material] = React.useState(() => new DistortMaterialImpl());\r\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: material,\r\n    ref: ref,\r\n    attach: \"material\"\r\n  }, props));\r\n});\r\n\r\nexport { MeshDistortMaterial };\r\n", "var distort = \"#define GLSLIFY 1\\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}\"; // eslint-disable-line\r\n\r\nexport { distort as default };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { MeshStandardMaterial } from 'three';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nclass WobbleMaterialImpl extends MeshStandardMaterial {\r\n  constructor(parameters = {}) {\r\n    super(parameters);\r\n    this.setValues(parameters);\r\n    this._time = {\r\n      value: 0\r\n    };\r\n    this._factor = {\r\n      value: 1\r\n    };\r\n  }\r\n\r\n  onBeforeCompile(shader) {\r\n    shader.uniforms.time = this._time;\r\n    shader.uniforms.factor = this._factor;\r\n    shader.vertexShader = `\r\n      uniform float time;\r\n      uniform float factor;\r\n      ${shader.vertexShader}\r\n    `;\r\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\r\n        float c = cos( theta );\r\n        float s = sin( theta );\r\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\r\n        vec3 transformed = vec3( position ) * m;\r\n        vNormal = vNormal * m;`);\r\n  }\r\n\r\n  get time() {\r\n    return this._time.value;\r\n  }\r\n\r\n  set time(v) {\r\n    this._time.value = v;\r\n  }\r\n\r\n  get factor() {\r\n    return this._factor.value;\r\n  }\r\n\r\n  set factor(v) {\r\n    this._factor.value = v;\r\n  }\r\n\r\n}\r\n\r\nconst MeshWobbleMaterial = /*#__PURE__*/React.forwardRef(({\r\n  speed = 1,\r\n  ...props\r\n}, ref) => {\r\n  const [material] = React.useState(() => new WobbleMaterialImpl());\r\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: material,\r\n    ref: ref,\r\n    attach: \"material\"\r\n  }, props));\r\n});\r\n\r\nexport { MeshWobbleMaterial };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, HalfFloatType, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\r\nimport { extend, useThree, useFrame } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { BlurPass } from '../materials/BlurPass.js';\r\nimport { MeshReflectorMaterial as MeshReflectorMaterial$1 } from '../materials/MeshReflectorMaterial.js';\r\n\r\nextend({\r\n  MeshReflectorMaterialImpl: MeshReflectorMaterial$1\r\n});\r\nconst MeshReflectorMaterial = /*#__PURE__*/React.forwardRef(({\r\n  mixBlur = 0,\r\n  mixStrength = 1,\r\n  resolution = 256,\r\n  blur = [0, 0],\r\n  minDepthThreshold = 0.9,\r\n  maxDepthThreshold = 1,\r\n  depthScale = 0,\r\n  depthToBlurRatioBias = 0.25,\r\n  mirror = 0,\r\n  distortion = 1,\r\n  mixContrast = 1,\r\n  distortionMap,\r\n  reflectorOffset = 0,\r\n  ...props\r\n}, ref) => {\r\n  const gl = useThree(({\r\n    gl\r\n  }) => gl);\r\n  const camera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const scene = useThree(({\r\n    scene\r\n  }) => scene);\r\n  blur = Array.isArray(blur) ? blur : [blur, blur];\r\n  const hasBlur = blur[0] + blur[1] > 0;\r\n  const materialRef = React.useRef(null);\r\n  const [reflectorPlane] = React.useState(() => new Plane());\r\n  const [normal] = React.useState(() => new Vector3());\r\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\r\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\r\n  const [rotationMatrix] = React.useState(() => new Matrix4());\r\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\r\n  const [clipPlane] = React.useState(() => new Vector4());\r\n  const [view] = React.useState(() => new Vector3());\r\n  const [target] = React.useState(() => new Vector3());\r\n  const [q] = React.useState(() => new Vector4());\r\n  const [textureMatrix] = React.useState(() => new Matrix4());\r\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\r\n  const beforeRender = React.useCallback(() => {\r\n    var _materialRef$current;\r\n\r\n    // TODO: As of R3f 7-8 this should be __r3f.parent\r\n    const parent = materialRef.current.parent || ((_materialRef$current = materialRef.current) == null ? void 0 : _materialRef$current.__r3f.parent);\r\n    if (!parent) return;\r\n    reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld);\r\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\r\n    rotationMatrix.extractRotation(parent.matrixWorld);\r\n    normal.set(0, 0, 1);\r\n    normal.applyMatrix4(rotationMatrix);\r\n    reflectorWorldPosition.addScaledVector(normal, reflectorOffset);\r\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\r\n\r\n    if (view.dot(normal) > 0) return;\r\n    view.reflect(normal).negate();\r\n    view.add(reflectorWorldPosition);\r\n    rotationMatrix.extractRotation(camera.matrixWorld);\r\n    lookAtPosition.set(0, 0, -1);\r\n    lookAtPosition.applyMatrix4(rotationMatrix);\r\n    lookAtPosition.add(cameraWorldPosition);\r\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\r\n    target.reflect(normal).negate();\r\n    target.add(reflectorWorldPosition);\r\n    virtualCamera.position.copy(view);\r\n    virtualCamera.up.set(0, 1, 0);\r\n    virtualCamera.up.applyMatrix4(rotationMatrix);\r\n    virtualCamera.up.reflect(normal);\r\n    virtualCamera.lookAt(target);\r\n    virtualCamera.far = camera.far; // Used in WebGLBackground\r\n\r\n    virtualCamera.updateMatrixWorld();\r\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\r\n\r\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\r\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\r\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\r\n    textureMatrix.multiply(parent.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\r\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\r\n\r\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\r\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\r\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\r\n    const projectionMatrix = virtualCamera.projectionMatrix;\r\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\r\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\r\n    q.z = -1.0;\r\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\r\n\r\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\r\n\r\n    projectionMatrix.elements[2] = clipPlane.x;\r\n    projectionMatrix.elements[6] = clipPlane.y;\r\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\r\n    projectionMatrix.elements[14] = clipPlane.w;\r\n  }, [camera, reflectorOffset]);\r\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\r\n    const parameters = {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      encoding: gl.outputEncoding,\r\n      type: HalfFloatType\r\n    };\r\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\r\n    fbo1.depthBuffer = true;\r\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\r\n    fbo1.depthTexture.format = DepthFormat;\r\n    fbo1.depthTexture.type = UnsignedShortType;\r\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\r\n    const blurpass = new BlurPass({\r\n      gl,\r\n      resolution,\r\n      width: blur[0],\r\n      height: blur[1],\r\n      minDepthThreshold,\r\n      maxDepthThreshold,\r\n      depthScale,\r\n      depthToBlurRatioBias\r\n    });\r\n    const reflectorProps = {\r\n      mirror,\r\n      textureMatrix,\r\n      mixBlur,\r\n      tDiffuse: fbo1.texture,\r\n      tDepth: fbo1.depthTexture,\r\n      tDiffuseBlur: fbo2.texture,\r\n      hasBlur,\r\n      mixStrength,\r\n      minDepthThreshold,\r\n      maxDepthThreshold,\r\n      depthScale,\r\n      depthToBlurRatioBias,\r\n      distortion,\r\n      distortionMap,\r\n      mixContrast,\r\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\r\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\r\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\r\n    };\r\n    return [fbo1, fbo2, blurpass, reflectorProps];\r\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, distortion, distortionMap, mixContrast]);\r\n  useFrame(() => {\r\n    var _materialRef$current2;\r\n\r\n    // TODO: As of R3f 7-8 this should be __r3f.parent\r\n    const parent = materialRef.current.parent || ((_materialRef$current2 = materialRef.current) == null ? void 0 : _materialRef$current2.__r3f.parent);\r\n    if (!parent) return;\r\n    parent.visible = false;\r\n    const currentXrEnabled = gl.xr.enabled;\r\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\r\n    beforeRender();\r\n    gl.xr.enabled = false;\r\n    gl.shadowMap.autoUpdate = false;\r\n    gl.setRenderTarget(fbo1);\r\n    gl.state.buffers.depth.setMask(true);\r\n    if (!gl.autoClear) gl.clear();\r\n    gl.render(scene, virtualCamera);\r\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\r\n    gl.xr.enabled = currentXrEnabled;\r\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\r\n    parent.visible = true;\r\n    gl.setRenderTarget(null);\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"meshReflectorMaterialImpl\", _extends({\r\n    attach: \"material\" // Defines can't be updated dynamically, so we need to recreate the material\r\n    ,\r\n    key: 'key' + reflectorProps['defines-USE_BLUR'] + reflectorProps['defines-USE_DEPTH'] + reflectorProps['defines-USE_DISTORTION'],\r\n    ref: mergeRefs([materialRef, ref])\r\n  }, reflectorProps, props));\r\n});\r\n\r\nexport { MeshReflectorMaterial };\r\n", "import { WebGLRenderTarget, LinearFilter, Vector2, Scene, Camera, BufferGeometry, BufferAttribute, Mesh } from 'three';\r\nimport { ConvolutionMaterial } from './ConvolutionMaterial.js';\r\n\r\nclass BlurPass {\r\n  constructor({\r\n    gl,\r\n    resolution,\r\n    width = 500,\r\n    height = 500,\r\n    minDepthThreshold = 0,\r\n    maxDepthThreshold = 1,\r\n    depthScale = 0,\r\n    depthToBlurRatioBias = 0.25\r\n  }) {\r\n    this.renderToScreen = false;\r\n    this.renderTargetA = new WebGLRenderTarget(resolution, resolution, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      stencilBuffer: false,\r\n      depthBuffer: false,\r\n      encoding: gl.outputEncoding\r\n    });\r\n    this.renderTargetB = this.renderTargetA.clone();\r\n    this.convolutionMaterial = new ConvolutionMaterial();\r\n    this.convolutionMaterial.setTexelSize(1.0 / width, 1.0 / height);\r\n    this.convolutionMaterial.setResolution(new Vector2(width, height));\r\n    this.scene = new Scene();\r\n    this.camera = new Camera();\r\n    this.convolutionMaterial.uniforms.minDepthThreshold.value = minDepthThreshold;\r\n    this.convolutionMaterial.uniforms.maxDepthThreshold.value = maxDepthThreshold;\r\n    this.convolutionMaterial.uniforms.depthScale.value = depthScale;\r\n    this.convolutionMaterial.uniforms.depthToBlurRatioBias.value = depthToBlurRatioBias;\r\n    this.convolutionMaterial.defines.USE_DEPTH = depthScale > 0;\r\n    const vertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);\r\n    const uvs = new Float32Array([0, 0, 2, 0, 0, 2]);\r\n    const geometry = new BufferGeometry();\r\n    geometry.setAttribute('position', new BufferAttribute(vertices, 3));\r\n    geometry.setAttribute('uv', new BufferAttribute(uvs, 2));\r\n    this.screen = new Mesh(geometry, this.convolutionMaterial);\r\n    this.screen.frustumCulled = false;\r\n    this.scene.add(this.screen);\r\n  }\r\n\r\n  render(renderer, inputBuffer, outputBuffer) {\r\n    const scene = this.scene;\r\n    const camera = this.camera;\r\n    const renderTargetA = this.renderTargetA;\r\n    const renderTargetB = this.renderTargetB;\r\n    let material = this.convolutionMaterial;\r\n    let uniforms = material.uniforms;\r\n    uniforms.depthBuffer.value = inputBuffer.depthTexture;\r\n    const kernel = material.kernel;\r\n    let lastRT = inputBuffer;\r\n    let destRT;\r\n    let i, l; // Apply the multi-pass blur.\r\n\r\n    for (i = 0, l = kernel.length - 1; i < l; ++i) {\r\n      // Alternate between targets.\r\n      destRT = (i & 1) === 0 ? renderTargetA : renderTargetB;\r\n      uniforms.kernel.value = kernel[i];\r\n      uniforms.inputBuffer.value = lastRT.texture;\r\n      renderer.setRenderTarget(destRT);\r\n      renderer.render(scene, camera);\r\n      lastRT = destRT;\r\n    }\r\n\r\n    uniforms.kernel.value = kernel[i];\r\n    uniforms.inputBuffer.value = lastRT.texture;\r\n    renderer.setRenderTarget(this.renderToScreen ? null : outputBuffer);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n}\r\n\r\nexport { BlurPass };\r\n", "import { ShaderMaterial, Vector2, Uniform, NoBlending } from 'three';\r\n\r\nclass ConvolutionMaterial extends ShaderMaterial {\r\n  constructor(texelSize = new Vector2()) {\r\n    super({\r\n      uniforms: {\r\n        inputBuffer: new Uniform(null),\r\n        depthBuffer: new Uniform(null),\r\n        resolution: new Uniform(new Vector2()),\r\n        texelSize: new Uniform(new Vector2()),\r\n        halfTexelSize: new Uniform(new Vector2()),\r\n        kernel: new Uniform(0.0),\r\n        scale: new Uniform(1.0),\r\n        cameraNear: new Uniform(0.0),\r\n        cameraFar: new Uniform(1.0),\r\n        minDepthThreshold: new Uniform(0.0),\r\n        maxDepthThreshold: new Uniform(1.0),\r\n        depthScale: new Uniform(0.0),\r\n        depthToBlurRatioBias: new Uniform(0.25)\r\n      },\r\n      fragmentShader: `#include <common>\r\n        #include <dithering_pars_fragment>      \r\n        uniform sampler2D inputBuffer;\r\n        uniform sampler2D depthBuffer;\r\n        uniform float cameraNear;\r\n        uniform float cameraFar;\r\n        uniform float minDepthThreshold;\r\n        uniform float maxDepthThreshold;\r\n        uniform float depthScale;\r\n        uniform float depthToBlurRatioBias;\r\n        varying vec2 vUv;\r\n        varying vec2 vUv0;\r\n        varying vec2 vUv1;\r\n        varying vec2 vUv2;\r\n        varying vec2 vUv3;\r\n\r\n        void main() {\r\n          float depthFactor = 0.0;\r\n          \r\n          #ifdef USE_DEPTH\r\n            vec4 depth = texture2D(depthBuffer, vUv);\r\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\r\n            depthFactor *= depthScale;\r\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\r\n          #endif\r\n          \r\n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\r\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\r\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\r\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\r\n          gl_FragColor = sum * 0.25 ;\r\n\r\n          #include <dithering_fragment>\r\n          #include <tonemapping_fragment>\r\n          #include <encodings_fragment>\r\n        }`,\r\n      vertexShader: `uniform vec2 texelSize;\r\n        uniform vec2 halfTexelSize;\r\n        uniform float kernel;\r\n        uniform float scale;\r\n        varying vec2 vUv;\r\n        varying vec2 vUv0;\r\n        varying vec2 vUv1;\r\n        varying vec2 vUv2;\r\n        varying vec2 vUv3;\r\n\r\n        void main() {\r\n          vec2 uv = position.xy * 0.5 + 0.5;\r\n          vUv = uv;\r\n\r\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\r\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\r\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\r\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\r\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\r\n\r\n          gl_Position = vec4(position.xy, 1.0, 1.0);\r\n        }`,\r\n      blending: NoBlending,\r\n      depthWrite: false,\r\n      depthTest: false\r\n    });\r\n    this.toneMapped = false;\r\n    this.setTexelSize(texelSize.x, texelSize.y);\r\n    this.kernel = new Float32Array([0.0, 1.0, 2.0, 2.0, 3.0]);\r\n  }\r\n\r\n  setTexelSize(x, y) {\r\n    this.uniforms.texelSize.value.set(x, y);\r\n    this.uniforms.halfTexelSize.value.set(x, y).multiplyScalar(0.5);\r\n  }\r\n\r\n  setResolution(resolution) {\r\n    this.uniforms.resolution.value.copy(resolution);\r\n  }\r\n\r\n}\r\n\r\nexport { ConvolutionMaterial };\r\n", "import { MeshStandardMaterial } from 'three';\r\n\r\nclass MeshReflectorMaterial extends MeshStandardMaterial {\r\n  constructor(parameters = {}) {\r\n    super(parameters);\r\n    this._tDepth = {\r\n      value: null\r\n    };\r\n    this._distortionMap = {\r\n      value: null\r\n    };\r\n    this._tDiffuse = {\r\n      value: null\r\n    };\r\n    this._tDiffuseBlur = {\r\n      value: null\r\n    };\r\n    this._textureMatrix = {\r\n      value: null\r\n    };\r\n    this._hasBlur = {\r\n      value: false\r\n    };\r\n    this._mirror = {\r\n      value: 0.0\r\n    };\r\n    this._mixBlur = {\r\n      value: 0.0\r\n    };\r\n    this._blurStrength = {\r\n      value: 0.5\r\n    };\r\n    this._minDepthThreshold = {\r\n      value: 0.9\r\n    };\r\n    this._maxDepthThreshold = {\r\n      value: 1\r\n    };\r\n    this._depthScale = {\r\n      value: 0\r\n    };\r\n    this._depthToBlurRatioBias = {\r\n      value: 0.25\r\n    };\r\n    this._distortion = {\r\n      value: 1\r\n    };\r\n    this._mixContrast = {\r\n      value: 1.0\r\n    };\r\n    this.setValues(parameters);\r\n  }\r\n\r\n  onBeforeCompile(shader) {\r\n    var _shader$defines;\r\n\r\n    if (!((_shader$defines = shader.defines) != null && _shader$defines.USE_UV)) {\r\n      shader.defines.USE_UV = '';\r\n    }\r\n\r\n    shader.uniforms.hasBlur = this._hasBlur;\r\n    shader.uniforms.tDiffuse = this._tDiffuse;\r\n    shader.uniforms.tDepth = this._tDepth;\r\n    shader.uniforms.distortionMap = this._distortionMap;\r\n    shader.uniforms.tDiffuseBlur = this._tDiffuseBlur;\r\n    shader.uniforms.textureMatrix = this._textureMatrix;\r\n    shader.uniforms.mirror = this._mirror;\r\n    shader.uniforms.mixBlur = this._mixBlur;\r\n    shader.uniforms.mixStrength = this._blurStrength;\r\n    shader.uniforms.minDepthThreshold = this._minDepthThreshold;\r\n    shader.uniforms.maxDepthThreshold = this._maxDepthThreshold;\r\n    shader.uniforms.depthScale = this._depthScale;\r\n    shader.uniforms.depthToBlurRatioBias = this._depthToBlurRatioBias;\r\n    shader.uniforms.distortion = this._distortion;\r\n    shader.uniforms.mixContrast = this._mixContrast;\r\n    shader.vertexShader = `\r\n        uniform mat4 textureMatrix;\r\n        varying vec4 my_vUv;\r\n      ${shader.vertexShader}`;\r\n    shader.vertexShader = shader.vertexShader.replace('#include <project_vertex>', `#include <project_vertex>\r\n        my_vUv = textureMatrix * vec4( position, 1.0 );\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );`);\r\n    shader.fragmentShader = `\r\n        uniform sampler2D tDiffuse;\r\n        uniform sampler2D tDiffuseBlur;\r\n        uniform sampler2D tDepth;\r\n        uniform sampler2D distortionMap;\r\n        uniform float distortion;\r\n        uniform float cameraNear;\r\n\t\t\t  uniform float cameraFar;\r\n        uniform bool hasBlur;\r\n        uniform float mixBlur;\r\n        uniform float mirror;\r\n        uniform float mixStrength;\r\n        uniform float minDepthThreshold;\r\n        uniform float maxDepthThreshold;\r\n        uniform float mixContrast;\r\n        uniform float depthScale;\r\n        uniform float depthToBlurRatioBias;\r\n        varying vec4 my_vUv;\r\n        ${shader.fragmentShader}`;\r\n    shader.fragmentShader = shader.fragmentShader.replace('#include <emissivemap_fragment>', `#include <emissivemap_fragment>\r\n\r\n      float distortionFactor = 0.0;\r\n      #ifdef USE_DISTORTION\r\n        distortionFactor = texture2D(distortionMap, vUv).r * distortion;\r\n      #endif\r\n\r\n      vec4 new_vUv = my_vUv;\r\n      new_vUv.x += distortionFactor;\r\n      new_vUv.y += distortionFactor;\r\n\r\n      vec4 base = texture2DProj(tDiffuse, new_vUv);\r\n      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);\r\n\r\n      vec4 merge = base;\r\n\r\n      #ifdef USE_NORMALMAP\r\n        vec2 normal_uv = vec2(0.0);\r\n        vec4 normalColor = texture2D(normalMap, vUv * normalScale);\r\n        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\r\n        vec3 coord = new_vUv.xyz / new_vUv.w;\r\n        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;\r\n        vec4 base_normal = texture2D(tDiffuse, normal_uv);\r\n        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);\r\n        merge = base_normal;\r\n        blur = blur_normal;\r\n      #endif\r\n\r\n      float depthFactor = 0.0001;\r\n      float blurFactor = 0.0;\r\n\r\n      #ifdef USE_DEPTH\r\n        vec4 depth = texture2DProj(tDepth, new_vUv);\r\n        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\r\n        depthFactor *= depthScale;\r\n        depthFactor = max(0.0001, min(1.0, depthFactor));\r\n\r\n        #ifdef USE_BLUR\r\n          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);\r\n          merge = merge * min(1.0, depthFactor + 0.5);\r\n        #else\r\n          merge = merge * depthFactor;\r\n        #endif\r\n\r\n      #endif\r\n\r\n      float reflectorRoughnessFactor = roughness;\r\n      #ifdef USE_ROUGHNESSMAP\r\n        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );\r\n        reflectorRoughnessFactor *= reflectorTexelRoughness.g;\r\n      #endif\r\n\r\n      #ifdef USE_BLUR\r\n        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);\r\n        merge = mix(merge, blur, blurFactor);\r\n      #endif\r\n\r\n      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);\r\n      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;\r\n      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;\r\n      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;\r\n\r\n      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);\r\n      `);\r\n  }\r\n\r\n  get tDiffuse() {\r\n    return this._tDiffuse.value;\r\n  }\r\n\r\n  set tDiffuse(v) {\r\n    this._tDiffuse.value = v;\r\n  }\r\n\r\n  get tDepth() {\r\n    return this._tDepth.value;\r\n  }\r\n\r\n  set tDepth(v) {\r\n    this._tDepth.value = v;\r\n  }\r\n\r\n  get distortionMap() {\r\n    return this._distortionMap.value;\r\n  }\r\n\r\n  set distortionMap(v) {\r\n    this._distortionMap.value = v;\r\n  }\r\n\r\n  get tDiffuseBlur() {\r\n    return this._tDiffuseBlur.value;\r\n  }\r\n\r\n  set tDiffuseBlur(v) {\r\n    this._tDiffuseBlur.value = v;\r\n  }\r\n\r\n  get textureMatrix() {\r\n    return this._textureMatrix.value;\r\n  }\r\n\r\n  set textureMatrix(v) {\r\n    this._textureMatrix.value = v;\r\n  }\r\n\r\n  get hasBlur() {\r\n    return this._hasBlur.value;\r\n  }\r\n\r\n  set hasBlur(v) {\r\n    this._hasBlur.value = v;\r\n  }\r\n\r\n  get mirror() {\r\n    return this._mirror.value;\r\n  }\r\n\r\n  set mirror(v) {\r\n    this._mirror.value = v;\r\n  }\r\n\r\n  get mixBlur() {\r\n    return this._mixBlur.value;\r\n  }\r\n\r\n  set mixBlur(v) {\r\n    this._mixBlur.value = v;\r\n  }\r\n\r\n  get mixStrength() {\r\n    return this._blurStrength.value;\r\n  }\r\n\r\n  set mixStrength(v) {\r\n    this._blurStrength.value = v;\r\n  }\r\n\r\n  get minDepthThreshold() {\r\n    return this._minDepthThreshold.value;\r\n  }\r\n\r\n  set minDepthThreshold(v) {\r\n    this._minDepthThreshold.value = v;\r\n  }\r\n\r\n  get maxDepthThreshold() {\r\n    return this._maxDepthThreshold.value;\r\n  }\r\n\r\n  set maxDepthThreshold(v) {\r\n    this._maxDepthThreshold.value = v;\r\n  }\r\n\r\n  get depthScale() {\r\n    return this._depthScale.value;\r\n  }\r\n\r\n  set depthScale(v) {\r\n    this._depthScale.value = v;\r\n  }\r\n\r\n  get depthToBlurRatioBias() {\r\n    return this._depthToBlurRatioBias.value;\r\n  }\r\n\r\n  set depthToBlurRatioBias(v) {\r\n    this._depthToBlurRatioBias.value = v;\r\n  }\r\n\r\n  get distortion() {\r\n    return this._distortion.value;\r\n  }\r\n\r\n  set distortion(v) {\r\n    this._distortion.value = v;\r\n  }\r\n\r\n  get mixContrast() {\r\n    return this._mixContrast.value;\r\n  }\r\n\r\n  set mixContrast(v) {\r\n    this._mixContrast.value = v;\r\n  }\r\n\r\n}\r\n\r\nexport { MeshReflectorMaterial };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\n\r\nclass PointMaterialImpl extends THREE.PointsMaterial {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onBeforeCompile = shader => {\r\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', `\r\n        #include <output_fragment>\r\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n      float r = dot(cxy, cxy);\r\n      float delta = fwidth(r);     \r\n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\r\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\r\n      `);\r\n    };\r\n  }\r\n\r\n}\r\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  const [material] = React.useState(() => new PointMaterialImpl(null));\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\r\n    object: material,\r\n    ref: ref,\r\n    attach: \"material\"\r\n  }));\r\n});\r\n\r\nexport { PointMaterial, PointMaterialImpl };\r\n", "import * as THREE from 'three';\r\n\r\nconst pcss = ({\r\n  frustum = 3.75,\r\n  size = 0.005,\r\n  near = 9.5,\r\n  samples = 17,\r\n  rings = 11\r\n} = {}) => `#define LIGHT_WORLD_SIZE ${size}\r\n#define LIGHT_FRUSTUM_WIDTH ${frustum}\r\n#define LIGHT_SIZE_UV (LIGHT_WORLD_SIZE / LIGHT_FRUSTUM_WIDTH)\r\n#define NEAR_PLANE ${near}\r\n\r\n#define NUM_SAMPLES ${samples}\r\n#define NUM_RINGS ${rings}\r\n#define BLOCKER_SEARCH_NUM_SAMPLES NUM_SAMPLES\r\n#define PCF_NUM_SAMPLES NUM_SAMPLES\r\n\r\nvec2 poissonDisk[NUM_SAMPLES];\r\n\r\nvoid initPoissonSamples(const in vec2 randomSeed) {\r\n  float ANGLE_STEP = PI2 * float(NUM_RINGS) / float(NUM_SAMPLES);\r\n  float INV_NUM_SAMPLES = 1.0 / float(NUM_SAMPLES);\r\n  float angle = rand(randomSeed) * PI2;\r\n  float radius = INV_NUM_SAMPLES;\r\n  float radiusStep = radius;\r\n  for (int i = 0; i < NUM_SAMPLES; i++) {\r\n    poissonDisk[i] = vec2(cos(angle), sin(angle)) * pow(radius, 0.75);\r\n    radius += radiusStep;\r\n    angle += ANGLE_STEP;\r\n  }\r\n}\r\n\r\nfloat penumbraSize(const in float zReceiver, const in float zBlocker) { // Parallel plane estimation\r\n  return (zReceiver - zBlocker) / zBlocker;\r\n}\r\n\r\nfloat findBlocker(sampler2D shadowMap, const in vec2 uv, const in float zReceiver) {\r\n  float searchRadius = LIGHT_SIZE_UV * (zReceiver - NEAR_PLANE) / zReceiver;\r\n  float blockerDepthSum = 0.0;\r\n  int numBlockers = 0;\r\n  for (int i = 0; i < BLOCKER_SEARCH_NUM_SAMPLES; i++) {\r\n    float shadowMapDepth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[i] * searchRadius));\r\n    if (shadowMapDepth < zReceiver) {\r\n      blockerDepthSum += shadowMapDepth;\r\n      numBlockers++;\r\n    }\r\n  }\r\n  if (numBlockers == 0) return -1.0;\r\n  return blockerDepthSum / float(numBlockers);\r\n}\r\n\r\nfloat PCF_Filter(sampler2D shadowMap, vec2 uv, float zReceiver, float filterRadius) {\r\n  float sum = 0.0;\r\n  for (int i = 0; i < PCF_NUM_SAMPLES; i++) {\r\n    float depth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[ i ] * filterRadius));\r\n    if (zReceiver <= depth) sum += 1.0;\r\n  }\r\n  for (int i = 0; i < PCF_NUM_SAMPLES; i++) {\r\n    float depth = unpackRGBAToDepth(texture2D(shadowMap, uv + -poissonDisk[ i ].yx * filterRadius));\r\n    if (zReceiver <= depth) sum += 1.0;\r\n  }\r\n  return sum / (2.0 * float(PCF_NUM_SAMPLES));\r\n}\r\n\r\nfloat PCSS(sampler2D shadowMap, vec4 coords) {\r\n  vec2 uv = coords.xy;\r\n  float zReceiver = coords.z; // Assumed to be eye-space z in this code\r\n  initPoissonSamples(uv);\r\n  float avgBlockerDepth = findBlocker(shadowMap, uv, zReceiver);\r\n  if (avgBlockerDepth == -1.0) return 1.0;\r\n  float penumbraRatio = penumbraSize(zReceiver, avgBlockerDepth);\r\n  float filterRadius = penumbraRatio * LIGHT_SIZE_UV * NEAR_PLANE / zReceiver;\r\n  return PCF_Filter(shadowMap, uv, zReceiver, filterRadius);\r\n}`;\r\n\r\nlet deployed = false;\r\nconst softShadows = props => {\r\n  // Avoid adding the effect twice, which may happen in HMR scenarios\r\n  if (!deployed) {\r\n    deployed = true;\r\n    let shader = THREE.ShaderChunk.shadowmap_pars_fragment;\r\n    shader = shader.replace('#ifdef USE_SHADOWMAP', '#ifdef USE_SHADOWMAP\\n' + pcss({ ...props\r\n    }));\r\n    shader = shader.replace('#if defined( SHADOWMAP_TYPE_PCF )', '\\nreturn PCSS(shadowMap, shadowCoord);\\n#if defined( SHADOWMAP_TYPE_PCF )');\r\n    THREE.ShaderChunk.shadowmap_pars_fragment = shader;\r\n  }\r\n};\r\n\r\nexport { softShadows };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\n\r\nfunction create(type) {\r\n  const El = type + 'BufferGeometry';\r\n  return /*#__PURE__*/React.forwardRef(({\r\n    args,\r\n    children,\r\n    ...props\r\n  }, ref) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    ref: ref\r\n  }, props), /*#__PURE__*/React.createElement(El, {\r\n    attach: \"geometry\",\r\n    args: args\r\n  }), children));\r\n}\r\n\r\nconst Box = create('box');\r\nconst Circle = create('circle');\r\nconst Cone = create('cone');\r\nconst Cylinder = create('cylinder');\r\nconst Sphere = create('sphere');\r\nconst Plane = create('plane');\r\nconst Tube = create('tube');\r\nconst Torus = create('torus');\r\nconst TorusKnot = create('torusKnot');\r\nconst Tetrahedron = create('tetrahedron');\r\nconst Ring = create('ring');\r\nconst Polyhedron = create('polyhedron');\r\nconst Icosahedron = create('icosahedron');\r\nconst Octahedron = create('octahedron');\r\nconst Dodecahedron = create('dodecahedron');\r\nconst Extrude = create('extrude');\r\nconst Lathe = create('lathe');\r\nconst Capsule = create('capsule');\r\n\r\nexport { Box, Capsule, Circle, Cone, Cylinder, Dodecahedron, Extrude, Icosahedron, Lathe, Octahedron, Plane, Polyhedron, Ring, Sphere, Tetrahedron, Torus, TorusKnot, Tube };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Shape } from 'three';\r\n\r\nconst eps = 0.00001;\r\n\r\nfunction createShape(width, height, radius0) {\r\n  const shape = new Shape();\r\n  const radius = radius0 - eps;\r\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\r\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\r\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\r\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\r\n  return shape;\r\n}\r\n\r\nconst RoundedBox = /*#__PURE__*/React.forwardRef(function RoundedBox({\r\n  args: [width = 1, height = 1, depth = 1] = [],\r\n  radius = 0.05,\r\n  steps = 1,\r\n  smoothness = 4,\r\n  children,\r\n  ...rest\r\n}, ref) {\r\n  const shape = React.useMemo(() => createShape(width, height, radius), [width, height, radius]);\r\n  const params = React.useMemo(() => ({\r\n    depth: depth - radius * 2,\r\n    bevelEnabled: true,\r\n    bevelSegments: smoothness * 2,\r\n    steps,\r\n    bevelSize: radius - eps,\r\n    bevelThickness: radius,\r\n    curveSegments: smoothness\r\n  }), [depth, radius, smoothness]);\r\n  const geomRef = React.useRef();\r\n  React.useLayoutEffect(() => {\r\n    if (geomRef.current) {\r\n      geomRef.current.center();\r\n    }\r\n  }, [shape, params]);\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    ref: ref\r\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeGeometry\", {\r\n    ref: geomRef,\r\n    args: [shape, params]\r\n  }), children);\r\n});\r\n\r\nexport { RoundedBox };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\n\r\nfunction createScreenQuadGeometry() {\r\n  const geometry = new THREE.BufferGeometry();\r\n  const vertices = new Float32Array([-1, -1, 3, -1, -1, 3]);\r\n  geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 2));\r\n  return geometry;\r\n}\r\n\r\nconst ScreenQuad = /*#__PURE__*/React.forwardRef(function ScreenQuad({\r\n  children,\r\n  ...restProps\r\n}, ref) {\r\n  const geometry = React.useMemo(createScreenQuadGeometry, []);\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    ref: ref,\r\n    geometry: geometry,\r\n    frustumCulled: false\r\n  }, restProps), children);\r\n});\r\n\r\nexport { ScreenQuad };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { Box3, Vector3, Sphere } from 'three';\r\nimport * as React from 'react';\r\n\r\nconst Center = /*#__PURE__*/React.forwardRef(function Center({\r\n  children,\r\n  alignTop,\r\n  ...props\r\n}, ref) {\r\n  const outer = React.useRef(null);\r\n  const inner = React.useRef(null);\r\n  React.useLayoutEffect(() => {\r\n    outer.current.position.set(0, 0, 0);\r\n    outer.current.updateWorldMatrix(true, true);\r\n    const box3 = new Box3().setFromObject(inner.current);\r\n    const center = new Vector3();\r\n    const sphere = new Sphere();\r\n    const height = box3.max.y - box3.min.y;\r\n    box3.getCenter(center);\r\n    box3.getBoundingSphere(sphere);\r\n    outer.current.position.set(-center.x, -center.y + (alignTop ? height / 2 : 0), -center.z);\r\n  }, [children]);\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    ref: ref\r\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: outer\r\n  }, /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: inner\r\n  }, children)));\r\n});\r\n\r\nexport { Center };\r\n", "import * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\n\r\nconst isOrthographic = def => def && def.isOrthographicCamera;\r\n\r\nconst isBox3 = def => def && def.isBox3;\r\n\r\nconst context = /*#__PURE__*/React.createContext(null);\r\nfunction Bounds({\r\n  children,\r\n  damping = 6,\r\n  fit,\r\n  clip,\r\n  observe,\r\n  margin = 1.2,\r\n  eps = 0.01,\r\n  onFit\r\n}) {\r\n  const ref = React.useRef(null);\r\n  const {\r\n    camera,\r\n    invalidate,\r\n    size,\r\n    controls: controlsImpl\r\n  } = useThree();\r\n  const controls = controlsImpl;\r\n  const onFitRef = React.useRef(onFit);\r\n  onFitRef.current = onFit;\r\n\r\n  function equals(a, b) {\r\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\r\n  }\r\n\r\n  function damp(v, t, lambda, delta) {\r\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\r\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\r\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\r\n  }\r\n\r\n  const [current] = React.useState(() => ({\r\n    animating: false,\r\n    focus: new THREE.Vector3(),\r\n    camera: new THREE.Vector3(),\r\n    zoom: 1\r\n  }));\r\n  const [goal] = React.useState(() => ({\r\n    focus: new THREE.Vector3(),\r\n    camera: new THREE.Vector3(),\r\n    zoom: 1\r\n  }));\r\n  const [box] = React.useState(() => new THREE.Box3());\r\n  const api = React.useMemo(() => {\r\n    function getSize() {\r\n      const size = box.getSize(new THREE.Vector3());\r\n      const center = box.getCenter(new THREE.Vector3());\r\n      const maxSize = Math.max(size.x, size.y, size.z);\r\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\r\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\r\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\r\n      return {\r\n        box,\r\n        size,\r\n        center,\r\n        distance\r\n      };\r\n    }\r\n\r\n    return {\r\n      getSize,\r\n\r\n      refresh(object) {\r\n        if (isBox3(object)) box.copy(object);else {\r\n          const target = object || ref.current;\r\n          target.updateWorldMatrix(true, true);\r\n          box.setFromObject(target);\r\n        }\r\n\r\n        if (box.isEmpty()) {\r\n          const max = camera.position.length() || 10;\r\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\r\n        }\r\n\r\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\r\n          // Put camera on a sphere along which it should moves\r\n          const {\r\n            distance\r\n          } = getSize();\r\n          const direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\r\n          const newPos = controls.target.clone().add(direction);\r\n          camera.position.copy(newPos);\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      clip() {\r\n        const {\r\n          distance\r\n        } = getSize();\r\n        if (controls) controls.maxDistance = distance * 10;\r\n        camera.near = distance / 100;\r\n        camera.far = distance * 100;\r\n        camera.updateProjectionMatrix();\r\n        if (controls) controls.update();\r\n        invalidate();\r\n        return this;\r\n      },\r\n\r\n      fit() {\r\n        current.camera.copy(camera.position);\r\n        if (controls) current.focus.copy(controls.target);\r\n        const {\r\n          center,\r\n          distance\r\n        } = getSize();\r\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\r\n        goal.camera.copy(center).sub(direction);\r\n        goal.focus.copy(center);\r\n\r\n        if (isOrthographic(camera)) {\r\n          current.zoom = camera.zoom;\r\n          let maxHeight = 0,\r\n              maxWidth = 0;\r\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\r\n\r\n          center.applyMatrix4(camera.matrixWorldInverse);\r\n\r\n          for (const v of vertices) {\r\n            v.applyMatrix4(camera.matrixWorldInverse);\r\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\r\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\r\n          }\r\n\r\n          maxHeight *= 2;\r\n          maxWidth *= 2;\r\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\r\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\r\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\r\n\r\n          if (!damping) {\r\n            camera.zoom = goal.zoom;\r\n            camera.updateProjectionMatrix();\r\n          }\r\n        }\r\n\r\n        if (damping) {\r\n          current.animating = true;\r\n        } else {\r\n          camera.position.copy(goal.camera);\r\n          camera.lookAt(goal.focus);\r\n\r\n          if (controls) {\r\n            controls.target.copy(goal.focus);\r\n            controls.update();\r\n          }\r\n        }\r\n\r\n        if (onFitRef.current) onFitRef.current(this.getSize());\r\n        invalidate();\r\n        return this;\r\n      }\r\n\r\n    };\r\n  }, [box, camera, controls, margin, damping, invalidate]);\r\n  React.useLayoutEffect(() => {\r\n    if (controls) {\r\n      // Try to prevent drag hijacking\r\n      const callback = () => current.animating = false;\r\n\r\n      controls.addEventListener('start', callback);\r\n      return () => controls.removeEventListener('start', callback);\r\n    }\r\n  }, [controls]); // Scale pointer on window resize\r\n\r\n  const count = React.useRef(0);\r\n  React.useLayoutEffect(() => {\r\n    if (observe || count.current++ === 0) {\r\n      api.refresh();\r\n      if (fit) api.fit();\r\n      if (clip) api.clip();\r\n    }\r\n  }, [size, clip, fit, observe, camera, controls]);\r\n  useFrame((state, delta) => {\r\n    if (current.animating) {\r\n      damp(current.focus, goal.focus, damping, delta);\r\n      damp(current.camera, goal.camera, damping, delta);\r\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\r\n      camera.position.copy(current.camera);\r\n\r\n      if (isOrthographic(camera)) {\r\n        camera.zoom = current.zoom;\r\n        camera.updateProjectionMatrix();\r\n      }\r\n\r\n      if (!controls) {\r\n        camera.lookAt(current.focus);\r\n      } else {\r\n        controls.target.copy(current.focus);\r\n        controls.update();\r\n      }\r\n\r\n      invalidate();\r\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\r\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\r\n      if (controls && !equals(current.focus, goal.focus)) return;\r\n      current.animating = false;\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: ref\r\n  }, /*#__PURE__*/React.createElement(context.Provider, {\r\n    value: api\r\n  }, children));\r\n}\r\nfunction useBounds() {\r\n  return React.useContext(context);\r\n}\r\n\r\nexport { Bounds, useBounds };\r\n", "import * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { SimplexNoise } from 'three-stdlib';\r\n\r\nconst CameraShake = /*#__PURE__*/React.forwardRef(({\r\n  intensity = 1,\r\n  decay,\r\n  decayRate = 0.65,\r\n  maxYaw = 0.1,\r\n  maxPitch = 0.1,\r\n  maxRoll = 0.1,\r\n  yawFrequency = 0.1,\r\n  pitchFrequency = 0.1,\r\n  rollFrequency = 0.1\r\n}, ref) => {\r\n  const camera = useThree(state => state.camera);\r\n  const defaultControls = useThree(state => state.controls);\r\n  const intensityRef = React.useRef(intensity);\r\n  const initialRotation = React.useRef(camera.rotation.clone());\r\n  const [yawNoise] = React.useState(() => new SimplexNoise());\r\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\r\n  const [rollNoise] = React.useState(() => new SimplexNoise());\r\n\r\n  const constrainIntensity = () => {\r\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\r\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\r\n    }\r\n  };\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    getIntensity: () => intensityRef.current,\r\n    setIntensity: val => {\r\n      intensityRef.current = val;\r\n      constrainIntensity();\r\n    }\r\n  }), []);\r\n  React.useEffect(() => {\r\n    if (defaultControls) {\r\n      const callback = () => void (initialRotation.current = camera.rotation.clone());\r\n\r\n      defaultControls.addEventListener('change', callback);\r\n      callback();\r\n      return () => void defaultControls.removeEventListener('change', callback);\r\n    }\r\n  }, [camera, defaultControls]);\r\n  useFrame((state, delta) => {\r\n    const shake = Math.pow(intensityRef.current, 2);\r\n    const yaw = maxYaw * shake * yawNoise.noise(state.clock.elapsedTime * yawFrequency, 1);\r\n    const pitch = maxPitch * shake * pitchNoise.noise(state.clock.elapsedTime * pitchFrequency, 1);\r\n    const roll = maxRoll * shake * rollNoise.noise(state.clock.elapsedTime * rollFrequency, 1);\r\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\r\n\r\n    if (decay && intensityRef.current > 0) {\r\n      intensityRef.current -= decayRate * delta;\r\n      constrainIntensity();\r\n    }\r\n  });\r\n  return null;\r\n});\r\n\r\nexport { CameraShake };\r\n", "import * as React from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport * as THREE from 'three';\r\n\r\nconst Float = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  speed = 1,\r\n  rotationIntensity = 1,\r\n  floatIntensity = 1,\r\n  floatingRange = [-0.1, 0.1],\r\n  ...props\r\n}, forwardRef) => {\r\n  const ref = React.useRef(null);\r\n  const offset = React.useRef(Math.random() * 10000);\r\n  useFrame(state => {\r\n    var _floatingRange$, _floatingRange$2;\r\n\r\n    const t = offset.current + state.clock.getElapsedTime();\r\n    ref.current.rotation.x = Math.cos(t / 4 * speed) / 8 * rotationIntensity;\r\n    ref.current.rotation.y = Math.sin(t / 4 * speed) / 8 * rotationIntensity;\r\n    ref.current.rotation.z = Math.sin(t / 4 * speed) / 20 * rotationIntensity;\r\n    let yPosition = Math.sin(t / 4 * speed) / 10;\r\n    yPosition = THREE.MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);\r\n    ref.current.position.y = yPosition * floatIntensity;\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: mergeRefs([ref, forwardRef])\r\n  }, children));\r\n});\r\n\r\nexport { Float };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { Environment } from './Environment.js';\r\nimport { ContactShadows } from './ContactShadows.js';\r\n\r\nconst presets = {\r\n  rembrandt: {\r\n    main: [1, 2, 1],\r\n    fill: [-2, -0.5, -2]\r\n  },\r\n  portrait: {\r\n    main: [-1, 2, 0.5],\r\n    fill: [-1, 0.5, -1.5]\r\n  },\r\n  upfront: {\r\n    main: [0, 2, 1],\r\n    fill: [-1, 0.5, -1.5]\r\n  },\r\n  soft: {\r\n    main: [-2, 4, 4],\r\n    fill: [-1, 0.5, -1.5]\r\n  }\r\n};\r\nfunction Stage({\r\n  children,\r\n  controls,\r\n  shadows = true,\r\n  adjustCamera = true,\r\n  environment = 'city',\r\n  intensity = 1,\r\n  preset = 'rembrandt',\r\n  shadowBias = 0,\r\n  contactShadow = {\r\n    blur: 2,\r\n    opacity: 0.5,\r\n    position: [0, 0, 0]\r\n  },\r\n  ...props\r\n}) {\r\n  const config = presets[preset];\r\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\r\n\r\n  const defaultControls = useThree(state => state.controls);\r\n  const outer = React.useRef(null);\r\n  const inner = React.useRef(null);\r\n  const [{\r\n    radius,\r\n    width,\r\n    height\r\n  }, set] = React.useState({\r\n    radius: 0,\r\n    width: 0,\r\n    height: 0\r\n  });\r\n  React.useLayoutEffect(() => {\r\n    outer.current.position.set(0, 0, 0);\r\n    outer.current.updateWorldMatrix(true, true);\r\n    const box3 = new THREE.Box3().setFromObject(inner.current);\r\n    const center = new THREE.Vector3();\r\n    const sphere = new THREE.Sphere();\r\n    const height = box3.max.y - box3.min.y;\r\n    const width = box3.max.x - box3.min.x;\r\n    box3.getCenter(center);\r\n    box3.getBoundingSphere(sphere);\r\n    set({\r\n      radius: sphere.radius,\r\n      width,\r\n      height\r\n    });\r\n    outer.current.position.set(-center.x, -center.y + height / 2, -center.z);\r\n  }, [children]);\r\n  React.useLayoutEffect(() => {\r\n    if (adjustCamera) {\r\n      const y = radius / (height > width ? 1.5 : 2.5);\r\n      camera.position.set(0, radius * 0.5, radius * 2.5);\r\n      camera.near = 0.1;\r\n      camera.far = Math.max(5000, radius * 4);\r\n      camera.lookAt(0, y, 0);\r\n      const ctrl = defaultControls || (controls == null ? void 0 : controls.current);\r\n\r\n      if (ctrl) {\r\n        ctrl.target.set(0, y, 0);\r\n        ctrl.update();\r\n      }\r\n    }\r\n  }, [defaultControls, radius, height, width, adjustCamera]);\r\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: outer\r\n  }, /*#__PURE__*/React.createElement(\"group\", {\r\n    ref: inner\r\n  }, children)), contactShadow && /*#__PURE__*/React.createElement(ContactShadows, _extends({\r\n    scale: radius * 2,\r\n    far: radius / 2\r\n  }, contactShadow)), environment && /*#__PURE__*/React.createElement(Environment, {\r\n    preset: environment\r\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\r\n    intensity: intensity / 3\r\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\r\n    penumbra: 1,\r\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\r\n    intensity: intensity * 2,\r\n    castShadow: shadows,\r\n    \"shadow-bias\": shadowBias\r\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\r\n    position: [config.fill[0] * radius, config.fill[1] * radius, config.fill[2] * radius],\r\n    intensity: intensity\r\n  }));\r\n}\r\n\r\nexport { Stage };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useThree, useLoader, useFrame, createPortal } from '@react-three/fiber';\r\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, Scene, WebGLCubeRenderTarget, HalfFloatType, CubeTextureLoader, BackSide } from 'three';\r\nimport { RGBELoader } from 'three-stdlib';\r\nimport { presetsObj } from '../helpers/environment-assets.js';\r\nimport vertexShader from '../helpers/glsl/GroundProjection.vert.glsl.js';\r\nimport fragmentShader from '../helpers/glsl/GroundProjection.frag.glsl.js';\r\nimport { Icosahedron } from './shapes.js';\r\n\r\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\r\n\r\nconst isCubeTexture = def => def && def.isCubeTexture;\r\n\r\nconst isRef = obj => obj.current && obj.current.isScene;\r\n\r\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\r\n\r\nfunction EnvironmentMap({\r\n  scene,\r\n  background = false,\r\n  map\r\n}) {\r\n  const defaultScene = useThree(state => state.scene);\r\n  React.useLayoutEffect(() => {\r\n    if (map) {\r\n      const target = resolveScene(scene || defaultScene);\r\n      const oldbg = target.background;\r\n      const oldenv = target.environment;\r\n      if (background !== 'only') target.environment = map;\r\n      if (background) target.background = map;\r\n      return () => {\r\n        if (background !== 'only') target.environment = oldenv;\r\n        if (background) target.background = oldbg;\r\n      };\r\n    }\r\n  }, [defaultScene, scene, map, background]);\r\n  return null;\r\n}\r\nfunction useEnvironment({\r\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\r\n  path = '',\r\n  preset = undefined,\r\n  extensions\r\n}) {\r\n  if (preset) {\r\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\r\n    files = presetsObj[preset];\r\n    path = CUBEMAP_ROOT;\r\n  }\r\n\r\n  const isCubeMap = Array.isArray(files);\r\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\r\n  const loaderResult = useLoader( // @ts-expect-error\r\n  loader, isCubeMap ? [files] : files, loader => {\r\n    loader.setPath(path);\r\n    if (extensions) extensions(loader);\r\n  });\r\n  const texture = isCubeMap ? // @ts-ignore\r\n  loaderResult[0] : loaderResult;\r\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\r\n  return texture;\r\n}\r\nfunction EnvironmentCube({\r\n  background = false,\r\n  scene,\r\n  ...rest\r\n}) {\r\n  const texture = useEnvironment(rest);\r\n  const defaultScene = useThree(state => state.scene);\r\n  React.useLayoutEffect(() => {\r\n    const target = resolveScene(scene || defaultScene);\r\n    const oldbg = target.background;\r\n    const oldenv = target.environment;\r\n    if (background !== 'only') target.environment = texture;\r\n    if (background) target.background = texture;\r\n    return () => {\r\n      if (background !== 'only') target.environment = oldenv;\r\n      if (background) target.background = oldbg;\r\n    };\r\n  }, [texture, background, scene, defaultScene]);\r\n  return null;\r\n}\r\nfunction EnvironmentPortal({\r\n  children,\r\n  near = 1,\r\n  far = 1000,\r\n  resolution = 256,\r\n  frames = 1,\r\n  map,\r\n  background = false,\r\n  scene,\r\n  files,\r\n  path,\r\n  preset = undefined,\r\n  extensions\r\n}) {\r\n  const gl = useThree(state => state.gl);\r\n  const defaultScene = useThree(state => state.scene);\r\n  const camera = React.useRef(null);\r\n  const [virtualScene] = React.useState(() => new Scene());\r\n  const fbo = React.useMemo(() => {\r\n    const fbo = new WebGLCubeRenderTarget(resolution);\r\n    fbo.texture.type = HalfFloatType;\r\n    return fbo;\r\n  }, [resolution]);\r\n  React.useLayoutEffect(() => {\r\n    if (frames === 1) camera.current.update(gl, virtualScene);\r\n    const target = resolveScene(scene || defaultScene);\r\n    const oldbg = target.background;\r\n    const oldenv = target.environment;\r\n    if (background !== 'only') target.environment = fbo.texture;\r\n    if (background) target.background = fbo.texture;\r\n    return () => {\r\n      if (background !== 'only') target.environment = oldenv;\r\n      if (background) target.background = oldbg;\r\n    };\r\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\r\n  let count = 1;\r\n  useFrame(() => {\r\n    if (frames === Infinity || count < frames) {\r\n      camera.current.update(gl, virtualScene);\r\n      count++;\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\r\n    ref: camera,\r\n    args: [near, far, fbo]\r\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\r\n    background: true,\r\n    files: files,\r\n    preset: preset,\r\n    path: path,\r\n    extensions: extensions\r\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\r\n    background: true,\r\n    map: map,\r\n    extensions: extensions\r\n  }) : null), virtualScene));\r\n}\r\n\r\nfunction EnvironmentGround(props) {\r\n  var _props$ground, _props$ground2, _scale, _props$ground3;\r\n\r\n  const textureDefault = useEnvironment(props);\r\n  const texture = props.map || textureDefault;\r\n  const isCubeMap = isCubeTexture(texture);\r\n  const defines = React.useMemo(() => {\r\n    var _ref, _texture$image$;\r\n\r\n    const w = (_ref = isCubeMap ? (_texture$image$ = texture.image[0]) == null ? void 0 : _texture$image$.width : texture.image.width) !== null && _ref !== void 0 ? _ref : 1024;\r\n    const cubeSize = w / 4;\r\n\r\n    const _lodMax = Math.floor(Math.log2(cubeSize));\r\n\r\n    const _cubeSize = Math.pow(2, _lodMax);\r\n\r\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\r\n    const height = 4 * _cubeSize;\r\n    return [isCubeMap ? `#define ENVMAP_TYPE_CUBE` : '', `#define CUBEUV_TEXEL_WIDTH ${1.0 / width}`, `#define CUBEUV_TEXEL_HEIGHT ${1.0 / height}`, `#define CUBEUV_MAX_MIP ${_lodMax}.0`, ``];\r\n  }, []);\r\n  const fragment = React.useMemo(() => defines.join('\\n') + fragmentShader, [defines]);\r\n  const uniforms = React.useMemo(() => ({\r\n    cubemap: {\r\n      value: null\r\n    },\r\n    height: {\r\n      value: 15\r\n    },\r\n    radius: {\r\n      value: 60\r\n    }\r\n  }), []);\r\n  const mat = React.useRef(null);\r\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\r\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\r\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\r\n  React.useEffect(() => void (height && (mat.current.uniforms.height.value = height)), [height]);\r\n  React.useEffect(() => void (radius && (mat.current.uniforms.radius.value = radius)), [radius]);\r\n  React.useEffect(() => void (mat.current.uniforms.cubemap.value = texture), [texture]);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\r\n    map: texture\r\n  })), /*#__PURE__*/React.createElement(Icosahedron, {\r\n    scale: scale,\r\n    args: [1, 16]\r\n  }, /*#__PURE__*/React.createElement(\"shaderMaterial\", {\r\n    ref: mat,\r\n    side: BackSide,\r\n    vertexShader: vertexShader,\r\n    fragmentShader: fragment,\r\n    uniforms: uniforms\r\n  })));\r\n}\r\n\r\nfunction Environment(props) {\r\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\r\n}\r\n\r\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal, useEnvironment };\r\n", "const presetsObj = {\r\n  sunset: 'venice/venice_sunset_1k.hdr',\r\n  dawn: 'kiara/kiara_1_dawn_1k.hdr',\r\n  night: 'dikhololo/dikhololo_night_1k.hdr',\r\n  warehouse: 'empty-wharehouse/empty_warehouse_01_1k.hdr',\r\n  forest: 'forrest-slope/forest_slope_1k.hdr',\r\n  apartment: 'lebombo/lebombo_1k.hdr',\r\n  studio: 'studio-small-3/studio_small_03_1k.hdr',\r\n  city: 'potsdamer-platz/potsdamer_platz_1k.hdr',\r\n  park: 'rooitou/rooitou_park_1k.hdr',\r\n  lobby: 'st-fagans/st_fagans_interior_1k.hdr'\r\n};\r\n\r\nexport { presetsObj };\r\n", "var vertexShader = \"#define GLSLIFY 1\\nvarying vec3 vWorldPosition;void main(){vec4 worldPosition=modelMatrix*vec4(position,1.0);vWorldPosition=worldPosition.xyz;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}\"; // eslint-disable-line\r\n\r\nexport { vertexShader as default };\r\n", "var fragmentShader = \"#define GLSLIFY 1\\n#define ENVMAP_TYPE_CUBE_UV\\nvarying vec3 vWorldPosition;uniform float radius;uniform float height;\\n#ifdef ENVMAP_TYPE_CUBE\\nuniform samplerCube cubemap;\\n#else\\nuniform sampler2D cubemap;\\n#endif\\nfloat diskIntersect(in vec3 ro,in vec3 rd,vec3 c,vec3 n,float r){vec3 o=ro-c;float t=-dot(n,o)/dot(rd,n);vec3 q=o+rd*t;return(dot(q,q)<r*r)? t : 1e6;}float sphereIntersect(in vec3 ro,in vec3 rd,in vec3 ce,float ra){vec3 oc=ro-ce;float b=dot(oc,rd);float c=dot(oc,oc)-ra*ra;float h=b*b-c;if(h<0.0)-1.0;h=sqrt(h);return-b+h;}vec3 project(){vec3 p=normalize(vWorldPosition);vec3 camPos=cameraPosition;camPos.y-=height;float intersection=sphereIntersect(camPos,p,vec3(0.),radius);if(intersection>0.){vec3 h=vec3(0.0,-height,0.0);float intersection2=diskIntersect(camPos,p,h,vec3(0.0,-1.0,0.0),radius);p=(camPos+min(intersection,intersection2)*p)/radius;}else{p=vec3(0.0,1.0,0.0);}return p;}\\n#include <common>\\n#include <cube_uv_reflection_fragment>\\nvoid main(){vec3 projectedWorldPosition=project();\\n#ifdef ENVMAP_TYPE_CUBE\\nvec3 outcolor=textureCube(cubemap,projectedWorldPosition).rgb;\\n#else\\nvec3 direction=normalize(projectedWorldPosition);vec2 uv=equirectUv(direction);vec3 outcolor=texture2D(cubemap,uv).rgb;\\n#endif\\ngl_FragColor=vec4(outcolor,1.0);\\n#include <tonemapping_fragment>\\n#include <encodings_fragment>\\n}\"; // eslint-disable-line\r\n\r\nexport { fragmentShader as default };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\r\n\r\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\r\n  scale = 10,\r\n  frames = Infinity,\r\n  opacity = 1,\r\n  width = 1,\r\n  height = 1,\r\n  blur = 1,\r\n  far = 10,\r\n  resolution = 512,\r\n  smooth = true,\r\n  color = '#000000',\r\n  depthWrite = false,\r\n  renderOrder,\r\n  ...props\r\n}, ref) => {\r\n  const scene = useThree(state => state.scene);\r\n  const gl = useThree(state => state.gl);\r\n  const shadowCamera = React.useRef(null);\r\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\r\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\r\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\r\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\r\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\r\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\r\n    const planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\r\n    const blurPlane = new THREE.Mesh(planeGeometry);\r\n    const depthMaterial = new THREE.MeshDepthMaterial();\r\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\r\n\r\n    depthMaterial.onBeforeCompile = shader => {\r\n      shader.uniforms = { ...shader.uniforms,\r\n        ucolor: {\r\n          value: new THREE.Color(color).convertSRGBToLinear()\r\n        }\r\n      };\r\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\r\n      `uniform vec3 ucolor;\r\n           void main() {\r\n          `);\r\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', 'vec4( ucolor, ( 1.0 - fragCoordZ ) * 1.0 );');\r\n    };\r\n\r\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\r\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\r\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\r\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\r\n  }, [resolution, width, height, scale, color]);\r\n\r\n  const blurShadows = blur => {\r\n    blurPlane.visible = true;\r\n    blurPlane.material = horizontalBlurMaterial;\r\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\r\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\r\n    gl.setRenderTarget(renderTargetBlur);\r\n    gl.render(blurPlane, shadowCamera.current);\r\n    blurPlane.material = verticalBlurMaterial;\r\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\r\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\r\n    gl.setRenderTarget(renderTarget);\r\n    gl.render(blurPlane, shadowCamera.current);\r\n    blurPlane.visible = false;\r\n  };\r\n\r\n  let count = 0;\r\n  useFrame(() => {\r\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\r\n      const initialBackground = scene.background;\r\n      scene.background = null;\r\n      const initialOverrideMaterial = scene.overrideMaterial;\r\n      scene.overrideMaterial = depthMaterial;\r\n      gl.setRenderTarget(renderTarget);\r\n      gl.render(scene, shadowCamera.current);\r\n      scene.overrideMaterial = initialOverrideMaterial;\r\n      blurShadows(blur);\r\n      if (smooth) blurShadows(blur * 0.4);\r\n      gl.setRenderTarget(null);\r\n      scene.background = initialBackground;\r\n      count++;\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    \"rotation-x\": Math.PI / 2\r\n  }, props, {\r\n    ref: ref\r\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\r\n    renderOrder: renderOrder,\r\n    geometry: planeGeometry,\r\n    scale: [1, -1, 1],\r\n    rotation: [-Math.PI / 2, 0, 0]\r\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\r\n    map: renderTarget.texture,\r\n    \"map-encoding\": gl.outputEncoding,\r\n    transparent: true,\r\n    opacity: opacity,\r\n    depthWrite: depthWrite\r\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\r\n    ref: shadowCamera,\r\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\r\n  }));\r\n});\r\n\r\nexport { ContactShadows };\r\n", "import * as React from 'react';\r\n\r\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\r\n\r\nfunction Backdrop({\r\n  children,\r\n  floor = 0.25,\r\n  segments = 20,\r\n  receiveShadow,\r\n  ...props\r\n}) {\r\n  const ref = React.useRef(null);\r\n  React.useLayoutEffect(() => {\r\n    let i = 0;\r\n    const offset = segments / segments / 2;\r\n    const position = ref.current.attributes.position;\r\n\r\n    for (let x = 0; x < segments + 1; x++) {\r\n      for (let y = 0; y < segments + 1; y++) {\r\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\r\n      }\r\n    }\r\n\r\n    position.needsUpdate = true;\r\n    ref.current.computeVertexNormals();\r\n  }, [segments, floor]);\r\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\r\n    receiveShadow: receiveShadow,\r\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\r\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\r\n    ref: ref,\r\n    args: [1, 1, segments, segments]\r\n  }), children));\r\n}\r\n\r\nexport { Backdrop };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Color, DoubleSide } from 'three';\r\n\r\nconst Shadow = /*#__PURE__*/React.forwardRef(({\r\n  fog = false,\r\n  renderOrder,\r\n  depthWrite = false,\r\n  colorStop = 0.0,\r\n  color = 'black',\r\n  opacity = 0.5,\r\n  ...props\r\n}, ref) => {\r\n  const canvas = React.useMemo(() => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 128;\r\n    canvas.height = 128;\r\n    const context = canvas.getContext('2d');\r\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\r\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\r\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\r\n    context.fillStyle = gradient;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    return canvas;\r\n  }, [color, colorStop]);\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    renderOrder: renderOrder,\r\n    ref: ref,\r\n    \"rotation-x\": -Math.PI / 2\r\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\r\n    transparent: true,\r\n    opacity: opacity,\r\n    fog: fog,\r\n    depthWrite: depthWrite,\r\n    side: DoubleSide\r\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\r\n    attach: \"map\",\r\n    args: [canvas]\r\n  })));\r\n});\r\n\r\nexport { Shadow };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\r\nimport { extend, useThree, useFrame } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { BlurPass } from '../materials/BlurPass.js';\r\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\r\n\r\nextend({\r\n  MeshReflectorMaterial\r\n});\r\nconst Reflector = /*#__PURE__*/React.forwardRef(({\r\n  mixBlur = 0,\r\n  mixStrength = 0.5,\r\n  resolution = 256,\r\n  blur = [0, 0],\r\n  args = [1, 1],\r\n  minDepthThreshold = 0.9,\r\n  maxDepthThreshold = 1,\r\n  depthScale = 0,\r\n  depthToBlurRatioBias = 0.25,\r\n  mirror = 0,\r\n  children,\r\n  debug = 0,\r\n  distortion = 1,\r\n  mixContrast = 1,\r\n  distortionMap,\r\n  ...props\r\n}, ref) => {\r\n  React.useEffect(() => {\r\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\r\n  }, []);\r\n  const gl = useThree(({\r\n    gl\r\n  }) => gl);\r\n  const camera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const scene = useThree(({\r\n    scene\r\n  }) => scene);\r\n  blur = Array.isArray(blur) ? blur : [blur, blur];\r\n  const hasBlur = blur[0] + blur[1] > 0;\r\n  const meshRef = React.useRef(null);\r\n  const [reflectorPlane] = React.useState(() => new Plane());\r\n  const [normal] = React.useState(() => new Vector3());\r\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\r\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\r\n  const [rotationMatrix] = React.useState(() => new Matrix4());\r\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\r\n  const [clipPlane] = React.useState(() => new Vector4());\r\n  const [view] = React.useState(() => new Vector3());\r\n  const [target] = React.useState(() => new Vector3());\r\n  const [q] = React.useState(() => new Vector4());\r\n  const [textureMatrix] = React.useState(() => new Matrix4());\r\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\r\n  const beforeRender = React.useCallback(() => {\r\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\r\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\r\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\r\n    normal.set(0, 0, 1);\r\n    normal.applyMatrix4(rotationMatrix);\r\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\r\n\r\n    if (view.dot(normal) > 0) return;\r\n    view.reflect(normal).negate();\r\n    view.add(reflectorWorldPosition);\r\n    rotationMatrix.extractRotation(camera.matrixWorld);\r\n    lookAtPosition.set(0, 0, -1);\r\n    lookAtPosition.applyMatrix4(rotationMatrix);\r\n    lookAtPosition.add(cameraWorldPosition);\r\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\r\n    target.reflect(normal).negate();\r\n    target.add(reflectorWorldPosition);\r\n    virtualCamera.position.copy(view);\r\n    virtualCamera.up.set(0, 1, 0);\r\n    virtualCamera.up.applyMatrix4(rotationMatrix);\r\n    virtualCamera.up.reflect(normal);\r\n    virtualCamera.lookAt(target);\r\n    virtualCamera.far = camera.far; // Used in WebGLBackground\r\n\r\n    virtualCamera.updateMatrixWorld();\r\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\r\n\r\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\r\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\r\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\r\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\r\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\r\n\r\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\r\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\r\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\r\n    const projectionMatrix = virtualCamera.projectionMatrix;\r\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\r\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\r\n    q.z = -1.0;\r\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\r\n\r\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\r\n\r\n    projectionMatrix.elements[2] = clipPlane.x;\r\n    projectionMatrix.elements[6] = clipPlane.y;\r\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\r\n    projectionMatrix.elements[14] = clipPlane.w;\r\n  }, []);\r\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\r\n    const parameters = {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      encoding: gl.outputEncoding\r\n    };\r\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\r\n    fbo1.depthBuffer = true;\r\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\r\n    fbo1.depthTexture.format = DepthFormat;\r\n    fbo1.depthTexture.type = UnsignedShortType;\r\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\r\n    const blurpass = new BlurPass({\r\n      gl,\r\n      resolution,\r\n      width: blur[0],\r\n      height: blur[1],\r\n      minDepthThreshold,\r\n      maxDepthThreshold,\r\n      depthScale,\r\n      depthToBlurRatioBias\r\n    });\r\n    const reflectorProps = {\r\n      mirror,\r\n      textureMatrix,\r\n      mixBlur,\r\n      tDiffuse: fbo1.texture,\r\n      tDepth: fbo1.depthTexture,\r\n      tDiffuseBlur: fbo2.texture,\r\n      hasBlur,\r\n      mixStrength,\r\n      minDepthThreshold,\r\n      maxDepthThreshold,\r\n      depthScale,\r\n      depthToBlurRatioBias,\r\n      transparent: true,\r\n      debug,\r\n      distortion,\r\n      distortionMap,\r\n      mixContrast,\r\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\r\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\r\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\r\n    };\r\n    return [fbo1, fbo2, blurpass, reflectorProps];\r\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);\r\n  useFrame(() => {\r\n    if (!(meshRef != null && meshRef.current)) return;\r\n    meshRef.current.visible = false;\r\n    const currentXrEnabled = gl.xr.enabled;\r\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\r\n    beforeRender();\r\n    gl.xr.enabled = false;\r\n    gl.shadowMap.autoUpdate = false;\r\n    gl.setRenderTarget(fbo1);\r\n    gl.state.buffers.depth.setMask(true);\r\n    if (!gl.autoClear) gl.clear();\r\n    gl.render(scene, virtualCamera);\r\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\r\n    gl.xr.enabled = currentXrEnabled;\r\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\r\n    meshRef.current.visible = true;\r\n    gl.setRenderTarget(null);\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    ref: mergeRefs([meshRef, ref])\r\n  }, props), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\r\n    args: args\r\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\r\n});\r\n\r\nexport { Reflector };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Vector3, CylinderGeometry, Matrix4 } from 'three';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { SpotLightMaterial } from '../materials/SpotLightMaterial.js';\r\n\r\nconst vec = new Vector3();\r\nconst SpotLight = /*#__PURE__*/React.forwardRef(({\r\n  opacity = 1,\r\n  radiusTop,\r\n  radiusBottom,\r\n  depthBuffer,\r\n  color = 'white',\r\n  distance = 5,\r\n  angle = 0.15,\r\n  attenuation = 5,\r\n  anglePower = 5,\r\n  ...props\r\n}, ref) => {\r\n  const mesh = React.useRef(null);\r\n  const size = useThree(state => state.size);\r\n  const camera = useThree(state => state.camera);\r\n  const dpr = useThree(state => state.viewport.dpr);\r\n  const [material] = React.useState(() => new SpotLightMaterial());\r\n  radiusTop = radiusTop === undefined ? 0.1 : radiusTop;\r\n  radiusBottom = radiusBottom === undefined ? angle * 7 : radiusBottom;\r\n  useFrame(() => {\r\n    material.uniforms.spotPosition.value.copy(mesh.current.getWorldPosition(vec));\r\n    mesh.current.lookAt(mesh.current.parent.target.getWorldPosition(vec));\r\n  });\r\n  const geom = React.useMemo(() => {\r\n    const geometry = new CylinderGeometry(radiusTop, radiusBottom, distance, 128, 64, true);\r\n    geometry.applyMatrix4(new Matrix4().makeTranslation(0, -distance / 2, 0));\r\n    geometry.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2));\r\n    return geometry;\r\n  }, [angle, distance, radiusTop, radiusBottom]);\r\n  return /*#__PURE__*/React.createElement(\"spotLight\", _extends({\r\n    ref: ref,\r\n    angle: angle,\r\n    color: color,\r\n    distance: distance\r\n  }, props), /*#__PURE__*/React.createElement(\"mesh\", {\r\n    ref: mesh,\r\n    geometry: geom,\r\n    raycast: () => null\r\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\r\n    object: material,\r\n    attach: \"material\",\r\n    \"uniforms-opacity-value\": opacity,\r\n    \"uniforms-lightColor-value\": color,\r\n    \"uniforms-attenuation-value\": attenuation,\r\n    \"uniforms-anglePower-value\": anglePower,\r\n    \"uniforms-depth-value\": depthBuffer,\r\n    \"uniforms-cameraNear-value\": camera.near,\r\n    \"uniforms-cameraFar-value\": camera.far,\r\n    \"uniforms-resolution-value\": depthBuffer ? [size.width * dpr, size.height * dpr] : [0, 0]\r\n  })));\r\n});\r\n\r\nexport { SpotLight };\r\n", "import { ShaderMaterial, Vector3, Color, Vector2 } from 'three';\r\n\r\nclass SpotLightMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      uniforms: {\r\n        depth: {\r\n          value: null\r\n        },\r\n        opacity: {\r\n          value: 1\r\n        },\r\n        attenuation: {\r\n          value: 2.5\r\n        },\r\n        anglePower: {\r\n          value: 12\r\n        },\r\n        spotPosition: {\r\n          value: new Vector3(0, 0, 0)\r\n        },\r\n        lightColor: {\r\n          value: new Color('white')\r\n        },\r\n        cameraNear: {\r\n          value: 0\r\n        },\r\n        cameraFar: {\r\n          value: 1\r\n        },\r\n        resolution: {\r\n          value: new Vector2(0, 0)\r\n        }\r\n      },\r\n      transparent: true,\r\n      depthWrite: false,\r\n      vertexShader:\r\n      /* glsl */\r\n      `\r\n      varying vec3 vNormal;\r\n      varying vec3 vWorldPosition;\r\n      varying float vViewZ;\r\n      varying float vIntensity;\r\n      uniform vec3 spotPosition;\r\n      uniform float attenuation;      \r\n\r\n      void main() {\r\n        // compute intensity\r\n        vNormal = normalize( normalMatrix * normal );\r\n        vec4 worldPosition\t= modelMatrix * vec4( position, 1.0 );\r\n        vWorldPosition = worldPosition.xyz;\r\n        vec4 viewPosition = viewMatrix * worldPosition;\r\n        vViewZ = viewPosition.z;\r\n        float intensity\t= distance(worldPosition.xyz, spotPosition) / attenuation;\r\n        intensity\t= 1.0 - clamp(intensity, 0.0, 1.0);\r\n        vIntensity = intensity;        \r\n        // set gl_Position\r\n        gl_Position\t= projectionMatrix * viewPosition;\r\n\r\n      }`,\r\n      fragmentShader:\r\n      /* glsl */\r\n      `\r\n      #include <packing>\r\n\r\n      varying vec3 vNormal;\r\n      varying vec3 vWorldPosition;\r\n      uniform vec3 lightColor;\r\n      uniform vec3 spotPosition;\r\n      uniform float attenuation;\r\n      uniform float anglePower;\r\n      uniform sampler2D depth;\r\n      uniform vec2 resolution;\r\n      uniform float cameraNear;\r\n      uniform float cameraFar;\r\n      varying float vViewZ;\r\n      varying float vIntensity;\r\n      uniform float opacity;\r\n\r\n      float readDepth( sampler2D depthSampler, vec2 coord ) {\r\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\r\n        float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\r\n        return viewZ;\r\n      }\r\n\r\n      void main() {\r\n        float d = 1.0;\r\n        bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\r\n        if (isSoft) {\r\n          vec2 sUv = gl_FragCoord.xy / resolution;\r\n          d = readDepth(depth, sUv);\r\n        }\r\n        float intensity = vIntensity;\r\n        vec3 normal\t= vec3(vNormal.x, vNormal.y, abs(vNormal.z));\r\n        float angleIntensity\t= pow( dot(normal, vec3(0.0, 0.0, 1.0)), anglePower );\r\n        intensity\t*= angleIntensity;\r\n        // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\r\n        if (isSoft) {\r\n          intensity\t*= smoothstep(0., 1., vViewZ - d);\r\n        }\r\n        gl_FragColor = vec4(lightColor, intensity * opacity);\r\n\r\n        #include <tonemapping_fragment>\r\n\t      #include <encodings_fragment>\r\n      }`\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { SpotLightMaterial };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport { applyProps } from '@react-three/fiber';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nconst Lightformer = /*#__PURE__*/React.forwardRef(({\r\n  args,\r\n  map,\r\n  toneMapped = false,\r\n  color = 'white',\r\n  form: Form = 'rect',\r\n  intensity = 1,\r\n  scale = 1,\r\n  target,\r\n  children,\r\n  ...props\r\n}, forwardRef) => {\r\n  // Apply emissive power\r\n  const ref = React.useRef(null);\r\n  React.useLayoutEffect(() => {\r\n    if (!children && !props.material) {\r\n      applyProps(ref.current.material, {\r\n        color\r\n      });\r\n      ref.current.material.color.multiplyScalar(intensity);\r\n    }\r\n  }, [color, intensity, children, props.material]); // Target light\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (target) ref.current.lookAt(Array.isArray(target) ? new THREE.Vector3(...target) : target);\r\n  }, [target]); // Fix 2-dimensional scale\r\n\r\n  scale = Array.isArray(scale) && scale.length === 2 ? [scale[0], scale[1], 1] : scale;\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    ref: mergeRefs([ref, forwardRef]),\r\n    scale: scale\r\n  }, props), Form === 'circle' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\r\n    args: [0, 1, 64]\r\n  }) : Form === 'ring' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\r\n    args: [0.5, 1, 64]\r\n  }) : Form === 'rect' ? /*#__PURE__*/React.createElement(\"planeGeometry\", null) : /*#__PURE__*/React.createElement(Form, {\r\n    args: args\r\n  }), children ? children : !props.material ? /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\r\n    toneMapped: toneMapped,\r\n    map: map,\r\n    side: THREE.DoubleSide\r\n  }) : null);\r\n});\r\n\r\nexport { Lightformer };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Sky as Sky$1 } from 'three-stdlib';\r\nimport { Vector3 } from 'three';\r\n\r\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\r\n  const theta = Math.PI * (inclination - 0.5);\r\n  const phi = 2 * Math.PI * (azimuth - 0.5);\r\n  vector.x = Math.cos(phi);\r\n  vector.y = Math.sin(theta);\r\n  vector.z = Math.sin(phi);\r\n  return vector;\r\n}\r\nconst Sky = /*#__PURE__*/React.forwardRef(({\r\n  inclination = 0.6,\r\n  azimuth = 0.1,\r\n  distance = 1000,\r\n  mieCoefficient = 0.005,\r\n  mieDirectionalG = 0.8,\r\n  rayleigh = 0.5,\r\n  turbidity = 10,\r\n  sunPosition = calcPosFromAngles(inclination, azimuth),\r\n  ...props\r\n}, ref) => {\r\n  const scale = React.useMemo(() => new Vector3().setScalar(distance), [distance]);\r\n  const [sky] = React.useState(() => new Sky$1());\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: sky,\r\n    ref: ref,\r\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\r\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\r\n    \"material-uniforms-rayleigh-value\": rayleigh,\r\n    \"material-uniforms-sunPosition-value\": sunPosition,\r\n    \"material-uniforms-turbidity-value\": turbidity,\r\n    scale: scale\r\n  }, props));\r\n});\r\n\r\nexport { Sky, calcPosFromAngles };\r\n", "import * as React from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { Color, Vector3, Spherical, AdditiveBlending, ShaderMaterial } from 'three';\r\n\r\nclass StarfieldMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      uniforms: {\r\n        time: {\r\n          value: 0.0\r\n        },\r\n        fade: {\r\n          value: 1.0\r\n        }\r\n      },\r\n      vertexShader:\r\n      /* glsl */\r\n      `\r\n      uniform float time;\r\n      attribute float size;\r\n      varying vec3 vColor;\r\n      void main() {\r\n        vColor = color;\r\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\r\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(mvPosition.x + 2.0 * time + 100.0));\r\n        gl_Position = projectionMatrix * mvPosition;\r\n      }`,\r\n      fragmentShader:\r\n      /* glsl */\r\n      `\r\n      uniform sampler2D pointTexture;\r\n      uniform float fade;\r\n      varying vec3 vColor;\r\n      void main() {\r\n        float opacity = 1.0;\r\n        if (fade == 1.0) {\r\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\r\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\r\n        }\r\n        gl_FragColor = vec4(vColor, opacity);\r\n\r\n        #include <tonemapping_fragment>\r\n\t      #include <encodings_fragment>\r\n      }`\r\n    });\r\n  }\r\n\r\n}\r\n\r\nconst genStar = r => {\r\n  return new Vector3().setFromSpherical(new Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));\r\n};\r\n\r\nconst Stars = /*#__PURE__*/React.forwardRef(({\r\n  radius = 100,\r\n  depth = 50,\r\n  count = 5000,\r\n  saturation = 0,\r\n  factor = 4,\r\n  fade = false,\r\n  speed = 1\r\n}, ref) => {\r\n  const material = React.useRef();\r\n  const [position, color, size] = React.useMemo(() => {\r\n    const positions = [];\r\n    const colors = [];\r\n    const sizes = Array.from({\r\n      length: count\r\n    }, () => (0.5 + 0.5 * Math.random()) * factor);\r\n    const color = new Color();\r\n    let r = radius + depth;\r\n    const increment = depth / count;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      r -= increment * Math.random();\r\n      positions.push(...genStar(r).toArray());\r\n      color.setHSL(i / count, saturation, 0.9);\r\n      colors.push(color.r, color.g, color.b);\r\n    }\r\n\r\n    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];\r\n  }, [count, depth, factor, radius, saturation]);\r\n  useFrame(state => material.current && (material.current.uniforms.time.value = state.clock.getElapsedTime() * speed));\r\n  const [starfieldMaterial] = React.useState(() => new StarfieldMaterial());\r\n  return /*#__PURE__*/React.createElement(\"points\", {\r\n    ref: ref\r\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-position\",\r\n    args: [position, 3]\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-color\",\r\n    args: [color, 3]\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-size\",\r\n    args: [size, 1]\r\n  })), /*#__PURE__*/React.createElement(\"primitive\", {\r\n    ref: material,\r\n    object: starfieldMaterial,\r\n    attach: \"material\",\r\n    blending: AdditiveBlending,\r\n    \"uniforms-fade-value\": fade,\r\n    transparent: true,\r\n    vertexColors: true\r\n  }));\r\n});\r\n\r\nexport { Stars };\r\n", "import * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { Billboard } from './Billboard.js';\r\nimport { Plane } from './shapes.js';\r\nimport { useTexture } from './useTexture.js';\r\n\r\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\r\nfunction Cloud({\r\n  opacity = 0.5,\r\n  speed = 0.4,\r\n  width = 10,\r\n  depth = 1.5,\r\n  segments = 20,\r\n  texture = CLOUD_URL,\r\n  color = '#ffffff',\r\n  depthTest = true,\r\n  ...props\r\n}) {\r\n  const gl = useThree(state => state.gl);\r\n  const group = React.useRef();\r\n  const cloudTexture = useTexture(texture);\r\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\r\n    x: width / 2 - Math.random() * width,\r\n    y: width / 2 - Math.random() * width,\r\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\r\n    density: Math.max(0.2, Math.random()),\r\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\r\n  })), [width, segments, speed]);\r\n  useFrame(state => {\r\n    var _group$current;\r\n\r\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\r\n      cloud.children[0].rotation.z += clouds[index].rotation;\r\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\r\n    });\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\r\n    position: [0, 0, segments / 2 * depth],\r\n    ref: group\r\n  }, clouds.map(({\r\n    x,\r\n    y,\r\n    scale,\r\n    density\r\n  }, index) => /*#__PURE__*/React.createElement(Billboard, {\r\n    key: index,\r\n    position: [x, y, -index * depth]\r\n  }, /*#__PURE__*/React.createElement(Plane, {\r\n    scale: scale,\r\n    rotation: [0, 0, 0]\r\n  }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\r\n    map: cloudTexture,\r\n    \"map-encoding\": gl.outputEncoding,\r\n    transparent: true,\r\n    opacity: scale / 6 * density * opacity,\r\n    depthTest: depthTest,\r\n    color: color\r\n  }))))));\r\n}\r\n\r\nexport { Cloud };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { extend, useThree, useFrame } from '@react-three/fiber';\r\nimport fragShader from '../helpers/glsl/Sparkles.frag.glsl.js';\r\nimport vertShader from '../helpers/glsl/Sparkles.vert.glsl.js';\r\nimport { shaderMaterial } from './shaderMaterial.js';\r\n\r\nconst SparklesMaterial = shaderMaterial({\r\n  time: 0,\r\n  pixelRatio: 1\r\n}, vertShader, fragShader);\r\n\r\nconst isFloat32Array = def => def && def.constructor === Float32Array;\r\n\r\nconst expandColor = v => [v.r, v.g, v.b];\r\n\r\nconst isVector = v => v instanceof THREE.Vector2 || v instanceof THREE.Vector3 || v instanceof THREE.Vector4;\r\n\r\nconst normalizeVector = v => {\r\n  if (Array.isArray(v)) return v;else if (isVector(v)) return v.toArray();\r\n  return [v, v, v];\r\n};\r\n\r\nfunction usePropAsIsOrAsAttribute(count, prop, setDefault) {\r\n  return React.useMemo(() => {\r\n    if (prop !== undefined) {\r\n      if (isFloat32Array(prop)) {\r\n        return prop;\r\n      } else {\r\n        if (prop instanceof THREE.Color) {\r\n          const a = Array.from({\r\n            length: count * 3\r\n          }, () => expandColor(prop)).flat();\r\n          return Float32Array.from(a);\r\n        } else if (isVector(prop) || Array.isArray(prop)) {\r\n          const a = Array.from({\r\n            length: count * 3\r\n          }, () => normalizeVector(prop)).flat();\r\n          return Float32Array.from(a);\r\n        }\r\n\r\n        return Float32Array.from({\r\n          length: count\r\n        }, () => prop);\r\n      }\r\n    }\r\n\r\n    return Float32Array.from({\r\n      length: count\r\n    }, setDefault);\r\n  }, [prop]);\r\n}\r\n\r\nconst Sparkles = /*#__PURE__*/React.forwardRef(({\r\n  noise = 1,\r\n  count = 100,\r\n  speed = 1,\r\n  opacity = 1,\r\n  scale = 1,\r\n  size,\r\n  color,\r\n  ...props\r\n}, forwardRef) => {\r\n  React.useMemo(() => extend({\r\n    SparklesMaterial\r\n  }), []);\r\n  const matRef = React.useRef();\r\n  const dpr = useThree(state => state.viewport.dpr);\r\n  const positions = React.useMemo(() => Float32Array.from(Array.from({\r\n    length: count\r\n  }, () => normalizeVector(scale).map(THREE.MathUtils.randFloatSpread)).flat()), [count, scale]);\r\n  const sizes = usePropAsIsOrAsAttribute(count, size, Math.random);\r\n  const opacities = usePropAsIsOrAsAttribute(count, opacity);\r\n  const speeds = usePropAsIsOrAsAttribute(count, speed);\r\n  const noises = usePropAsIsOrAsAttribute(count * 3, noise);\r\n  const colors = usePropAsIsOrAsAttribute(color === undefined ? count * 3 : count, !isFloat32Array(color) ? new THREE.Color(color) : color, () => 1);\r\n  useFrame(state => matRef.current.uniforms.time.value = state.clock.elapsedTime);\r\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\r\n    key: `particle-${count}-${JSON.stringify(scale)}`\r\n  }, props, {\r\n    ref: forwardRef\r\n  }), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-position\",\r\n    args: [positions, 3]\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-size\",\r\n    args: [sizes, 1]\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-opacity\",\r\n    args: [opacities, 1]\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-speed\",\r\n    args: [speeds, 1]\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-color\",\r\n    args: [colors, 3]\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-noise\",\r\n    args: [noises, 3]\r\n  })), /*#__PURE__*/React.createElement(\"sparklesMaterial\", {\r\n    ref: matRef,\r\n    transparent: true,\r\n    pixelRatio: dpr,\r\n    depthWrite: false\r\n  }));\r\n});\r\n\r\nexport { Sparkles };\r\n", "var fragShader = \"#define GLSLIFY 1\\nvarying vec3 vColor;varying float vOpacity;void main(){float distanceToCenter=distance(gl_PointCoord,vec2(0.5));float strength=0.05/distanceToCenter-0.1;gl_FragColor=vec4(vColor,strength*vOpacity);}\"; // eslint-disable-line\r\n\r\nexport { fragShader as default };\r\n", "var vertShader = \"#define GLSLIFY 1\\nuniform float pixelRatio;uniform float time;attribute float size;attribute float speed;attribute float opacity;attribute vec3 noise;attribute vec3 color;varying vec3 vColor;varying float vOpacity;void main(){vec4 modelPosition=modelMatrix*vec4(position,1.0);modelPosition.y+=sin(time*speed+modelPosition.x*noise.x*100.0)*0.2;modelPosition.z+=cos(time*speed+modelPosition.x*noise.y*100.0)*0.2;modelPosition.x+=cos(time*speed+modelPosition.x*noise.z*100.0)*0.2;vec4 viewPosition=viewMatrix*modelPosition;vec4 projectionPostion=projectionMatrix*viewPosition;gl_Position=projectionPostion;gl_PointSize=size*25.*pixelRatio;gl_PointSize*=(1.0/-viewPosition.z);vColor=color;vOpacity=opacity;}\"; // eslint-disable-line\r\n\r\nexport { vertShader as default };\r\n", "import * as React from 'react';\r\nimport { useTexture } from './useTexture.js';\r\nimport { suspend } from 'suspend-react';\r\n\r\nfunction getFormatString(format) {\r\n  switch (format) {\r\n    case 64:\r\n      return '-64px';\r\n\r\n    case 128:\r\n      return '-128px';\r\n\r\n    case 256:\r\n      return '-256px';\r\n\r\n    case 512:\r\n      return '-512px';\r\n\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\r\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\r\nfunction useMatcapTexture(id = 0, format = 1024, onLoad) {\r\n  const matcapList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['matcapList']);\r\n  const DEFAULT_MATCAP = matcapList[0];\r\n  const numTot = React.useMemo(() => Object.keys(matcapList).length, []);\r\n  const fileHash = React.useMemo(() => {\r\n    if (typeof id === 'string') {\r\n      return id;\r\n    } else if (typeof id === 'number') {\r\n      return matcapList[id];\r\n    }\r\n\r\n    return null;\r\n  }, [id]);\r\n  const fileName = `${fileHash || DEFAULT_MATCAP}${getFormatString(format)}.png`;\r\n  const url = `${MATCAP_ROOT}/${format}/${fileName}`;\r\n  const matcapTexture = useTexture(url, onLoad);\r\n  return [matcapTexture, url, numTot];\r\n}\r\n\r\nexport { useMatcapTexture };\r\n", "import * as React from 'react';\r\nimport { useTexture } from './useTexture.js';\r\nimport { RepeatWrapping, Vector2 } from 'three';\r\nimport { suspend } from 'suspend-react';\r\n\r\nconst NORMAL_ROOT = 'https://rawcdn.githack.com/pmndrs/drei-assets/7a3104997e1576f83472829815b00880d88b32fb';\r\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/normals/normals.json';\r\nfunction useNormalTexture(id = 0, settings = {}, onLoad) {\r\n  const {\r\n    repeat = [1, 1],\r\n    anisotropy = 1,\r\n    offset = [0, 0]\r\n  } = settings;\r\n  const normalsList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['normalsList']);\r\n  const numTot = React.useMemo(() => Object.keys(normalsList).length, []);\r\n  const DEFAULT_NORMAL = normalsList[0];\r\n  const imageName = normalsList[id] || DEFAULT_NORMAL;\r\n  const url = `${NORMAL_ROOT}/normals/${imageName}`;\r\n  const normalTexture = useTexture(url, onLoad);\r\n  React.useLayoutEffect(() => {\r\n    if (!normalTexture) return;\r\n    normalTexture.wrapS = normalTexture.wrapT = RepeatWrapping;\r\n    normalTexture.repeat = new Vector2(repeat[0], repeat[1]);\r\n    normalTexture.offset = new Vector2(offset[0], offset[1]);\r\n    normalTexture.anisotropy = anisotropy;\r\n  }, [normalTexture, anisotropy, repeat, offset]);\r\n  return [normalTexture, url, numTot];\r\n}\r\n\r\nexport { useNormalTexture };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\nimport { extend, useFrame } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { Position } from '../helpers/Position.js';\r\n\r\nlet i, positionRef;\r\nconst context = /*#__PURE__*/React.createContext(null);\r\nconst parentMatrix = new THREE.Matrix4();\r\nconst position = new THREE.Vector3();\r\nnew THREE.Color();\r\n/**\r\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\r\n */\r\n\r\nconst PointsInstances = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  range,\r\n  limit = 1000,\r\n  ...props\r\n}, ref) => {\r\n  const parentRef = React.useRef(null);\r\n  const [refs, setRefs] = React.useState([]);\r\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\r\n    length: limit * 3\r\n  }, () => 1), Float32Array.from({\r\n    length: limit\r\n  }, () => 1)]);\r\n  React.useEffect(() => {\r\n    // We might be a frame too late? \uD83E\uDD37\u200D\u2642\uFE0F\r\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\r\n  });\r\n  useFrame(() => {\r\n    parentRef.current.updateMatrix();\r\n    parentRef.current.updateMatrixWorld();\r\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\r\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\r\n\r\n    for (i = 0; i < refs.length; i++) {\r\n      positionRef = refs[i].current;\r\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\r\n      position.toArray(positions, i * 3);\r\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\r\n      positionRef.matrixWorldNeedsUpdate = true;\r\n      positionRef.color.toArray(colors, i * 3);\r\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\r\n      sizes.set([positionRef.size], i);\r\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\r\n    }\r\n  });\r\n  const events = React.useMemo(() => {\r\n    const events = {};\r\n\r\n    for (i = 0; i < refs.length; i++) {\r\n      var _refs$i$current;\r\n\r\n      Object.assign(events, (_refs$i$current = refs[i].current) == null ? void 0 : _refs$i$current.__r3f.handlers);\r\n    }\r\n\r\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\r\n      [key]: event => {\r\n        var _refs$event$index, _r3f, _r3f$handlers;\r\n\r\n        const object = (_refs$event$index = refs[event.index]) == null ? void 0 : _refs$event$index.current;\r\n        return object == null ? void 0 : (_r3f = object.__r3f) == null ? void 0 : (_r3f$handlers = _r3f.handlers) == null ? void 0 : _r3f$handlers[key]({ ...event,\r\n          object\r\n        });\r\n      }\r\n    }), {});\r\n  }, [children, refs]);\r\n  const api = React.useMemo(() => ({\r\n    subscribe: ref => {\r\n      setRefs(refs => [...refs, ref]);\r\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\r\n    }\r\n  }), []);\r\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\r\n    matrixAutoUpdate: false,\r\n    ref: mergeRefs([ref, parentRef])\r\n  }, events, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-position\",\r\n    count: positions.length / 3,\r\n    array: positions,\r\n    itemSize: 3,\r\n    usage: THREE.DynamicDrawUsage\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-color\",\r\n    count: colors.length / 3,\r\n    array: colors,\r\n    itemSize: 3,\r\n    usage: THREE.DynamicDrawUsage\r\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-size\",\r\n    count: sizes.length,\r\n    array: sizes,\r\n    itemSize: 1,\r\n    usage: THREE.DynamicDrawUsage\r\n  })), /*#__PURE__*/React.createElement(context.Provider, {\r\n    value: api\r\n  }, children));\r\n});\r\nconst Point = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  ...props\r\n}, ref) => {\r\n  React.useMemo(() => extend({\r\n    Position\r\n  }), []);\r\n  const group = React.useRef();\r\n  const {\r\n    subscribe\r\n  } = React.useContext(context);\r\n  React.useLayoutEffect(() => subscribe(group), []);\r\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\r\n    ref: mergeRefs([ref, group])\r\n  }, props), children);\r\n});\r\n/**\r\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\r\n */\r\n\r\nconst PointsBuffer = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  positions,\r\n  colors,\r\n  sizes,\r\n  stride = 3,\r\n  ...props\r\n}, forwardedRef) => {\r\n  const pointsRef = React.useRef(null);\r\n  useFrame(() => {\r\n    const attr = pointsRef.current.geometry.attributes;\r\n    attr.position.needsUpdate = true;\r\n    if (colors) attr.color.needsUpdate = true;\r\n    if (sizes) attr.size.needsUpdate = true;\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\r\n    ref: mergeRefs([forwardedRef, pointsRef])\r\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-position\",\r\n    count: positions.length / stride,\r\n    array: positions,\r\n    itemSize: stride,\r\n    usage: THREE.DynamicDrawUsage\r\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-color\",\r\n    count: colors.length / stride,\r\n    array: colors,\r\n    itemSize: 3,\r\n    usage: THREE.DynamicDrawUsage\r\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\r\n    attach: \"attributes-size\",\r\n    count: sizes.length / stride,\r\n    array: sizes,\r\n    itemSize: 1,\r\n    usage: THREE.DynamicDrawUsage\r\n  })), children);\r\n});\r\nconst Points = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\r\n  if (props.positions instanceof Float32Array) {\r\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\r\n      ref: forwardedRef\r\n    }));\r\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\r\n    ref: forwardedRef\r\n  }));\r\n});\r\n\r\nexport { Point, Points, PointsBuffer };\r\n", "import * as THREE from 'three';\r\n\r\nconst _instanceLocalMatrix = /*@__PURE__*/new THREE.Matrix4();\r\n\r\nconst _instanceWorldMatrix = /*@__PURE__*/new THREE.Matrix4();\r\n\r\nconst _instanceIntersects = [];\r\n\r\nconst _mesh = /*@__PURE__*/new THREE.Mesh();\r\n\r\nclass Position extends THREE.Group {\r\n  constructor() {\r\n    super();\r\n    this.color = new THREE.Color('white');\r\n    this.instance = {\r\n      current: undefined\r\n    };\r\n    this.instanceKey = {\r\n      current: undefined\r\n    };\r\n  } // This will allow the virtual instance have bounds\r\n\r\n\r\n  get geometry() {\r\n    var _this$instance$curren;\r\n\r\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\r\n  } // And this will allow the virtual instance to receive events\r\n\r\n\r\n  raycast(raycaster, intersects) {\r\n    const parent = this.instance.current;\r\n    if (!parent) return;\r\n    if (!parent.geometry || !parent.material) return;\r\n    _mesh.geometry = parent.geometry;\r\n    const matrixWorld = parent.matrixWorld;\r\n    let instanceId = parent.userData.instances.indexOf(this.instanceKey); // If the instance wasn't found or exceeds the parents draw range, bail out\r\n\r\n    if (instanceId === -1 || instanceId > parent.count) return; // calculate the world matrix for each instance\r\n\r\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\r\n\r\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\r\n\r\n\r\n    _mesh.matrixWorld = _instanceWorldMatrix;\r\n\r\n    _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\r\n\r\n\r\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\r\n      const intersect = _instanceIntersects[i];\r\n      intersect.instanceId = instanceId;\r\n      intersect.object = this;\r\n      intersects.push(intersect);\r\n    }\r\n\r\n    _instanceIntersects.length = 0;\r\n  }\r\n\r\n}\r\n\r\nexport { Position };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\nimport { extend, useFrame } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport Composer from 'react-composer';\r\nimport { Position } from '../helpers/Position.js';\r\n\r\nlet i, instanceRef;\r\nconst globalContext = /*#__PURE__*/React.createContext(null);\r\nconst parentMatrix = new THREE.Matrix4();\r\nconst instanceMatrix = new THREE.Matrix4();\r\nconst tempMatrix = new THREE.Matrix4();\r\nnew THREE.Color();\r\nconst translation = new THREE.Vector3();\r\nconst rotation = new THREE.Quaternion();\r\nconst scale = new THREE.Vector3();\r\nconst Instance = /*#__PURE__*/React.forwardRef(({\r\n  context,\r\n  children,\r\n  ...props\r\n}, ref) => {\r\n  React.useMemo(() => extend({\r\n    Position\r\n  }), []);\r\n  const group = React.useRef();\r\n  const {\r\n    subscribe,\r\n    getParent\r\n  } = React.useContext(context || globalContext);\r\n  React.useLayoutEffect(() => subscribe(group), []);\r\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\r\n    instance: getParent(),\r\n    instanceKey: group,\r\n    ref: mergeRefs([ref, group])\r\n  }, props), children);\r\n});\r\nconst Instances = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  range,\r\n  limit = 1000,\r\n  frames = Infinity,\r\n  ...props\r\n}, ref) => {\r\n  const [{\r\n    context,\r\n    instance\r\n  }] = React.useState(() => {\r\n    const context = /*#__PURE__*/React.createContext(null);\r\n    return {\r\n      context,\r\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\r\n        context: context\r\n      }, props, {\r\n        ref: ref\r\n      })))\r\n    };\r\n  });\r\n  const parentRef = React.useRef(null);\r\n  const [instances, setInstances] = React.useState([]);\r\n  const [[matrices, colors]] = React.useState(() => {\r\n    const mArray = new Float32Array(limit * 16);\r\n\r\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\r\n\r\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\r\n  });\r\n  React.useEffect(() => {\r\n    // We might be a frame too late? \uD83E\uDD37\u200D\u2642\uFE0F\r\n    parentRef.current.instanceMatrix.needsUpdate = true;\r\n  });\r\n  let count = 0;\r\n  let updateRange = 0;\r\n  useFrame(() => {\r\n    if (frames === Infinity || count < frames) {\r\n      parentRef.current.updateMatrix();\r\n      parentRef.current.updateMatrixWorld();\r\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\r\n      updateRange = Math.min(limit, range !== undefined ? range : limit, instances.length);\r\n      parentRef.current.count = updateRange;\r\n      parentRef.current.instanceMatrix.updateRange.count = updateRange * 16;\r\n      parentRef.current.instanceColor.updateRange.count = updateRange * 3;\r\n\r\n      for (i = 0; i < instances.length; i++) {\r\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\r\n        // Instances will be double-transformed if <Instances> isn't at identity\r\n\r\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\r\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\r\n        instanceMatrix.toArray(matrices, i * 16);\r\n        parentRef.current.instanceMatrix.needsUpdate = true;\r\n        instanceRef.color.toArray(colors, i * 3);\r\n        parentRef.current.instanceColor.needsUpdate = true;\r\n      }\r\n\r\n      count++;\r\n    }\r\n  });\r\n  const api = React.useMemo(() => ({\r\n    getParent: () => parentRef,\r\n    subscribe: ref => {\r\n      setInstances(instances => [...instances, ref]);\r\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\r\n    }\r\n  }), []);\r\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\r\n    userData: {\r\n      instances\r\n    },\r\n    matrixAutoUpdate: false,\r\n    ref: mergeRefs([ref, parentRef]),\r\n    args: [null, null, 0],\r\n    raycast: () => null\r\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\r\n    attach: \"instanceMatrix\",\r\n    count: matrices.length / 16,\r\n    array: matrices,\r\n    itemSize: 16,\r\n    usage: THREE.DynamicDrawUsage\r\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\r\n    attach: \"instanceColor\",\r\n    count: colors.length / 3,\r\n    array: colors,\r\n    itemSize: 3,\r\n    usage: THREE.DynamicDrawUsage\r\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\r\n    value: api\r\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\r\n    value: api\r\n  }, children));\r\n});\r\n\r\nfunction Merged({\r\n  meshes,\r\n  children,\r\n  ...props\r\n}) {\r\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\r\n\r\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\r\n  return /*#__PURE__*/React.createElement(Composer, {\r\n    components: (isArray ? meshes : Object.values(meshes)).map(({\r\n      geometry,\r\n      material\r\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\r\n      key: geometry.uuid,\r\n      geometry: geometry,\r\n      material: material\r\n    }, props)))\r\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\r\n    [key]: args[i]\r\n  }), {})));\r\n}\r\n\r\nexport { Instance, Instances, Merged };\r\n", "import { cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Composer(props) {\r\n  return renderRecursive(props.children, props.components);\r\n}\r\n\r\nComposer.propTypes = {\r\n  children: PropTypes.func.isRequired,\r\n  components: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.func])).isRequired\r\n};\r\n\r\n/**\r\n * Recursively build up elements from props.components and accumulate `results` along the way.\r\n * @param {function} render\r\n * @param {Array.<ReactElement|Function>} remaining\r\n * @param {Array} [results]\r\n * @returns {ReactElement}\r\n */\r\nfunction renderRecursive(render, remaining, results) {\r\n  results = results || [];\r\n  // Once components is exhausted, we can render out the results array.\r\n  if (!remaining[0]) {\r\n    return render(results);\r\n  }\r\n\r\n  // Continue recursion for remaining items.\r\n  // results.concat([value]) ensures [...results, value] instead of [...results, ...value]\r\n  function nextRender(value) {\r\n    return renderRecursive(render, remaining.slice(1), results.concat([value]));\r\n  }\r\n\r\n  // Each props.components entry is either an element or function [element factory]\r\n  return typeof remaining[0] === 'function' ? // When it is a function, produce an element by invoking it with \"render component values\".\r\n  remaining[0]({ results: results, render: nextRender }) : // When it is an element, enhance the element's props with the render prop.\r\n  cloneElement(remaining[0], { children: nextRender });\r\n}", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { extend, useFrame } from '@react-three/fiber';\r\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\r\n\r\nconst context = /*#__PURE__*/React.createContext(null);\r\nconst Segments = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\r\n  React.useMemo(() => extend({\r\n    SegmentObject\r\n  }), []);\r\n  const {\r\n    limit = 1000,\r\n    lineWidth = 1.0,\r\n    children,\r\n    ...rest\r\n  } = props;\r\n  const [segments, setSegments] = React.useState([]);\r\n  const [line] = React.useState(() => new Line2());\r\n  const [material] = React.useState(() => new LineMaterial());\r\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\r\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\r\n  const [positions] = React.useState(() => Array(limit * 6).fill(0));\r\n  const [colors] = React.useState(() => Array(limit * 6).fill(0));\r\n  const api = React.useMemo(() => ({\r\n    subscribe: ref => {\r\n      setSegments(segments => [...segments, ref]);\r\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\r\n    }\r\n  }), []);\r\n  useFrame(() => {\r\n    for (let i = 0; i < limit; i++) {\r\n      var _segments$i;\r\n\r\n      const segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\r\n\r\n      if (segment) {\r\n        positions[i * 6 + 0] = segment.start.x;\r\n        positions[i * 6 + 1] = segment.start.y;\r\n        positions[i * 6 + 2] = segment.start.z;\r\n        positions[i * 6 + 3] = segment.end.x;\r\n        positions[i * 6 + 4] = segment.end.y;\r\n        positions[i * 6 + 5] = segment.end.z;\r\n        colors[i * 6 + 0] = segment.color.r;\r\n        colors[i * 6 + 1] = segment.color.g;\r\n        colors[i * 6 + 2] = segment.color.b;\r\n        colors[i * 6 + 3] = segment.color.r;\r\n        colors[i * 6 + 4] = segment.color.g;\r\n        colors[i * 6 + 5] = segment.color.b;\r\n      }\r\n    }\r\n\r\n    geometry.setColors(colors);\r\n    geometry.setPositions(positions);\r\n    line.computeLineDistances();\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"primitive\", {\r\n    object: line,\r\n    ref: forwardedRef\r\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\r\n    object: geometry,\r\n    attach: \"geometry\"\r\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: material,\r\n    attach: \"material\",\r\n    vertexColors: true,\r\n    resolution: resolution,\r\n    linewidth: lineWidth\r\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\r\n    value: api\r\n  }, children));\r\n});\r\nclass SegmentObject {\r\n  constructor() {\r\n    this.color = new THREE.Color('white');\r\n    this.start = new THREE.Vector3(0, 0, 0);\r\n    this.end = new THREE.Vector3(0, 0, 0);\r\n  }\r\n\r\n}\r\n\r\nconst normPos = pos => pos instanceof THREE.Vector3 ? pos : new THREE.Vector3(...(typeof pos === 'number' ? [pos, pos, pos] : pos));\r\n\r\nconst Segment = /*#__PURE__*/React.forwardRef(({\r\n  color,\r\n  start,\r\n  end\r\n}, forwardedRef) => {\r\n  const api = React.useContext(context);\r\n  if (!api) throw 'Segment must used inside Segments component.';\r\n  const ref = React.useRef(null);\r\n  React.useLayoutEffect(() => api.subscribe(ref), []);\r\n  return /*#__PURE__*/React.createElement(\"segmentObject\", {\r\n    ref: mergeRefs([ref, forwardedRef]),\r\n    color: color,\r\n    start: normPos(start),\r\n    end: normPos(end)\r\n  });\r\n});\r\n\r\nexport { Segment, SegmentObject, Segments };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nconst Detailed = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  distances,\r\n  ...props\r\n}, ref) => {\r\n  const lodRef = React.useRef(null);\r\n  React.useLayoutEffect(() => {\r\n    const {\r\n      current: lod\r\n    } = lodRef;\r\n    lod.levels.length = 0;\r\n    lod.children.forEach((object, index) => lod.levels.push({\r\n      object,\r\n      distance: distances[index]\r\n    }));\r\n  });\r\n  useFrame(state => {\r\n    var _lodRef$current;\r\n\r\n    return (_lodRef$current = lodRef.current) == null ? void 0 : _lodRef$current.update(state.camera);\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"lOD\", _extends({\r\n    ref: mergeRefs([lodRef, ref])\r\n  }, props), children);\r\n});\r\n\r\nexport { Detailed };\r\n", "import { WebGLCubeRenderTarget, CubeCamera } from 'three';\r\nimport * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\nfunction Preload({\r\n  all,\r\n  scene,\r\n  camera\r\n}) {\r\n  const gl = useThree(({\r\n    gl\r\n  }) => gl);\r\n  const dCamera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const dScene = useThree(({\r\n    scene\r\n  }) => scene); // Layout effect because it must run before React commits\r\n\r\n  React.useLayoutEffect(() => {\r\n    const invisible = [];\r\n\r\n    if (all) {\r\n      (scene || dScene).traverse(object => {\r\n        if (object.visible === false) {\r\n          invisible.push(object);\r\n          object.visible = true;\r\n        }\r\n      });\r\n    } // Now compile the scene\r\n\r\n\r\n    gl.compile(scene || dScene, camera || dCamera); // And for good measure, hit it with a cube camera\r\n\r\n    const cubeRenderTarget = new WebGLCubeRenderTarget(128);\r\n    const cubeCamera = new CubeCamera(0.01, 100000, cubeRenderTarget);\r\n    cubeCamera.update(gl, scene || dScene);\r\n    cubeRenderTarget.dispose(); // Flips these objects back\r\n\r\n    invisible.forEach(object => object.visible = false);\r\n  }, []);\r\n  return null;\r\n}\r\n\r\nexport { Preload };\r\n", "import { useEffect } from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\nfunction BakeShadows() {\r\n  const gl = useThree(state => state.gl);\r\n  useEffect(() => {\r\n    gl.shadowMap.autoUpdate = false;\r\n    gl.shadowMap.needsUpdate = true;\r\n    return () => {\r\n      gl.shadowMap.autoUpdate = gl.shadowMap.needsUpdate = true;\r\n    };\r\n  }, [gl.shadowMap]);\r\n  return null;\r\n}\r\n\r\nexport { BakeShadows };\r\n", "import { Matrix4, Ray, Sphere, Vector3 } from 'three';\r\n\r\nconst _inverseMatrix = new Matrix4();\r\n\r\nconst _ray = new Ray();\r\n\r\nconst _sphere = new Sphere();\r\n\r\nconst _vA = new Vector3();\r\n\r\nfunction meshBounds(raycaster, intersects) {\r\n  const geometry = this.geometry;\r\n  const material = this.material;\r\n  const matrixWorld = this.matrixWorld;\r\n  if (material === undefined) return; // Checking boundingSphere distance to ray\r\n\r\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n  _sphere.copy(geometry.boundingSphere);\r\n\r\n  _sphere.applyMatrix4(matrixWorld);\r\n\r\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\r\n\r\n  _inverseMatrix.copy(matrixWorld).invert();\r\n\r\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\r\n\r\n\r\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\r\n  intersects.push({\r\n    distance: _vA.distanceTo(raycaster.ray.origin),\r\n    point: _vA.clone(),\r\n    object: this\r\n  });\r\n}\r\n\r\nexport { meshBounds };\r\n", "import * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\nfunction AdaptiveDpr({\r\n  pixelated\r\n}) {\r\n  const gl = useThree(state => state.gl);\r\n  const active = useThree(state => state.internal.active);\r\n  const current = useThree(state => state.performance.current);\r\n  const initialDpr = useThree(state => state.viewport.initialDpr);\r\n  const setDpr = useThree(state => state.setDpr); // Restore initial pixelratio on unmount\r\n\r\n  React.useEffect(() => {\r\n    const domElement = gl.domElement;\r\n    return () => {\r\n      if (active) setDpr(initialDpr);\r\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\r\n    };\r\n  }, []); // Set adaptive pixelratio\r\n\r\n  React.useEffect(() => {\r\n    setDpr(current * initialDpr);\r\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated';\r\n  }, [current]);\r\n  return null;\r\n}\r\n\r\nexport { AdaptiveDpr };\r\n", "import * as React from 'react';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\nfunction AdaptiveEvents() {\r\n  const get = useThree(state => state.get);\r\n  const setEvents = useThree(state => state.setEvents);\r\n  const current = useThree(state => state.performance.current);\r\n  React.useEffect(() => {\r\n    const enabled = get().events.enabled;\r\n    return () => setEvents({\r\n      enabled\r\n    });\r\n  }, []);\r\n  React.useEffect(() => setEvents({\r\n    enabled: current === 1\r\n  }), [current]);\r\n  return null;\r\n}\r\n\r\nexport { AdaptiveEvents };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\r\nimport { useFBO } from './useFBO.js';\r\n\r\nconst RenderTexture = /*#__PURE__*/React.forwardRef(({\r\n  children,\r\n  width,\r\n  height,\r\n  renderPriority = 0,\r\n  eventPriority = 0,\r\n  frames = Infinity,\r\n  ...props\r\n}, forwardRef) => {\r\n  const {\r\n    size,\r\n    viewport\r\n  } = useThree();\r\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\r\n    samples: 8\r\n  });\r\n  const [vScene] = React.useState(() => new THREE.Scene());\r\n  const compute = React.useCallback((event, state, previous) => {\r\n    var _fbo$texture, _previous$previousRoo;\r\n\r\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\r\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\r\n    // next Object3D.\r\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\r\n\r\n    while (parent && !(parent instanceof THREE.Object3D)) {\r\n      parent = parent.__r3f.parent;\r\n    }\r\n\r\n    if (!parent) return false; // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\r\n\r\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState()); // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\r\n\r\n    const [intersection] = previous.raycaster.intersectObject(parent);\r\n    if (!intersection) return false; // We take that hits uv coords, set up this layers raycaster, et voil\u00E0, we have raycasting on arbitrary surfaces\r\n\r\n    const uv = intersection.uv;\r\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\r\n  }, []);\r\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\r\n    renderPriority: renderPriority,\r\n    frames: frames,\r\n    fbo: fbo\r\n  }, children), vScene, {\r\n    events: {\r\n      compute,\r\n      priority: eventPriority\r\n    }\r\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: fbo.texture\r\n  }, props)));\r\n}); // The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\r\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\r\n// it would return the default state.\r\n\r\nfunction Container({\r\n  frames,\r\n  renderPriority,\r\n  children,\r\n  fbo\r\n}) {\r\n  let count = 0;\r\n  useFrame(state => {\r\n    if (frames === Infinity || count < frames) {\r\n      state.gl.setRenderTarget(fbo);\r\n      state.gl.render(state.scene, state.camera);\r\n      state.gl.setRenderTarget(null);\r\n      count++;\r\n    }\r\n  }, renderPriority);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\r\n}\r\n\r\nexport { RenderTexture };\r\n", "import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as THREE from 'three';\r\nimport * as React from 'react';\r\n\r\nfunction Mask({\r\n  id = 1,\r\n  children,\r\n  colorWrite = false,\r\n  depthWrite = false,\r\n  ...props\r\n}) {\r\n  const spread = React.useMemo(() => ({\r\n    colorWrite,\r\n    depthWrite,\r\n    stencilWrite: true,\r\n    stencilRef: id,\r\n    stencilFunc: THREE.AlwaysStencilFunc,\r\n    stencilFail: THREE.ReplaceStencilOp,\r\n    stencilZFail: THREE.ReplaceStencilOp,\r\n    stencilZPass: THREE.ReplaceStencilOp\r\n  }), [id, colorWrite, depthWrite]);\r\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\r\n    renderOrder: -id\r\n  }, props), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", spread), typeof children === 'function' ? children(spread) : children);\r\n}\r\nfunction useMask(id, inverse = false) {\r\n  return {\r\n    stencilWrite: true,\r\n    stencilRef: id,\r\n    stencilFunc: inverse ? THREE.NotEqualStencilFunc : THREE.EqualStencilFunc,\r\n    stencilFail: THREE.KeepStencilOp,\r\n    stencilZFail: THREE.KeepStencilOp,\r\n    stencilZPass: THREE.KeepStencilOp\r\n  };\r\n}\r\n\r\nexport { Mask, useMask };\r\n", "import * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\r\n\r\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\r\n\r\nconst col = new THREE.Color();\r\n\r\nfunction Container({\r\n  canvasSize,\r\n  scene,\r\n  index,\r\n  children,\r\n  frames,\r\n  rect,\r\n  track\r\n}) {\r\n  const get = useThree(state => state.get);\r\n  const camera = useThree(state => state.camera);\r\n  const virtualScene = useThree(state => state.scene);\r\n  const setEvents = useThree(state => state.setEvents);\r\n  let frameCount = 0;\r\n  useFrame(state => {\r\n    if (frames === Infinity || frameCount <= frames) {\r\n      var _track$current;\r\n\r\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\r\n      frameCount++;\r\n    }\r\n\r\n    if (rect.current) {\r\n      const {\r\n        left,\r\n        right,\r\n        top,\r\n        bottom,\r\n        width,\r\n        height\r\n      } = rect.current;\r\n      const isOffscreen = bottom < 0 || top > canvasSize.height || right < 0 || left > canvasSize.width;\r\n      const positiveYUpBottom = canvasSize.height - bottom;\r\n      const aspect = width / height;\r\n\r\n      if (isOrthographicCamera(camera)) {\r\n        if (camera.left !== width / -2 || camera.right !== width / 2 || camera.top !== height / 2 || camera.bottom !== height / -2) {\r\n          Object.assign(camera, {\r\n            left: width / -2,\r\n            right: width / 2,\r\n            top: height / 2,\r\n            bottom: height / -2\r\n          });\r\n          camera.updateProjectionMatrix();\r\n        }\r\n      } else if (camera.aspect !== aspect) {\r\n        camera.aspect = aspect;\r\n        camera.updateProjectionMatrix();\r\n      }\r\n\r\n      state.gl.setViewport(left, positiveYUpBottom, width, height);\r\n      state.gl.setScissor(left, positiveYUpBottom, width, height);\r\n      state.gl.setScissorTest(true);\r\n\r\n      if (isOffscreen) {\r\n        state.gl.getClearColor(col);\r\n        state.gl.setClearColor(col, state.gl.getClearAlpha());\r\n        state.gl.clear(true, true);\r\n        return;\r\n      } // When children are present render the portalled scene, otherwise the default scene\r\n\r\n\r\n      state.gl.render(children ? virtualScene : scene, camera);\r\n    }\r\n  }, index);\r\n  React.useEffect(() => {\r\n    // Connect the event layer to the tracking element\r\n    const old = get().events.connected;\r\n    setEvents({\r\n      connected: track.current\r\n    });\r\n    return () => setEvents({\r\n      connected: old\r\n    });\r\n  }, []);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\r\n}\r\n\r\nconst View = ({\r\n  track,\r\n  index = 1,\r\n  frames = Infinity,\r\n  children\r\n}) => {\r\n  const rect = React.useRef(null);\r\n  const {\r\n    size,\r\n    scene\r\n  } = useThree();\r\n  const [virtualScene] = React.useState(() => new THREE.Scene());\r\n  const compute = React.useCallback((event, state) => {\r\n    if (track.current && event.target === track.current) {\r\n      const {\r\n        width,\r\n        height,\r\n        left,\r\n        top\r\n      } = rect.current;\r\n      const x = event.clientX - left;\r\n      const y = event.clientY - top;\r\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\r\n      state.raycaster.setFromCamera(state.pointer, state.camera);\r\n    }\r\n  }, [rect]);\r\n  const [ready, toggle] = React.useReducer(() => true, false);\r\n  React.useEffect(() => {\r\n    var _track$current2;\r\n\r\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\r\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect(); // And now we can proceed\r\n\r\n    toggle();\r\n  }, []);\r\n  return ready && createPortal( /*#__PURE__*/React.createElement(Container, {\r\n    canvasSize: size,\r\n    frames: frames,\r\n    scene: scene,\r\n    track: track,\r\n    rect: rect,\r\n    index: index\r\n  }, children), virtualScene, {\r\n    events: {\r\n      compute,\r\n      priority: index\r\n    },\r\n    size: {\r\n      width: rect.current.width,\r\n      height: rect.current.height\r\n    }\r\n  });\r\n};\r\n\r\nexport { View };\r\n"],
  "mappings": "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",
  "names": []
}
